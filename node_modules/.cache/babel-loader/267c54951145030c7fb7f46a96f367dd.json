{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanping/Documents/LPRestakingFarm/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LpToken from '../abis/LpToken.json';\nimport IPancakePair from '../abis/IPancakePair.json';\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json';\nimport RestakingFarm from '../abis/RestakingFarm.json';\nimport PurseFarm from '../farm/farmPurse.json';\nimport Navb from './Navbar';\nimport Main from './Main';\nimport Menu from './Menu';\nimport Oneinch from './1inch';\nimport Deposit from './Deposit';\nimport Popup from './Popup';\nimport Farm from './Farm';\nimport Distribution from './Distribution';\nimport Stake from './Stake';\nimport './Popup.css';\nimport './App.css';\nimport PurseStaking from '../abis/PurseStaking.json';\nimport PurseToken from '../abis/PurseTokenTest.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadFarmData();\n\n              case 4:\n                _context.next = 6;\n                return this.loadBlockchainData();\n\n              case 6:\n                this.loadTVLAPR();\n\n              case 7:\n                if (!((this.state.wallet || this.state.walletConnect) == true)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.loadBlockchainUserData();\n\n              case 10:\n                _context.next = 12;\n                return this.delay(10000);\n\n              case 12:\n                _context.next = 7;\n                break;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadFarmData\",\n    value: function () {\n      var _loadFarmData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var farm;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                farm = PurseFarm.farm;\n                this.setState({\n                  farm: farm\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadFarmData() {\n        return _loadFarmData.apply(this, arguments);\n      }\n\n      return loadFarmData;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3Bsc, networkId, farmNetwork, chainId, mongoResponse0, mongoResponse1, mongoResponse2, coingeckoResponse, myJson, myJson1, myJson2, myJson3, PURSEPrice, USDTPrice, USDCPrice, BNBPrice, WETHPrice, BUSDPrice, BTCPrice, totalTransferAmount, sum30TransferAmount, totalBurnAmount, sum30BurnAmount, cumulateTransfer, cumulateBurn, purseStaking, purseToken;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3Bsc = window.web3Bsc; //const networkId = \"56\"\n\n                networkId = \"97\";\n                this.setState({\n                  networkId: networkId\n                });\n                farmNetwork = \"MAINNET\";\n                this.setState({\n                  farmNetwork: farmNetwork\n                });\n\n                if (!(this.state.metamask == true && this.state.walletConnect == false)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 8;\n                return window.ethereum.request({\n                  method: 'eth_chainId'\n                });\n\n              case 8:\n                chainId = _context3.sent;\n                this.setState({\n                  chainId: chainId\n                });\n\n                if (this.state.chainId == \"0x61\") {\n                  this.setState({\n                    networkName: \"BSC Testnet\"\n                  });\n                } else if (this.state.chainId == \"0x38\") {\n                  this.setState({\n                    networkName: \"BSC\"\n                  });\n                } else if (this.state.chainId == \"0x1\") {\n                  this.setState({\n                    networkName: \"Ethereum\"\n                  });\n                } else if (this.state.chainId == \"0x3\") {\n                  this.setState({\n                    networkName: \"Ropsten\"\n                  });\n                } else if (this.state.chainId == \"0x4\") {\n                  this.setState({\n                    networkName: \"Rinkeby\"\n                  });\n                } else if (this.state.chainId == \"0x2a\") {\n                  this.setState({\n                    networkName: \"Kovan\"\n                  });\n                } else if (this.state.chainId == \"0x89\") {\n                  this.setState({\n                    networkName: \"Polygon\"\n                  });\n                } else if (this.state.chainId == \"0x13881\") {\n                  this.setState({\n                    networkName: \"Mumbai\"\n                  });\n                } else if (this.state.chainId == \"0xa869\") {\n                  this.setState({\n                    networkName: \"Fuji\"\n                  });\n                } else if (this.state.chainId == \"0xa86a\") {\n                  this.setState({\n                    networkName: \"Avalanche\"\n                  });\n                }\n\n                window.ethereum.on('chainChanged', this.handleChainChanged);\n                window.ethereum.on('accountsChanged', this.handleAccountsChanged);\n                _context3.next = 16;\n                break;\n\n              case 15:\n                if (this.state.metamask == false && this.state.walletConnect == false) {\n                  this.setState({\n                    chainID: \"0x\"\n                  });\n                  this.setState({\n                    networkName: \"Unavailable\"\n                  });\n                }\n\n              case 16:\n                mongoResponse0 = this.loadBDL();\n                mongoResponse1 = this.loadAccumulateTransfer();\n                mongoResponse2 = this.loadAccumulateBurn();\n                coingeckoResponse = this.loadApiPrice();\n                _context3.next = 22;\n                return mongoResponse0;\n\n              case 22:\n                myJson = _context3.sent;\n                _context3.next = 25;\n                return mongoResponse1;\n\n              case 25:\n                myJson1 = _context3.sent;\n                _context3.next = 28;\n                return mongoResponse2;\n\n              case 28:\n                myJson2 = _context3.sent;\n                _context3.next = 31;\n                return coingeckoResponse;\n\n              case 31:\n                myJson3 = _context3.sent;\n                PURSEPrice = myJson3[\"pundi-x-purse\"][\"usd\"];\n                this.setState({\n                  PURSEPrice: PURSEPrice.toFixed(7)\n                });\n                USDTPrice = myJson3[\"tether\"][\"usd\"];\n                this.setState({\n                  USDTPrice: USDTPrice.toFixed(7)\n                });\n                USDCPrice = myJson3[\"usd-coin\"][\"usd\"];\n                this.setState({\n                  USDCPrice: USDCPrice.toFixed(7)\n                });\n                BNBPrice = myJson3[\"binancecoin\"][\"usd\"];\n                this.setState({\n                  BNBPrice: BNBPrice.toFixed(7)\n                });\n                WETHPrice = myJson3[\"weth\"][\"usd\"];\n                this.setState({\n                  WETHPrice: WETHPrice.toFixed(7)\n                });\n                BUSDPrice = myJson3[\"binance-usd\"][\"usd\"];\n                this.setState({\n                  BUSDPrice: BUSDPrice.toFixed(7)\n                });\n                BTCPrice = myJson3[\"bitcoin\"][\"usd\"];\n                this.setState({\n                  BTCPrice: BTCPrice.toFixed(7)\n                });\n                totalTransferAmount = myJson[\"TransferTotal\"];\n                sum30TransferAmount = myJson[\"Transfer30Days\"];\n                totalBurnAmount = myJson[\"BurnTotal\"];\n                sum30BurnAmount = myJson[\"Burn30Days\"];\n                cumulateTransfer = myJson1;\n                cumulateBurn = myJson2;\n                this.setState({\n                  totalBurnAmount: totalBurnAmount\n                });\n                this.setState({\n                  sum30BurnAmount: sum30BurnAmount\n                });\n                this.setState({\n                  totalTransferAmount: totalTransferAmount\n                });\n                this.setState({\n                  sum30TransferAmount: sum30TransferAmount\n                });\n                this.setState({\n                  cumulateTransfer: cumulateTransfer\n                });\n                this.setState({\n                  cumulateBurn: cumulateBurn\n                }); // Load contract\n\n                /*const pancakeContract = new window.web3Bsc.eth.Contract(IPancakePair.abi, \"0x081F4B87F223621B4B31cB7A727BB583586eAD98\")\r\n                const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\") //mainnet\r\n                const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, \"0x439ec8159740a9b9a579f286963ac1c050af31c8\")*/\n\n                purseStaking = new window.web3Bsc.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\");\n                purseToken = new window.web3Bsc.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n                /*this.setState({ purseTokenUpgradable })\r\n                this.setState({ restakingFarm })\r\n                this.setState({ pancakeContract })*/\n\n                this.setState({\n                  purseStaking: purseStaking\n                });\n                this.setState({\n                  purseToken: purseToken\n                });\n\n                if (this.state.wallet == false && this.state.walletConnect == false) {\n                  /*let farmResponse0 = this.loadStakedBalance()\r\n                  let farmResponse1 = this.loadPurseTokenTotalSupply()\r\n                  let farmResponse2 = this.loadPoolRewardToken()\r\n                    let response0 = this.loadRewardEndTime()\r\n                  let response1 = this.loadRewardStartTime()\r\n                  let response2 = this.loadDistributedAmount()\r\n                  let response3 = this.loadDistributedPercentage()\r\n                  let response4 = this.loadPoolCapRewardToken()\r\n                  let response5 = this.loadPoolMintedRewardToken()\r\n                  let response6 = this.loadPoolLength()\r\n                    let stakedBalance = await farmResponse0\r\n                  let purseTokenTotalSupply = await farmResponse1\r\n                  let poolRewardToken = await farmResponse2\r\n                    let rewardEndTime = await response0\r\n                  let rewardStartTime = await response1\r\n                  let distributedAmount = await response2\r\n                  let distributedPercentage = await response3\r\n                  let poolCapRewardToken = await response4\r\n                  let poolMintedRewardToken = await response5\r\n                  let poolLength = await response6\r\n                  let rewardStartTimeDate = this.timeConverter(rewardStartTime)\r\n                  let rewardEndTimeDate = this.timeConverter(rewardEndTime)\r\n                    this.setState({ stakedBalance: stakedBalance.toString() })\r\n                  this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n                  this.setState({ poolRewardToken: poolRewardToken.toString() })\r\n                  this.setState({ poolCapRewardToken })\r\n                  this.setState({ poolMintedRewardToken })\r\n                  this.setState({ poolLength })\r\n                    let totalrewardperblock = 0\r\n                  let purseTokenUpgradableBalance = 0\r\n                  let poolSegmentInfo = [[], []]\r\n                  let lpTokenSegmentBalance = [[], []]\r\n                  let userSegmentInfo = [[], []]\r\n                  let pendingSegmentReward = [[], []]\r\n                    let lpTokenAddresses = []\r\n                  let lpTokenPairsymbols = []\r\n                    let n = 0\r\n                  let i = 0\r\n                    for (i = 0; i < poolLength; i++) {\r\n                    let poolInfo = this.state.farm[i]\r\n                    let lpTokenBalance = 0\r\n                    totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolInfo.bonusMultiplier)\r\n                    lpTokenAddresses[i] = poolInfo.lpAddresses[this.state.networkId]\r\n                    lpTokenPairsymbols[i] = poolInfo.lpTokenPairsymbol\r\n                      if (poolInfo.lpTokenPairsymbol == \"Cake-LP\") {\r\n                      userSegmentInfo[0][n] = \"\"\r\n                      pendingSegmentReward[0][n] = \"\"\r\n                      poolSegmentInfo[0][n] = poolInfo\r\n                      lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n                      n += 1\r\n                    } else {\r\n                      userSegmentInfo[1][n] = \"\"\r\n                      pendingSegmentReward[1][n] = \"\"\r\n                      poolSegmentInfo[1][n] = poolInfo\r\n                      lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n                      n += 1\r\n                    }\r\n                  }\r\n                    this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n                  this.setState({ poolSegmentInfo })\r\n                  this.setState({ lpTokenSegmentBalance })\r\n                  this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n                  this.setState({ pendingSegmentReward: [[], []] })\r\n                  this.setState({ userSegmentInfo: [[], []] })\r\n                  this.setState({ totalpendingReward: \"0\" })\r\n                    this.setState({ lpTokenAddresses })\r\n                  this.setState({ lpTokenPairsymbols })\r\n                    this.setState({ rewardStartTime })\r\n                  this.setState({ rewardEndTime })\r\n                  this.setState({ rewardStartTimeDate })\r\n                  this.setState({ rewardEndTimeDate })\r\n                  this.setState({ distributedAmount })\r\n                  this.setState({ distributedPercentage })\r\n                  this.setState({ farmLoading: true })*/\n                }\n\n              case 63:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() // ##############################################################################################################################\n\n  }, {\n    key: \"loadBlockchainUserData\",\n    value: function () {\n      var _loadBlockchainUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var purseStakingUserInfo, purseStakingUserStake, purseStakingUserAllowance, purseStakingUserPurse, purseStakingTotalStake, purseStakingTotalReceipt;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.loadPurseStakingUserInfo();\n\n              case 2:\n                purseStakingUserInfo = _context4.sent;\n                _context4.next = 5;\n                return this.loadPurseStakingUserStake();\n\n              case 5:\n                purseStakingUserStake = _context4.sent;\n                _context4.next = 8;\n                return this.loadPurseStakingUserAllowance();\n\n              case 8:\n                purseStakingUserAllowance = _context4.sent;\n                _context4.next = 11;\n                return this.loadPurseStakingUserPurse();\n\n              case 11:\n                purseStakingUserPurse = _context4.sent;\n                _context4.next = 14;\n                return this.loadPurseStakingTotalStake();\n\n              case 14:\n                purseStakingTotalStake = _context4.sent;\n                _context4.next = 17;\n                return this.loadPurseStakingTotalReceipt();\n\n              case 17:\n                purseStakingTotalReceipt = _context4.sent;\n                this.setState({\n                  purseStakingUserReceipt: purseStakingUserInfo.toString()\n                });\n                this.setState({\n                  purseStakingUserStake: purseStakingUserStake.toString()\n                });\n                this.setState({\n                  purseStakingUserAllowance: purseStakingUserAllowance.toString()\n                });\n                this.setState({\n                  purseStakingUserPurse: purseStakingUserPurse.toString()\n                });\n                this.setState({\n                  purseStakingTotalStake: purseStakingTotalStake.toString()\n                });\n                this.setState({\n                  purseStakingTotalReceipt: purseStakingTotalReceipt.toString()\n                }); // Load PurseTokenUpgradable\n\n                /*let userResponse0 = this.loadPurseTokenBalance()\r\n                let userResponse1 = this.checkClaimAmount(this.state.account)\r\n                let purseTokenUpgradableBalance = await userResponse0\r\n                let claimAmount = await userResponse1\r\n                  this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n                this.setState({ claimAmount })\r\n                  let totalpendingReward = 0\r\n                let userSegmentInfo = [[], []]\r\n                let lpTokenSegmentBalance = [[], []]\r\n                let lpTokenSegmentAllowance = [[], []]\r\n                let pendingSegmentReward = [[], []]\r\n                let n = 0\r\n                let i = 0\r\n                  let response0 = []\r\n                let response1 = []\r\n                let response2 = []\r\n                let response3 = []\r\n                  for (i = 0; i < this.state.poolLength; i++) {\r\n                  response0[i] = this.loadUserInfo(i)\r\n                  response1[i] = this.loadLpTokenBalance(i)\r\n                  response2[i] = this.loadLpTokenAllowance(i)\r\n                  response3[i] = this.loadPendingReward(i)\r\n                }\r\n                  for (i = 0; i < this.state.poolLength; i++) {\r\n                    let userInfo = await response0[i]\r\n                  let lpTokenBalance = await response1[i]\r\n                  let lpTokenAllowance = await response2[i]\r\n                  let pendingReward = await response3[i]\r\n                  totalpendingReward += parseInt(pendingReward)\r\n                    if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n                    userSegmentInfo[0][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n                    lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n                    lpTokenSegmentAllowance[0][n] = lpTokenAllowance\r\n                    pendingSegmentReward[0][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n                    n += 1\r\n                  } else {\r\n                    userSegmentInfo[1][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n                    lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n                    lpTokenSegmentAllowance[1][n] = lpTokenAllowance\r\n                    pendingSegmentReward[1][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n                    n += 1\r\n                  }\r\n                }\r\n                  this.setState({ lpTokenSegmentBalance })\r\n                this.setState({ pendingSegmentReward })\r\n                this.setState({ lpTokenSegmentAllowance })\r\n                this.setState({ userSegmentInfo })\r\n                this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n                this.setState({ farmLoading: true })*/\n\n              case 24:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockchainUserData() {\n        return _loadBlockchainUserData.apply(this, arguments);\n      }\n\n      return loadBlockchainUserData;\n    }() // ***************************Farm Info***********************************************************************\n\n    /*async loadRewardEndTime() {\r\n      let rewardEndTime = await this.state.purseTokenUpgradable.methods._getRewardEndTime().call()\r\n      return rewardEndTime\r\n    }\r\n      async loadRewardStartTime() {\r\n      let rewardStartTime = await this.state.purseTokenUpgradable.methods._getRewardStartTime().call()\r\n      return rewardStartTime\r\n    }\r\n      async loadDistributedAmount() {\r\n      let distributedAmount = await this.state.purseTokenUpgradable.methods._monthlyDistributePr().call()\r\n      return distributedAmount\r\n    }\r\n      async loadDistributedPercentage() {\r\n      let distributedPercentage = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n      return distributedPercentage\r\n    }\r\n      async loadPurseTotalSupply() {\r\n      let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods._totalSupply().call()\r\n      return purseTokenTotalSupply\r\n    }\r\n      async loadPoolCapRewardToken() {\r\n      let poolCapRewardToken = await this.state.restakingFarm.methods.capMintToken().call()\r\n      return poolCapRewardToken\r\n    }\r\n      async loadPoolMintedRewardToken() {\r\n      let poolMintedRewardToken = await this.state.restakingFarm.methods.totalMintToken().call()\r\n      return poolMintedRewardToken\r\n    }\r\n      async loadPoolLength() {\r\n      let poolLength = await this.state.restakingFarm.methods.poolLength().call()\r\n      return poolLength\r\n    }*/\n\n  }, {\n    key: \"loadApiPrice\",\n    value: function () {\n      var _loadApiPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var coingeckoResponse;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd\");\n\n              case 2:\n                coingeckoResponse = _context5.sent;\n                return _context5.abrupt(\"return\", coingeckoResponse.json());\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function loadApiPrice() {\n        return _loadApiPrice.apply(this, arguments);\n      }\n\n      return loadApiPrice;\n    }()\n  }, {\n    key: \"loadBDL\",\n    value: function () {\n      var _loadBDL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var mongoResponse0;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/PundiX\");\n\n              case 2:\n                mongoResponse0 = _context6.sent;\n                return _context6.abrupt(\"return\", mongoResponse0.json());\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function loadBDL() {\n        return _loadBDL.apply(this, arguments);\n      }\n\n      return loadBDL;\n    }()\n  }, {\n    key: \"loadAccumulateTransfer\",\n    value: function () {\n      var _loadAccumulateTransfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var mongoResponse1;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeTransfer\");\n\n              case 2:\n                mongoResponse1 = _context7.sent;\n                return _context7.abrupt(\"return\", mongoResponse1.json());\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function loadAccumulateTransfer() {\n        return _loadAccumulateTransfer.apply(this, arguments);\n      }\n\n      return loadAccumulateTransfer;\n    }()\n  }, {\n    key: \"loadAccumulateBurn\",\n    value: function () {\n      var _loadAccumulateBurn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var mongoResponse2;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeBurn\");\n\n              case 2:\n                mongoResponse2 = _context8.sent;\n                return _context8.abrupt(\"return\", mongoResponse2.json());\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function loadAccumulateBurn() {\n        return _loadAccumulateBurn.apply(this, arguments);\n      }\n\n      return loadAccumulateBurn;\n    }()\n    /*async loadStakedBalance() {\r\n      let stakedBalance = await this.state.pancakeContract.methods.balanceOf(\"0x439ec8159740a9B9a579F286963Ac1C050aF31C8\").call()\r\n      stakedBalance = window.web3Bsc.utils.fromWei(stakedBalance, 'Ether')\r\n      return stakedBalance\r\n    }\r\n      async loadPurseTokenTotalSupply() {\r\n      let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods.totalSupply().call()\r\n      return purseTokenTotalSupply\r\n    }\r\n      async loadPoolRewardToken() {\r\n      let poolRewardToken = await this.state.purseTokenUpgradable.methods.balanceOf(\"0x439ec8159740a9b9a579f286963ac1c050af31c8\").call()\r\n      return poolRewardToken\r\n    }\r\n    \r\n      // ***************************User Info***********************************************************************\r\n      async loadPurseTokenBalance() {\r\n      let purseTokenBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n      return purseTokenBalance\r\n    }\r\n      async loadUserInfo(i) {\r\n      let userInfo = await this.state.restakingFarm.methods.userInfo(this.state.lpTokenAddresses[i], this.state.account).call()\r\n      return userInfo\r\n    }\r\n      async loadLpTokenBalance(i) {\r\n      let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n      let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n      return lpTokenBalance\r\n    }\r\n      async loadLpTokenAllowance(i) {\r\n      let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n      let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call()\r\n      return lpTokenAllowance\r\n    }\r\n      async loadPendingReward(i) {\r\n      let pendingReward = await this.state.restakingFarm.methods.pendingReward(this.state.lpTokenAddresses[i], this.state.account).call()\r\n      return pendingReward\r\n    }\r\n      // *************************** Distribution Reward Info ***********************************************************************\r\n      async loadLastRewardStartTime() {\r\n      let lastRewardStartTime = await this.state.purseTokenUpgradable.methods._lastRewardStartTime().call()\r\n      return lastRewardStartTime\r\n    }\r\n      async loadNumOfDays() {\r\n      let numOfDays = await this.state.purseTokenUpgradable.methods._numOfDaysPerMth().call()\r\n      return numOfDays\r\n    }\r\n      async loadPercentageDis() {\r\n      let percentageDis = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n      return percentageDis\r\n    }\r\n      async loadAverageInterval() {\r\n      let averageInterval = await this.state.purseTokenUpgradable.methods._averageInterval().call()\r\n      return averageInterval\r\n    }\r\n      async loadUserRewardInfo(address) {\r\n      let userRewardInfo = await this.state.purseTokenUpgradable.methods.accAmount(address).call()\r\n      return userRewardInfo\r\n    }\r\n      async loadUserBalance(address) {\r\n      let userBalance = await this.state.purseTokenUpgradable.methods.balanceOf(address).call()\r\n      // userBalance = window.web3Bsc.utils.fromWei(userBalance, 'Ether')\r\n      return userBalance\r\n    }*/\n    // ***********************************Purse Staking***************************************************************\n\n  }, {\n    key: \"loadPurseStakingUserInfo\",\n    value: function () {\n      var _loadPurseStakingUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var purseStakingUserInfo;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.state.purseStaking.methods.userInfo(this.state.account).call();\n\n              case 2:\n                purseStakingUserInfo = _context9.sent;\n                return _context9.abrupt(\"return\", purseStakingUserInfo);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function loadPurseStakingUserInfo() {\n        return _loadPurseStakingUserInfo.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserInfo;\n    }()\n  }, {\n    key: \"loadPurseStakingUserStake\",\n    value: function () {\n      var _loadPurseStakingUserStake = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var purseStakingUserPurse;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.state.purseStaking.methods.getTotalPurse(this.state.account).call();\n\n              case 2:\n                purseStakingUserPurse = _context10.sent;\n                return _context10.abrupt(\"return\", purseStakingUserPurse);\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function loadPurseStakingUserStake() {\n        return _loadPurseStakingUserStake.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserStake;\n    }()\n  }, {\n    key: \"loadPurseStakingUserAllowance\",\n    value: function () {\n      var _loadPurseStakingUserAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var purseStakingUserAllowance;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.state.purseToken.methods.allowance(this.state.account, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\").call();\n\n              case 2:\n                purseStakingUserAllowance = _context11.sent;\n                return _context11.abrupt(\"return\", purseStakingUserAllowance);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function loadPurseStakingUserAllowance() {\n        return _loadPurseStakingUserAllowance.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserAllowance;\n    }()\n  }, {\n    key: \"loadPurseStakingUserPurse\",\n    value: function () {\n      var _loadPurseStakingUserPurse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var purseStakingUserPurse;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.state.purseToken.methods.balanceOf(this.state.account).call();\n\n              case 2:\n                purseStakingUserPurse = _context12.sent;\n                return _context12.abrupt(\"return\", purseStakingUserPurse);\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function loadPurseStakingUserPurse() {\n        return _loadPurseStakingUserPurse.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserPurse;\n    }()\n  }, {\n    key: \"loadPurseStakingTotalReceipt\",\n    value: function () {\n      var _loadPurseStakingTotalReceipt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var purseStakingTotalReceipt;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.state.purseStaking.methods.totalReceiptSupply().call();\n\n              case 2:\n                purseStakingTotalReceipt = _context13.sent;\n                return _context13.abrupt(\"return\", purseStakingTotalReceipt);\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function loadPurseStakingTotalReceipt() {\n        return _loadPurseStakingTotalReceipt.apply(this, arguments);\n      }\n\n      return loadPurseStakingTotalReceipt;\n    }()\n  }, {\n    key: \"loadPurseStakingTotalStake\",\n    value: function () {\n      var _loadPurseStakingTotalStake = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var purseStakingTotalReceipt;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return this.state.purseToken.methods.balanceOf(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\").call();\n\n              case 2:\n                purseStakingTotalReceipt = _context14.sent;\n                return _context14.abrupt(\"return\", purseStakingTotalReceipt);\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function loadPurseStakingTotalStake() {\n        return _loadPurseStakingTotalStake.apply(this, arguments);\n      }\n\n      return loadPurseStakingTotalStake;\n    }() // ***************************TVL & APR***********************************************************************\n\n  }, {\n    key: \"loadTVLAPR\",\n    value: function () {\n      var _loadTVLAPR = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var tvl, apr, apyDaily, apyWeekly, apyMonthly, n, response, myJson, tvlArray, aprArray, apyArray, i;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                // Load bavaMasterFarmer\n                tvl = [[], []];\n                apr = [[], []];\n                apyDaily = [[], []];\n                apyWeekly = [[], []];\n                apyMonthly = [[], []];\n                n = 0;\n                _context15.next = 8;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/TVLAPR\");\n\n              case 8:\n                response = _context15.sent;\n                _context15.next = 11;\n                return response.json();\n\n              case 11:\n                myJson = _context15.sent;\n                tvlArray = myJson[\"TVL\"];\n                aprArray = myJson[\"APR\"];\n                apyArray = myJson[\"APYDaily\"];\n\n                for (i = 0; i < this.state.poolLength; i++) {\n                  if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\n                    tvl[0][n] = tvlArray;\n                    apr[0][n] = aprArray;\n                    apyDaily[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 36500, 365) - 1) * 100;\n                    apyWeekly[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 5200, 52) - 1) * 100;\n                    apyMonthly[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 1200, 12) - 1) * 100;\n                    n += 1;\n                  } else {\n                    tvl[1][n] = tvlArray;\n                    apr[1][n] = aprArray;\n                    apyDaily[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 36500, 365) - 1) * 100;\n                    apyWeekly[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 5200, 52) - 1) * 100;\n                    apyMonthly[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 1200, 12) - 1) * 100;\n                    n += 1;\n                  }\n                }\n\n                this.setState({\n                  tvl: tvl\n                });\n                this.setState({\n                  apr: apr\n                });\n                this.setState({\n                  apyDaily: apyDaily\n                });\n                this.setState({\n                  apyWeekly: apyWeekly\n                });\n                this.setState({\n                  apyMonthly: apyMonthly\n                });\n                this.setState({\n                  aprloading: true\n                });\n\n              case 22:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function loadTVLAPR() {\n        return _loadTVLAPR.apply(this, arguments);\n      }\n\n      return loadTVLAPR;\n    }() // ***********************************************************************************************************\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.ethereum); // await window.ethereum.enable()\n\n                  this.setState({\n                    metamask: true\n                  });\n                } else if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                  this.setState({\n                    metamask: true\n                  });\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                  this.setState({\n                    metamask: false\n                  });\n                  this.setState({\n                    wallet: false\n                  });\n                }\n\n                window.web3Bsc = new Web3(\"https://data-seed-prebsc-1-s2.binance.org:8545/\"); // testnet\n                //window.web3Bsc = new Web3(`https://bsc-dataseed.binance.org/`);\n\n              case 2:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.connectWallet = function () {\n      if (_this.state.metamask == true) {\n        window.ethereum.request({\n          method: 'eth_requestAccounts'\n        }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n          var chainId;\n          return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n            while (1) {\n              switch (_context17.prev = _context17.next) {\n                case 0:\n                  _context17.next = 2;\n                  return _this.switchNetwork();\n\n                case 2:\n                  _context17.next = 4;\n                  return window.ethereum.request({\n                    method: 'eth_chainId'\n                  });\n\n                case 4:\n                  chainId = _context17.sent;\n\n                  if (chainId == \"0x61\") {\n                    // mainnet: 0x38, testnet: 0x61\n                    _this.setWalletTrigger(true);\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }\n          }, _callee17);\n        }))).catch(function (err) {\n          if (err.code === 4001) {// EIP-1193 userRejectedRequest error\n            // If this happens, the user rejected the connection request.\n          } else {\n            console.error(\"error\");\n            console.error(err);\n          }\n        });\n      } else {\n        alert(\"No Metamask provider was found\");\n      }\n    };\n\n    _this.WalletConnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n      var provider, networkId, accounts, first4Account, last4Account;\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              provider = new WalletConnectProvider({\n                rpc: {\n                  97: \"https://data-seed-prebsc-1-s3.binance.org:8545/\" //56: `https://bsc-dataseed.binance.org/`\n\n                },\n                chainId: 97 //chainId: 56,\n\n              });\n              window.provider = provider;\n              _context20.next = 4;\n              return window.provider.enable();\n\n            case 4:\n              _context20.next = 6;\n              return new Web3(window.provider);\n\n            case 6:\n              window.web3Con = _context20.sent;\n              _context20.next = 9;\n              return window.web3Con.eth.net.getId();\n\n            case 9:\n              networkId = _context20.sent;\n\n              if (!(networkId != 97)) {\n                _context20.next = 15;\n                break;\n              }\n\n              alert(\"You're connected to an unsupported network.\");\n\n              _this.WalletDisconnect();\n\n              _context20.next = 26;\n              break;\n\n            case 15:\n              _context20.next = 17;\n              return window.web3Con.eth.getAccounts();\n\n            case 17:\n              accounts = _context20.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              first4Account = _this.state.account.substring(0, 4);\n              last4Account = _this.state.account.slice(-4);\n\n              _this.setState({\n                first4Account: first4Account\n              });\n\n              _this.setState({\n                last4Account: last4Account\n              });\n\n              _this.setState({\n                walletConnect: true\n              });\n\n              _this.setState({\n                networkName: \"BSC\"\n              });\n\n              _this.componentWillMount();\n\n            case 26:\n              // Subscribe to accounts change\n              window.provider.on(\"accountsChanged\", _this.handleAccountsChanged); // Subscribe to session disconnection\n\n              window.provider.on(\"disconnect\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n                return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                  while (1) {\n                    switch (_context18.prev = _context18.next) {\n                      case 0:\n                        _context18.next = 2;\n                        return _this.WalletDisconnect();\n\n                      case 2:\n                      case \"end\":\n                        return _context18.stop();\n                    }\n                  }\n                }, _callee18);\n              })));\n              window.provider.on(\"chainChanged\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n                return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n                  while (1) {\n                    switch (_context19.prev = _context19.next) {\n                      case 0:\n                        _context19.next = 2;\n                        return _this.WalletDisconnect();\n\n                      case 2:\n                        alert(\"You're connected to an unsupported network.\");\n\n                      case 3:\n                      case \"end\":\n                        return _context19.stop();\n                    }\n                  }\n                }, _callee19);\n              })));\n\n            case 29:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n    _this.WalletDisconnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              if (!(window.provider.connected == true)) {\n                _context21.next = 3;\n                break;\n              }\n\n              _context21.next = 3;\n              return window.provider.disconnect();\n\n            case 3:\n              _context21.next = 5;\n              return _this.setState({\n                walletConnect: false\n              });\n\n            case 5:\n              _this.componentWillMount();\n\n            case 6:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n    _this.switchNetwork = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n      var chainId;\n      return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.prev = 0;\n              _context22.next = 3;\n              return window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{\n                  chainId: '0x61'\n                }] // mainnet 0x38, testnet: 0x61\n\n              });\n\n            case 3:\n              _context22.next = 20;\n              break;\n\n            case 5:\n              _context22.prev = 5;\n              _context22.t0 = _context22[\"catch\"](0);\n\n              if (!(_context22.t0.code === 4902)) {\n                _context22.next = 20;\n                break;\n              }\n\n              _context22.prev = 8;\n              _context22.next = 11;\n              return window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: '0x38',\n                  rpcUrls: ['https://bsc-dataseed1.binance.org/'],\n                  chainName: 'BSC Mainnet',\n                  nativeCurrency: {\n                    name: 'BNB',\n                    symbol: 'BNB',\n                    // 2-6 characters long\n                    decimals: 18\n                  },\n                  blockExplorerUrls: ['https://bscscan.com/']\n                }]\n              });\n\n            case 11:\n              _context22.next = 13;\n              return window.ethereum.request({\n                method: 'eth_chainId'\n              });\n\n            case 13:\n              chainId = _context22.sent;\n\n              _this.setState({\n                chainId: chainId\n              });\n\n              if (_this.state.chainId == \"0x61\") {\n                _this.setState({\n                  networkName: \"BSC Testnet\"\n                });\n              } else if (_this.state.chainId == \"0x38\") {\n                _this.setState({\n                  networkName: \"BSC\"\n                });\n              } else if (_this.state.chainId == \"0x1\") {\n                _this.setState({\n                  networkName: \"Ethereum\"\n                });\n              } else if (_this.state.chainId == \"0x3\") {\n                _this.setState({\n                  networkName: \"Ropsten\"\n                });\n              } else if (_this.state.chainId == \"0x4\") {\n                _this.setState({\n                  networkName: \"Rinkeby\"\n                });\n              } else if (_this.state.chainId == \"0x2a\") {\n                _this.setState({\n                  networkName: \"Kovan\"\n                });\n              } else if (_this.state.chainId == \"0x89\") {\n                _this.setState({\n                  networkName: \"Polygon\"\n                });\n              } else if (_this.state.chainId == \"0x13881\") {\n                _this.setState({\n                  networkName: \"Mumbai\"\n                });\n              } else if (_this.state.chainId == \"0xa869\") {\n                _this.setState({\n                  networkName: \"Fuji\"\n                });\n              } else if (_this.state.chainId == \"0xa86a\") {\n                _this.setState({\n                  networkName: \"Avalanche\"\n                });\n              }\n\n              _context22.next = 20;\n              break;\n\n            case 18:\n              _context22.prev = 18;\n              _context22.t1 = _context22[\"catch\"](8);\n\n            case 20:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[0, 5], [8, 18]]);\n    }));\n\n    _this.handleAccountsChanged = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(accounts) {\n        var first4Account, last4Account, _accounts, _first4Account, _last4Account;\n\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                if (!(_this.state.wallet == true)) {\n                  _context23.next = 4;\n                  break;\n                }\n\n                if (accounts.length === 0) {\n                  // MetaMask is locked or the user has not connected any accounts\n                  _this.setWalletTrigger(false);\n                } else if (accounts[0] !== _this.state.account) {\n                  _this.state.account = accounts[0];\n                  first4Account = _this.state.account.substring(0, 4);\n                  last4Account = _this.state.account.slice(-4);\n\n                  _this.setState({\n                    first4Account: first4Account\n                  });\n\n                  _this.setState({\n                    last4Account: last4Account\n                  });\n\n                  _this.componentWillMount(); // Do any other work!\n\n                }\n\n                _context23.next = 15;\n                break;\n\n              case 4:\n                if (!(_this.state.walletConnect == true)) {\n                  _context23.next = 15;\n                  break;\n                }\n\n                _context23.next = 7;\n                return window.web3Con.eth.getAccounts();\n\n              case 7:\n                _accounts = _context23.sent;\n\n                _this.setState({\n                  account: _accounts[0]\n                });\n\n                _first4Account = _this.state.account.substring(0, 4);\n                _last4Account = _this.state.account.slice(-4);\n\n                _this.setState({\n                  first4Account: _first4Account\n                });\n\n                _this.setState({\n                  last4Account: _last4Account\n                });\n\n                _this.setState({\n                  walletConnect: true\n                });\n\n                _this.componentWillMount();\n\n              case 15:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChainChanged = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n      var chainId;\n      return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              if (!(_this.state.wallet == true)) {\n                _context24.next = 8;\n                break;\n              }\n\n              _context24.next = 3;\n              return window.ethereum.request({\n                method: 'eth_chainId'\n              });\n\n            case 3:\n              chainId = _context24.sent;\n\n              _this.setState({\n                chainId: chainId\n              });\n\n              if (chainId != \"0x61\") {\n                _this.setWalletTrigger(false);\n              }\n\n              if (_this.state.chainId == \"0x61\") {\n                _this.setState({\n                  networkName: \"BSC Testnet\"\n                });\n              } else if (_this.state.chainId == \"0x38\") {\n                _this.setState({\n                  networkName: \"BSC\"\n                });\n              } else if (_this.state.chainId == \"0x1\") {\n                _this.setState({\n                  networkName: \"Ethereum\"\n                });\n              } else if (_this.state.chainId == \"0x3\") {\n                _this.setState({\n                  networkName: \"Ropsten\"\n                });\n              } else if (_this.state.chainId == \"0x4\") {\n                _this.setState({\n                  networkName: \"Rinkeby\"\n                });\n              } else if (_this.state.chainId == \"0x2a\") {\n                _this.setState({\n                  networkName: \"Kovan\"\n                });\n              } else if (_this.state.chainId == \"0x89\") {\n                _this.setState({\n                  networkName: \"Polygon\"\n                });\n              } else if (_this.state.chainId == \"0x13881\") {\n                _this.setState({\n                  networkName: \"Mumbai\"\n                });\n              } else if (_this.state.chainId == \"0xa869\") {\n                _this.setState({\n                  networkName: \"Fuji\"\n                });\n              } else if (_this.state.chainId == \"0xa86a\") {\n                _this.setState({\n                  networkName: \"Avalanche\"\n                });\n              }\n\n              _this.switchNetwork(); // Run any other necessary logic...\n\n\n            case 8:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }));\n\n    _this.timeConverter = function (UNIX_timestamp) {\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var hour = a.getHours().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var min = a.getMinutes().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var sec = a.getSeconds().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n      return time;\n    };\n\n    _this.delay = function (ms) {\n      return new Promise(function (res) {\n        return setTimeout(res, ms);\n      });\n    };\n\n    _this.deposit = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(i, amount, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData, _restakingFarm;\n\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context27.next = 7;\n                  break;\n                }\n\n                restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                _context27.next = 5;\n                return restakingFarm.methods.deposit(_this.state.lpTokenAddresses[i], amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(result) {\n                    return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n                      while (1) {\n                        switch (_context25.prev = _context25.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context25.stop();\n                        }\n                      }\n                    }, _callee25);\n                  }));\n\n                  return function (_x5) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 5:\n                _context27.next = 12;\n                break;\n\n              case 7:\n                if (!(_this.state.wallet == true)) {\n                  _context27.next = 12;\n                  break;\n                }\n\n                _restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                _restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData.address);\n                _context27.next = 12;\n                return _restakingFarm.methods.deposit(_this.state.lpTokenAddresses[i], amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(result) {\n                    return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n                      while (1) {\n                        switch (_context26.prev = _context26.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context26.stop();\n                        }\n                      }\n                    }, _callee26);\n                  }));\n\n                  return function (_x6) {\n                    return _ref11.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 12:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      return function (_x2, _x3, _x4) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.approve = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(i, n) {\n        var lpToken, _lpToken;\n\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context30.next = 6;\n                  break;\n                }\n\n                lpToken = new window.web3Con.eth.Contract(LpToken.abi, _this.state.lpTokenAddresses[i]);\n                _context30.next = 4;\n                return lpToken.methods.approve(_this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(result) {\n                    return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n                      while (1) {\n                        switch (_context28.prev = _context28.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context28.stop();\n                        }\n                      }\n                    }, _callee28);\n                  }));\n\n                  return function (_x9) {\n                    return _ref13.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                _context30.next = 10;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context30.next = 10;\n                  break;\n                }\n\n                _lpToken = new window.web3.eth.Contract(LpToken.abi, _this.state.lpTokenAddresses[i]);\n                _context30.next = 10;\n                return _lpToken.methods.approve(_this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(result) {\n                    return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n                      while (1) {\n                        switch (_context29.prev = _context29.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context29.stop();\n                        }\n                      }\n                    }, _callee29);\n                  }));\n\n                  return function (_x10) {\n                    return _ref14.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    _this.withdraw = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(i, amount, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData2, _restakingFarm2;\n\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                if (_this.state.walletConnect == true) {\n                  restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                  restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                  restakingFarm.methods.withdraw(_this.state.lpTokenAddresses[i], amount).send({\n                    from: _this.state.account\n                  }).then( /*#__PURE__*/function () {\n                    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(result) {\n                      return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n                        while (1) {\n                          switch (_context31.prev = _context31.next) {\n                            case 0:\n                              _this.componentWillMount();\n\n                            case 1:\n                            case \"end\":\n                              return _context31.stop();\n                          }\n                        }\n                      }, _callee31);\n                    }));\n\n                    return function (_x14) {\n                      return _ref16.apply(this, arguments);\n                    };\n                  }()).catch(function (err) {\n                    if (err.code === 4001) {\n                      // EIP-1193 userRejectedRequest error\n                      // If this happens, the user rejected the connection request.\n                      alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                    } else {\n                      console.error(err);\n                    }\n                  });\n                } else if (_this.state.wallet == true) {\n                  _restakingFarmData2 = RestakingFarm.networks[_this.state.networkId];\n                  _restakingFarm2 = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData2.address);\n\n                  _restakingFarm2.methods.withdraw(_this.state.lpTokenAddresses[i], amount).send({\n                    from: _this.state.account\n                  }).then( /*#__PURE__*/function () {\n                    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(result) {\n                      return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n                        while (1) {\n                          switch (_context32.prev = _context32.next) {\n                            case 0:\n                              _this.componentWillMount();\n\n                            case 1:\n                            case \"end\":\n                              return _context32.stop();\n                          }\n                        }\n                      }, _callee32);\n                    }));\n\n                    return function (_x15) {\n                      return _ref17.apply(this, arguments);\n                    };\n                  }()).catch(function (err) {\n                    if (err.code === 4001) {\n                      // EIP-1193 userRejectedRequest error\n                      // If this happens, the user rejected the connection request.\n                      alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                    } else {\n                      console.error(err);\n                    }\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33);\n      }));\n\n      return function (_x11, _x12, _x13) {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    _this.harvest = /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(i, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData3, _restakingFarm3;\n\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                if (_this.state.walletConnect == true) {\n                  if (_this.state.pendingSegmentReward[n][i] <= 0) {\n                    alert(\"No token to harvest! Please deposit LP to earn PURSE\");\n                  } else {\n                    restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                    restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                    restakingFarm.methods.claimReward(_this.state.lpTokenAddresses[i]).send({\n                      from: _this.state.account\n                    }).then( /*#__PURE__*/function () {\n                      var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(result) {\n                        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n                          while (1) {\n                            switch (_context34.prev = _context34.next) {\n                              case 0:\n                                _this.componentWillMount();\n\n                              case 1:\n                              case \"end\":\n                                return _context34.stop();\n                            }\n                          }\n                        }, _callee34);\n                      }));\n\n                      return function (_x18) {\n                        return _ref19.apply(this, arguments);\n                      };\n                    }()).catch(function (err) {\n                      if (err.code === 4001) {\n                        // EIP-1193 userRejectedRequest error\n                        // If this happens, the user rejected the connection request.\n                        alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                      } else {\n                        console.error(err);\n                      }\n                    });\n                  }\n                } else if (_this.state.wallet == true) {\n                  if (_this.state.pendingSegmentReward[n][i] <= 0) {\n                    alert(\"No token to harvest! Please deposit LP to earn PURSE\");\n                  } else {\n                    _restakingFarmData3 = RestakingFarm.networks[_this.state.networkId];\n                    _restakingFarm3 = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData3.address);\n\n                    _restakingFarm3.methods.claimReward(_this.state.lpTokenAddresses[i]).send({\n                      from: _this.state.account\n                    }).then( /*#__PURE__*/function () {\n                      var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(result) {\n                        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n                          while (1) {\n                            switch (_context35.prev = _context35.next) {\n                              case 0:\n                                _this.componentWillMount();\n\n                              case 1:\n                              case \"end\":\n                                return _context35.stop();\n                            }\n                          }\n                        }, _callee35);\n                      }));\n\n                      return function (_x19) {\n                        return _ref20.apply(this, arguments);\n                      };\n                    }()).catch(function (err) {\n                      if (err.code === 4001) {\n                        // EIP-1193 userRejectedRequest error\n                        // If this happens, the user rejected the connection request.\n                        alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                      } else {\n                        console.error(err);\n                      }\n                    });\n                  }\n                } else {\n                  alert(\"Wallet is not connected\");\n                }\n\n              case 1:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36);\n      }));\n\n      return function (_x16, _x17) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n\n    _this.checkClaimAmount = /*#__PURE__*/function () {\n      var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(address) {\n        var response0, response1, response2, response3, response4, response5, response6, lastRewardStartTime, numOfDays, percentageDis, averageInterval, userRewardInfo, userBalance, purseTokenTotalSupply, reward, interval, accumulateAmount, _interval, _accumulateAmount, lastmonthAccAmount;\n\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                response0 = _this.loadLastRewardStartTime();\n                response1 = _this.loadNumOfDays();\n                response2 = _this.loadPercentageDis();\n                response3 = _this.loadAverageInterval();\n                response4 = _this.loadUserRewardInfo(address);\n                response5 = _this.loadUserBalance(address);\n                response6 = _this.loadPurseTotalSupply();\n                _context37.next = 9;\n                return response0;\n\n              case 9:\n                lastRewardStartTime = _context37.sent;\n                _context37.next = 12;\n                return response1;\n\n              case 12:\n                numOfDays = _context37.sent;\n                _context37.next = 15;\n                return response2;\n\n              case 15:\n                percentageDis = _context37.sent;\n                _context37.next = 18;\n                return response3;\n\n              case 18:\n                averageInterval = _context37.sent;\n                _context37.next = 21;\n                return response4;\n\n              case 21:\n                userRewardInfo = _context37.sent;\n                _context37.next = 24;\n                return response5;\n\n              case 24:\n                userBalance = _context37.sent;\n                _context37.next = 27;\n                return response6;\n\n              case 27:\n                purseTokenTotalSupply = _context37.sent;\n                reward = 0;\n\n                if (userRewardInfo.lastUpdateTime == 0) {\n                  reward = 0;\n                } else if (userRewardInfo.lastUpdateTime >= _this.state.rewardStartTime) {\n                  reward = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.accReward, 'Ether'));\n                } else if (userRewardInfo.lastUpdateTime < lastRewardStartTime) {\n                  // 1st distribution wont happen, all users lastUpdateTime either 0 or > lastRewardStartTime\n                  interval = parseInt((_this.state.rewardStartTime - lastRewardStartTime) / averageInterval);\n                  accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval);\n                  reward = accumulateAmount * _this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\n                } else {\n                  _interval = parseInt((_this.state.rewardStartTime - userRewardInfo.lastUpdateTime) / averageInterval);\n                  _accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * _interval);\n                  lastmonthAccAmount = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.amount, 'Ether')) + _accumulateAmount;\n                  reward = lastmonthAccAmount * _this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\n                }\n\n                return _context37.abrupt(\"return\", reward);\n\n              case 31:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37);\n      }));\n\n      return function (_x20) {\n        return _ref21.apply(this, arguments);\n      };\n    }();\n\n    _this.claimDistributePurse = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n      var purseTokenUpgradable, _purseTokenUpgradable;\n\n      return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n        while (1) {\n          switch (_context38.prev = _context38.next) {\n            case 0:\n              if (!((Date.now() / 1000).toFixed(0) < _this.state.rewardStartTime)) {\n                _context38.next = 4;\n                break;\n              }\n\n              alert(\"Distribution not started yet\");\n              _context38.next = 22;\n              break;\n\n            case 4:\n              if (!((Date.now() / 1000).toFixed(0) > _this.state.rewardEndTime)) {\n                _context38.next = 8;\n                break;\n              }\n\n              alert(\"Distribution already end\");\n              _context38.next = 22;\n              break;\n\n            case 8:\n              if (!(_this.state.claimAmount == 0)) {\n                _context38.next = 12;\n                break;\n              }\n\n              alert(\"No reward available\");\n              _context38.next = 22;\n              break;\n\n            case 12:\n              if (!(_this.state.walletConnect == true)) {\n                _context38.next = 18;\n                break;\n              }\n\n              purseTokenUpgradable = new window.web3Con.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\");\n              _context38.next = 16;\n              return purseTokenUpgradable.methods.claimDistributionPurse().send({\n                from: _this.state.account\n              });\n\n            case 16:\n              _context38.next = 22;\n              break;\n\n            case 18:\n              if (!(_this.state.wallet == true)) {\n                _context38.next = 22;\n                break;\n              }\n\n              _purseTokenUpgradable = new window.web3.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\");\n              _context38.next = 22;\n              return _purseTokenUpgradable.methods.claimDistributionPurse().send({\n                from: _this.state.account\n              });\n\n            case 22:\n            case \"end\":\n              return _context38.stop();\n          }\n        }\n      }, _callee38);\n    }));\n\n    _this.setI = function (type, pair) {\n      _this.setState({\n        n: type\n      });\n\n      _this.setState({\n        i: pair\n      });\n    };\n\n    _this.setTrigger = function (state) {\n      _this.setState({\n        buttonPopup: state\n      });\n    };\n\n    _this.setWalletTrigger = /*#__PURE__*/function () {\n      var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(state) {\n        var accounts, first4Account, last4Account;\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                if (!(state == false)) {\n                  _context39.next = 6;\n                  break;\n                }\n\n                _context39.next = 3;\n                return _this.setState({\n                  wallet: state\n                });\n\n              case 3:\n                _this.componentWillMount();\n\n                _context39.next = 16;\n                break;\n\n              case 6:\n                _context39.next = 8;\n                return window.web3.eth.getAccounts();\n\n              case 8:\n                accounts = _context39.sent;\n\n                _this.setState({\n                  account: accounts[0]\n                });\n\n                first4Account = _this.state.account.substring(0, 4);\n                last4Account = _this.state.account.slice(-4);\n\n                _this.setState({\n                  first4Account: first4Account\n                });\n\n                _this.setState({\n                  last4Account: last4Account\n                });\n\n                _this.setState({\n                  wallet: state\n                });\n\n                _this.componentWillMount();\n\n              case 16:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39);\n      }));\n\n      return function (_x21) {\n        return _ref23.apply(this, arguments);\n      };\n    }();\n\n    _this.stake = /*#__PURE__*/function () {\n      var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(amount) {\n        var purseStaking, _purseStaking;\n\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context42.next = 6;\n                  break;\n                }\n\n                purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\");\n                _context42.next = 4;\n                return purseStaking.methods.enter(amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(result) {\n                    return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n                      while (1) {\n                        switch (_context40.prev = _context40.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context40.stop();\n                        }\n                      }\n                    }, _callee40);\n                  }));\n\n                  return function (_x23) {\n                    return _ref25.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 4:\n                _context42.next = 11;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context42.next = 11;\n                  break;\n                }\n\n                _this.setState({\n                  loading: false\n                });\n\n                _purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\");\n                _context42.next = 11;\n                return _purseStaking.methods.enter(amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(result) {\n                    return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n                      while (1) {\n                        switch (_context41.prev = _context41.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context41.stop();\n                        }\n                      }\n                    }, _callee41);\n                  }));\n\n                  return function (_x24) {\n                    return _ref26.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 11:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42);\n      }));\n\n      return function (_x22) {\n        return _ref24.apply(this, arguments);\n      };\n    }();\n\n    _this.unstake = /*#__PURE__*/function () {\n      var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45(receipt) {\n        var purseStaking, _purseStaking2;\n\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context45.next = 6;\n                  break;\n                }\n\n                purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\");\n                _context45.next = 4;\n                return purseStaking.methods.leave(receipt).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(result) {\n                    return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n                      while (1) {\n                        switch (_context43.prev = _context43.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context43.stop();\n                        }\n                      }\n                    }, _callee43);\n                  }));\n\n                  return function (_x26) {\n                    return _ref28.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 4:\n                _context45.next = 10;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context45.next = 10;\n                  break;\n                }\n\n                _purseStaking2 = new window.web3.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\");\n                _context45.next = 10;\n                return _purseStaking2.methods.leave(receipt).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(result) {\n                    return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n                      while (1) {\n                        switch (_context44.prev = _context44.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context44.stop();\n                        }\n                      }\n                    }, _callee44);\n                  }));\n\n                  return function (_x27) {\n                    return _ref29.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 10:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45);\n      }));\n\n      return function (_x25) {\n        return _ref27.apply(this, arguments);\n      };\n    }();\n\n    _this.checkPurseAmount = /*#__PURE__*/function () {\n      var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46(receipt) {\n        var purseStakingTotalStake, purseStakingTotalReceipt, purseWei, purse;\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                _context46.next = 2;\n                return _this.loadPurseStakingTotalStake();\n\n              case 2:\n                purseStakingTotalStake = _context46.sent;\n                _context46.next = 5;\n                return _this.loadPurseStakingTotalReceipt();\n\n              case 5:\n                purseStakingTotalReceipt = _context46.sent;\n                purseWei = (receipt * purseStakingTotalStake / purseStakingTotalReceipt).toString();\n                purse = parseFloat(window.web3Bsc.utils.fromWei(purseWei, 'Ether')).toLocaleString('en-US', {\n                  maximumFractionDigits: 10\n                });\n                return _context46.abrupt(\"return\", purse);\n\n              case 9:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46);\n      }));\n\n      return function (_x28) {\n        return _ref30.apply(this, arguments);\n      };\n    }();\n\n    _this.approvePurse = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49() {\n      var purseToken, _purseToken;\n\n      return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n        while (1) {\n          switch (_context49.prev = _context49.next) {\n            case 0:\n              if (!(_this.state.walletConnect == true)) {\n                _context49.next = 8;\n                break;\n              }\n\n              purseToken = new window.web3Con.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n              _context49.next = 4;\n              return purseToken.methods.approve(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                from: _this.state.account\n              }).then( /*#__PURE__*/function () {\n                var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(result) {\n                  return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n                    while (1) {\n                      switch (_context47.prev = _context47.next) {\n                        case 0:\n                          _this.componentWillMount();\n\n                        case 1:\n                        case \"end\":\n                          return _context47.stop();\n                      }\n                    }\n                  }, _callee47);\n                }));\n\n                return function (_x29) {\n                  return _ref32.apply(this, arguments);\n                };\n              }());\n\n            case 4:\n              _this.componentWillMount();\n\n              _this.setState({\n                loading: true\n              });\n\n              _context49.next = 12;\n              break;\n\n            case 8:\n              if (!(_this.state.wallet == true)) {\n                _context49.next = 12;\n                break;\n              }\n\n              _purseToken = new window.web3.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n              _context49.next = 12;\n              return _purseToken.methods.approve(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                from: _this.state.account\n              }).then( /*#__PURE__*/function () {\n                var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(result) {\n                  return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n                    while (1) {\n                      switch (_context48.prev = _context48.next) {\n                        case 0:\n                          _this.componentWillMount();\n\n                        case 1:\n                        case \"end\":\n                          return _context48.stop();\n                      }\n                    }\n                  }, _callee48);\n                }));\n\n                return function (_x30) {\n                  return _ref33.apply(this, arguments);\n                };\n              }());\n\n            case 12:\n            case \"end\":\n              return _context49.stop();\n          }\n        }\n      }, _callee49);\n    }));\n    _this.state = {\n      account: '',\n      lpToken: {},\n      purseTokenUpgradable: {},\n      restakingFarm: {},\n      purseTokenUpgradableBalance: '0',\n      purseTokenTotalSupply: '0',\n      totalBurnAmount: '0',\n      sum30BurnAmount: '0',\n      totalTransferAmount: '0',\n      sum30TransferAmount: '0',\n      cumulateTransfer: [],\n      cumulateBurn: [],\n      stakedBalance: '0',\n      i: '0',\n      n: '0',\n      wallet: false,\n      metamask: false,\n      farmLoading: false,\n      walletConnect: false,\n      aprloading: false,\n      poolLength: '0',\n      userSegmentInfo: [[], []],\n      poolSegmentInfo: [[], []],\n      lpTokenSegmentBalance: [[], []],\n      pendingSegmentReward: [[], []],\n      lpTokenSegmentAllowance: [[], []],\n      tvl: [[], []],\n      apr: [[], []],\n      apyDaily: [[], []],\n      apyWeekly: [[], []],\n      apyMonthly: [[], []],\n      totalrewardperblock: '0',\n      totalpendingReward: '0',\n      buttonPopup: false,\n      poolCapRewardToken: '0',\n      poolMintedRewardToken: '0',\n      poolRewardToken: '0',\n      networkName: \"Loading\",\n      rewardEndTime: '0',\n      rewardStartTime: '0',\n      distributedAmount: '0',\n      distributedPercentage: '0',\n      rewardEndTimeDate: '0',\n      rewardStartTimeDate: '0',\n      claimAmount: '0',\n      purseStakingUserReceipt: '0',\n      purseStakingUserPurse: '0',\n      purseStakingUserStake: '0',\n      purseStakingUserAllowance: '0',\n      purseStakingTotalStake: '0',\n      purseStakingTotalReceipt: '0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var maincontent;\n      var menucontent;\n      var depositcontent;\n      var oneinchContent;\n      var distributionContent;\n      var farmInfoContent;\n      var stakeContent;\n      maincontent = /*#__PURE__*/React.createElement(Main, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        poolLength: this.state.poolLength,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        PURSEPrice: this.state.PURSEPrice,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        lpTokenInContract: this.state.lpTokenInContract,\n        totalrewardperblock: this.state.totalrewardperblock,\n        poolCapRewardToken: this.state.poolCapRewardToken,\n        poolMintedRewardToken: this.state.poolMintedRewardToken,\n        poolRewardToken: this.state.poolRewardToken,\n        totalBurnAmount: this.state.totalBurnAmount,\n        sum30BurnAmount: this.state.sum30BurnAmount,\n        totalTransferAmount: this.state.totalTransferAmount,\n        sum30TransferAmount: this.state.sum30TransferAmount,\n        cumulateTransfer: this.state.cumulateTransfer,\n        cumulateBurn: this.state.cumulateBurn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 19\n        }\n      });\n      /*menucontent = <Menu\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        totalpendingReward={this.state.totalpendingReward}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        buttonPopup={this.state.buttonPopup}\r\n        farmNetwork={this.state.farmNetwork}\r\n        tvl={this.state.tvl}\r\n        apr={this.state.apr}\r\n        apyDaily={this.state.apyDaily}\r\n        apyWeekly={this.state.apyWeekly}\r\n        apyMonthly={this.state.apyMonthly}\r\n        farmLoading={this.state.farmLoading}\r\n        aprloading={this.state.aprloading}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        setI={this.setI}\r\n        setTrigger={this.setTrigger}\r\n        harvest={this.harvest}\r\n        stakedBalance={this.state.stakedBalance}\r\n      />\r\n      depositcontent = <Deposit\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        i={this.state.i}\r\n        n={this.state.n}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        c={this.state.lpTokenSegmentAsymbol}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        lpTokenSegmentAllowance={this.state.lpTokenSegmentAllowance}\r\n        wallet={this.state.wallet}\r\n        farmNetwork={this.state.farmNetwork}\r\n        harvest={this.harvest}\r\n        approve={this.approve}\r\n        connectWallet={this.connectWallet}\r\n        walletConnect={this.state.walletConnect}\r\n      />\r\n      oneinchContent = <Oneinch\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        totalpendingReward={this.state.totalpendingReward}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        userSegmentInfo={this.state.userSegmentInfo}\r\n        poolSegmentInfo={this.state.poolSegmentInfo}\r\n        lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n        pendingSegmentReward={this.state.pendingSegmentReward}\r\n        buttonPopup={this.state.buttonPopup}\r\n        farmNetwork={this.state.farmNetwork}\r\n        tvl={this.state.tvl}\r\n        apr={this.state.apr}\r\n        apyDaily={this.state.apyDaily}\r\n        apyWeekly={this.state.apyWeekly}\r\n        apyMonthly={this.state.apyMonthly}\r\n        farmLoading={this.state.farmLoading}\r\n        aprloading={this.state.aprloading}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        setI={this.setI}\r\n        setTrigger={this.setTrigger}\r\n        harvest={this.harvest}\r\n      />\r\n      farmInfoContent = <Farm\r\n        lpTokenBalance={this.state.lpTokenBalance}\r\n        purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n        poolLength={this.state.poolLength}\r\n        deposit={this.deposit}\r\n        withdraw={this.withdraw}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n        lpTokenInContract={this.state.lpTokenInContract}\r\n        totalrewardperblock={this.state.totalrewardperblock}\r\n        poolCapRewardToken={this.state.poolCapRewardToken}\r\n        poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n        poolRewardToken={this.state.poolRewardToken}\r\n      />\r\n      distributionContent = <Distribution\r\n        wallet={this.state.wallet}\r\n        walletConnect={this.state.walletConnect}\r\n        connectWallet={this.connectWallet}\r\n        checkClaimAmount={this.checkClaimAmount}\r\n        claimDistributePurse={this.claimDistributePurse}\r\n        account={this.state.account}\r\n        rewardEndTime={this.state.rewardEndTime}\r\n        rewardStartTime={this.state.rewardStartTime}\r\n        distributedAmount={this.state.distributedAmount}\r\n        distributedPercentage={this.state.distributedPercentage}\r\n        rewardStartTimeDate={this.state.rewardStartTimeDate}\r\n        rewardEndTimeDate={this.state.rewardEndTimeDate}\r\n        claimAmount={this.state.claimAmount}\r\n        totalTransferAmount={this.state.totalTransferAmount}\r\n        purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      />*/\n\n      stakeContent = /*#__PURE__*/React.createElement(Stake, {\n        wallet: this.state.wallet,\n        walletConnect: this.state.walletConnect,\n        connectWallet: this.connectWallet,\n        account: this.state.account,\n        PURSEPrice: this.state.PURSEPrice,\n        purseStaking: this.state.purseStaking,\n        purseStakingUserReceipt: this.state.purseStakingUserReceipt,\n        purseStakingUserPurse: this.state.purseStakingUserPurse,\n        purseStakingUserStake: this.state.purseStakingUserStake,\n        purseStakingUserAllowance: this.state.purseStakingUserAllowance,\n        purseStakingTotalStake: this.state.purseStakingTotalStake,\n        purseStakingTotalReceipt: this.state.purseStakingTotalReceipt,\n        stake: this.stake,\n        unstake: this.unstake,\n        checkPurseAmount: this.checkPurseAmount,\n        approvePurse: this.approvePurse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 20\n        }\n      });\n      return /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navb, {\n        account: this.state.account,\n        first4Account: this.state.first4Account,\n        last4Account: this.state.last4Account,\n        wallet: this.state.wallet,\n        setWalletTrigger: this.setWalletTrigger,\n        loadWeb3: this.loadWeb3,\n        connectWallet: this.connectWallet,\n        WalletConnect: this.WalletConnect,\n        walletConnect: this.state.walletConnect,\n        WalletDisconnect: this.WalletDisconnect,\n        networkName: this.state.networkName,\n        PURSEPrice: this.state.PURSEPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '1000px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 21\n        }\n      }, \" \", maincontent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 21\n        }\n      }, \" \", maincontent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/stake\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 21\n        }\n      }, \" \", stakeContent, \" \")), /*#__PURE__*/React.createElement(Popup, {\n        trigger: this.state.buttonPopup,\n        setTrigger: this.setTrigger,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 21\n        }\n      }, depositcontent))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yanping/Documents/LPRestakingFarm/src/components/App.js"],"names":["React","Component","Web3","WalletConnectProvider","BrowserRouter","Router","Switch","Route","LpToken","IPancakePair","PurseTokenUpgradable","RestakingFarm","PurseFarm","Navb","Main","Menu","Oneinch","Deposit","Popup","Farm","Distribution","Stake","PurseStaking","PurseToken","App","loadWeb3","loadFarmData","loadBlockchainData","loadTVLAPR","state","wallet","walletConnect","loadBlockchainUserData","delay","farm","setState","web3Bsc","window","networkId","farmNetwork","metamask","ethereum","request","method","chainId","networkName","on","handleChainChanged","handleAccountsChanged","chainID","mongoResponse0","loadBDL","mongoResponse1","loadAccumulateTransfer","mongoResponse2","loadAccumulateBurn","coingeckoResponse","loadApiPrice","myJson","myJson1","myJson2","myJson3","PURSEPrice","toFixed","USDTPrice","USDCPrice","BNBPrice","WETHPrice","BUSDPrice","BTCPrice","totalTransferAmount","sum30TransferAmount","totalBurnAmount","sum30BurnAmount","cumulateTransfer","cumulateBurn","purseStaking","eth","Contract","abi","purseToken","loadPurseStakingUserInfo","purseStakingUserInfo","loadPurseStakingUserStake","purseStakingUserStake","loadPurseStakingUserAllowance","purseStakingUserAllowance","loadPurseStakingUserPurse","purseStakingUserPurse","loadPurseStakingTotalStake","purseStakingTotalStake","loadPurseStakingTotalReceipt","purseStakingTotalReceipt","purseStakingUserReceipt","toString","fetch","json","methods","userInfo","account","call","getTotalPurse","allowance","balanceOf","totalReceiptSupply","tvl","apr","apyDaily","apyWeekly","apyMonthly","n","response","tvlArray","aprArray","apyArray","i","poolLength","lpTokenPairsymbols","Math","pow","aprloading","web3","currentProvider","alert","props","connectWallet","then","switchNetwork","setWalletTrigger","catch","err","code","console","error","WalletConnect","provider","rpc","enable","web3Con","net","getId","WalletDisconnect","getAccounts","accounts","first4Account","substring","last4Account","slice","componentWillMount","connected","disconnect","params","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","length","timeConverter","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","toLocaleString","minimumIntegerDigits","useGrouping","min","getMinutes","sec","getSeconds","time","ms","Promise","res","setTimeout","deposit","amount","restakingFarmData","networks","restakingFarm","address","lpTokenAddresses","send","from","result","approve","lpToken","_address","withdraw","harvest","pendingSegmentReward","claimReward","checkClaimAmount","response0","loadLastRewardStartTime","response1","loadNumOfDays","response2","loadPercentageDis","response3","loadAverageInterval","response4","loadUserRewardInfo","response5","loadUserBalance","response6","loadPurseTotalSupply","lastRewardStartTime","numOfDays","percentageDis","averageInterval","userRewardInfo","userBalance","purseTokenTotalSupply","reward","lastUpdateTime","rewardStartTime","parseFloat","utils","fromWei","accReward","interval","parseInt","accumulateAmount","distributedAmount","lastmonthAccAmount","claimDistributePurse","now","rewardEndTime","claimAmount","purseTokenUpgradable","claimDistributionPurse","setI","type","pair","setTrigger","buttonPopup","stake","enter","loading","unstake","receipt","leave","checkPurseAmount","purseWei","purse","maximumFractionDigits","approvePurse","purseTokenUpgradableBalance","stakedBalance","farmLoading","userSegmentInfo","poolSegmentInfo","lpTokenSegmentBalance","lpTokenSegmentAllowance","totalrewardperblock","totalpendingReward","poolCapRewardToken","poolMintedRewardToken","poolRewardToken","distributedPercentage","rewardEndTimeDate","rewardStartTimeDate","maincontent","menucontent","depositcontent","oneinchContent","distributionContent","farmInfoContent","stakeContent","lpTokenBalance","lpTokenInContract","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LpToken from '../abis/LpToken.json'\r\nimport IPancakePair from '../abis/IPancakePair.json'\r\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json'\r\nimport RestakingFarm from '../abis/RestakingFarm.json'\r\n\r\nimport PurseFarm from '../farm/farmPurse.json'\r\nimport Navb from './Navbar'\r\nimport Main from './Main'\r\nimport Menu from './Menu'\r\nimport Oneinch from './1inch'\r\nimport Deposit from './Deposit'\r\nimport Popup from './Popup'\r\nimport Farm from './Farm'\r\nimport Distribution from './Distribution'\r\nimport Stake from './Stake'\r\n\r\nimport './Popup.css'\r\nimport './App.css'\r\n\r\nimport PurseStaking from '../abis/PurseStaking.json'\r\nimport PurseToken from '../abis/PurseTokenTest.json'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadFarmData()\r\n    await this.loadBlockchainData()\r\n    this.loadTVLAPR()\r\n    while ((this.state.wallet || this.state.walletConnect) == true) {\r\n      await this.loadBlockchainUserData()\r\n      await this.delay(10000);\r\n    }\r\n  }\r\n\r\n  async loadFarmData() {\r\n    const farm = PurseFarm.farm\r\n    this.setState({ farm })\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3Bsc = window.web3Bsc\r\n\r\n    //const networkId = \"56\"\r\n    const networkId = \"97\"\r\n    this.setState({ networkId })\r\n    const farmNetwork = \"MAINNET\"\r\n    this.setState({ farmNetwork })\r\n\r\n    if (this.state.metamask == true && this.state.walletConnect == false) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      window.ethereum.on('chainChanged', this.handleChainChanged);\r\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n    } else if (this.state.metamask == false && this.state.walletConnect == false) {\r\n      this.setState({ chainID: \"0x\" })\r\n      this.setState({ networkName: \"Unavailable\" })\r\n    }\r\n\r\n    let mongoResponse0 = this.loadBDL()\r\n    let mongoResponse1 = this.loadAccumulateTransfer()\r\n    let mongoResponse2 = this.loadAccumulateBurn()\r\n    let coingeckoResponse = this.loadApiPrice()\r\n    let myJson = await mongoResponse0;\r\n    let myJson1 = await mongoResponse1;\r\n    let myJson2 = await mongoResponse2;\r\n    let myJson3 = await coingeckoResponse;\r\n\r\n    let PURSEPrice = myJson3[\"pundi-x-purse\"][\"usd\"]\r\n    this.setState({ PURSEPrice: PURSEPrice.toFixed(7) })\r\n    let USDTPrice = myJson3[\"tether\"][\"usd\"]\r\n    this.setState({ USDTPrice: USDTPrice.toFixed(7) })\r\n    let USDCPrice = myJson3[\"usd-coin\"][\"usd\"]\r\n    this.setState({ USDCPrice: USDCPrice.toFixed(7) })\r\n    let BNBPrice = myJson3[\"binancecoin\"][\"usd\"]\r\n    this.setState({ BNBPrice: BNBPrice.toFixed(7) })\r\n    let WETHPrice = myJson3[\"weth\"][\"usd\"]\r\n    this.setState({ WETHPrice: WETHPrice.toFixed(7) })\r\n    let BUSDPrice = myJson3[\"binance-usd\"][\"usd\"]\r\n    this.setState({ BUSDPrice: BUSDPrice.toFixed(7) })\r\n    let BTCPrice = myJson3[\"bitcoin\"][\"usd\"]\r\n    this.setState({ BTCPrice: BTCPrice.toFixed(7) })\r\n\r\n    let totalTransferAmount = myJson[\"TransferTotal\"]\r\n    let sum30TransferAmount = myJson[\"Transfer30Days\"]\r\n    let totalBurnAmount = myJson[\"BurnTotal\"]\r\n    let sum30BurnAmount = myJson[\"Burn30Days\"]\r\n    let cumulateTransfer = myJson1\r\n    let cumulateBurn = myJson2\r\n\r\n    this.setState({ totalBurnAmount })\r\n    this.setState({ sum30BurnAmount })\r\n    this.setState({ totalTransferAmount })\r\n    this.setState({ sum30TransferAmount })\r\n    this.setState({ cumulateTransfer })\r\n    this.setState({ cumulateBurn })\r\n\r\n    // Load contract\r\n    /*const pancakeContract = new window.web3Bsc.eth.Contract(IPancakePair.abi, \"0x081F4B87F223621B4B31cB7A727BB583586eAD98\")\r\n    const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\") //mainnet\r\n    const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, \"0x439ec8159740a9b9a579f286963ac1c050af31c8\")*/\r\n    const purseStaking = new window.web3Bsc.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\") \r\n    const purseToken = new window.web3Bsc.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n\r\n    /*this.setState({ purseTokenUpgradable })\r\n    this.setState({ restakingFarm })\r\n    this.setState({ pancakeContract })*/\r\n    this.setState({ purseStaking })\r\n    this.setState({ purseToken })\r\n\r\n    if (this.state.wallet == false && this.state.walletConnect == false) {\r\n\r\n      /*let farmResponse0 = this.loadStakedBalance()\r\n      let farmResponse1 = this.loadPurseTokenTotalSupply()\r\n      let farmResponse2 = this.loadPoolRewardToken()\r\n\r\n      let response0 = this.loadRewardEndTime()\r\n      let response1 = this.loadRewardStartTime()\r\n      let response2 = this.loadDistributedAmount()\r\n      let response3 = this.loadDistributedPercentage()\r\n      let response4 = this.loadPoolCapRewardToken()\r\n      let response5 = this.loadPoolMintedRewardToken()\r\n      let response6 = this.loadPoolLength()\r\n\r\n      let stakedBalance = await farmResponse0\r\n      let purseTokenTotalSupply = await farmResponse1\r\n      let poolRewardToken = await farmResponse2\r\n\r\n      let rewardEndTime = await response0\r\n      let rewardStartTime = await response1\r\n      let distributedAmount = await response2\r\n      let distributedPercentage = await response3\r\n      let poolCapRewardToken = await response4\r\n      let poolMintedRewardToken = await response5\r\n      let poolLength = await response6\r\n      let rewardStartTimeDate = this.timeConverter(rewardStartTime)\r\n      let rewardEndTimeDate = this.timeConverter(rewardEndTime)\r\n\r\n      this.setState({ stakedBalance: stakedBalance.toString() })\r\n      this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n      this.setState({ poolRewardToken: poolRewardToken.toString() })\r\n      this.setState({ poolCapRewardToken })\r\n      this.setState({ poolMintedRewardToken })\r\n      this.setState({ poolLength })\r\n\r\n      let totalrewardperblock = 0\r\n      let purseTokenUpgradableBalance = 0\r\n      let poolSegmentInfo = [[], []]\r\n      let lpTokenSegmentBalance = [[], []]\r\n      let userSegmentInfo = [[], []]\r\n      let pendingSegmentReward = [[], []]\r\n\r\n      let lpTokenAddresses = []\r\n      let lpTokenPairsymbols = []\r\n\r\n      let n = 0\r\n      let i = 0\r\n\r\n      for (i = 0; i < poolLength; i++) {\r\n        let poolInfo = this.state.farm[i]\r\n        let lpTokenBalance = 0\r\n        totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolInfo.bonusMultiplier)\r\n        lpTokenAddresses[i] = poolInfo.lpAddresses[this.state.networkId]\r\n        lpTokenPairsymbols[i] = poolInfo.lpTokenPairsymbol\r\n\r\n        if (poolInfo.lpTokenPairsymbol == \"Cake-LP\") {\r\n          userSegmentInfo[0][n] = \"\"\r\n          pendingSegmentReward[0][n] = \"\"\r\n          poolSegmentInfo[0][n] = poolInfo\r\n          lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n          n += 1\r\n        } else {\r\n          userSegmentInfo[1][n] = \"\"\r\n          pendingSegmentReward[1][n] = \"\"\r\n          poolSegmentInfo[1][n] = poolInfo\r\n          lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n          n += 1\r\n        }\r\n      }\r\n\r\n      this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n      this.setState({ poolSegmentInfo })\r\n      this.setState({ lpTokenSegmentBalance })\r\n      this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n      this.setState({ pendingSegmentReward: [[], []] })\r\n      this.setState({ userSegmentInfo: [[], []] })\r\n      this.setState({ totalpendingReward: \"0\" })\r\n\r\n      this.setState({ lpTokenAddresses })\r\n      this.setState({ lpTokenPairsymbols })\r\n\r\n      this.setState({ rewardStartTime })\r\n      this.setState({ rewardEndTime })\r\n      this.setState({ rewardStartTimeDate })\r\n      this.setState({ rewardEndTimeDate })\r\n      this.setState({ distributedAmount })\r\n      this.setState({ distributedPercentage })\r\n      this.setState({ farmLoading: true })*/\r\n    }\r\n  }\r\n\r\n  // ##############################################################################################################################\r\n  async loadBlockchainUserData() {\r\n    let purseStakingUserInfo = await this.loadPurseStakingUserInfo()\r\n    let purseStakingUserStake = await this.loadPurseStakingUserStake()\r\n    let purseStakingUserAllowance = await this.loadPurseStakingUserAllowance()\r\n    let purseStakingUserPurse = await this.loadPurseStakingUserPurse()\r\n    let purseStakingTotalStake = await this.loadPurseStakingTotalStake()\r\n    let purseStakingTotalReceipt = await this.loadPurseStakingTotalReceipt()\r\n\r\n    this.setState({ purseStakingUserReceipt: purseStakingUserInfo.toString()})\r\n    this.setState({ purseStakingUserStake: purseStakingUserStake.toString() })\r\n    this.setState({ purseStakingUserAllowance: purseStakingUserAllowance.toString() })\r\n    this.setState({ purseStakingUserPurse: purseStakingUserPurse.toString() })\r\n    this.setState({ purseStakingTotalStake: purseStakingTotalStake.toString() })\r\n    this.setState({ purseStakingTotalReceipt: purseStakingTotalReceipt.toString() })\r\n\r\n    // Load PurseTokenUpgradable\r\n    /*let userResponse0 = this.loadPurseTokenBalance()\r\n    let userResponse1 = this.checkClaimAmount(this.state.account)\r\n    let purseTokenUpgradableBalance = await userResponse0\r\n    let claimAmount = await userResponse1\r\n\r\n    this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n    this.setState({ claimAmount })\r\n\r\n    let totalpendingReward = 0\r\n    let userSegmentInfo = [[], []]\r\n    let lpTokenSegmentBalance = [[], []]\r\n    let lpTokenSegmentAllowance = [[], []]\r\n    let pendingSegmentReward = [[], []]\r\n    let n = 0\r\n    let i = 0\r\n\r\n    let response0 = []\r\n    let response1 = []\r\n    let response2 = []\r\n    let response3 = []\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n      response0[i] = this.loadUserInfo(i)\r\n      response1[i] = this.loadLpTokenBalance(i)\r\n      response2[i] = this.loadLpTokenAllowance(i)\r\n      response3[i] = this.loadPendingReward(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n\r\n      let userInfo = await response0[i]\r\n      let lpTokenBalance = await response1[i]\r\n      let lpTokenAllowance = await response2[i]\r\n      let pendingReward = await response3[i]\r\n      totalpendingReward += parseInt(pendingReward)\r\n\r\n      if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n        userSegmentInfo[0][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n        lpTokenSegmentAllowance[0][n] = lpTokenAllowance\r\n        pendingSegmentReward[0][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n        n += 1\r\n      } else {\r\n        userSegmentInfo[1][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n        lpTokenSegmentAllowance[1][n] = lpTokenAllowance\r\n        pendingSegmentReward[1][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n        n += 1\r\n      }\r\n    }\r\n\r\n    this.setState({ lpTokenSegmentBalance })\r\n    this.setState({ pendingSegmentReward })\r\n    this.setState({ lpTokenSegmentAllowance })\r\n    this.setState({ userSegmentInfo })\r\n    this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n    this.setState({ farmLoading: true })*/\r\n  }\r\n  // ***************************Farm Info***********************************************************************\r\n  /*async loadRewardEndTime() {\r\n    let rewardEndTime = await this.state.purseTokenUpgradable.methods._getRewardEndTime().call()\r\n    return rewardEndTime\r\n  }\r\n\r\n  async loadRewardStartTime() {\r\n    let rewardStartTime = await this.state.purseTokenUpgradable.methods._getRewardStartTime().call()\r\n    return rewardStartTime\r\n  }\r\n\r\n  async loadDistributedAmount() {\r\n    let distributedAmount = await this.state.purseTokenUpgradable.methods._monthlyDistributePr().call()\r\n    return distributedAmount\r\n  }\r\n\r\n  async loadDistributedPercentage() {\r\n    let distributedPercentage = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n    return distributedPercentage\r\n  }\r\n\r\n  async loadPurseTotalSupply() {\r\n    let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods._totalSupply().call()\r\n    return purseTokenTotalSupply\r\n  }\r\n\r\n  async loadPoolCapRewardToken() {\r\n    let poolCapRewardToken = await this.state.restakingFarm.methods.capMintToken().call()\r\n    return poolCapRewardToken\r\n  }\r\n\r\n  async loadPoolMintedRewardToken() {\r\n    let poolMintedRewardToken = await this.state.restakingFarm.methods.totalMintToken().call()\r\n    return poolMintedRewardToken\r\n  }\r\n\r\n  async loadPoolLength() {\r\n    let poolLength = await this.state.restakingFarm.methods.poolLength().call()\r\n    return poolLength\r\n  }*/\r\n\r\n  async loadApiPrice() {\r\n    let coingeckoResponse = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd`);\r\n    return coingeckoResponse.json();\r\n  }\r\n\r\n  async loadBDL() {\r\n    let mongoResponse0 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/PundiX`);\r\n    return mongoResponse0.json()\r\n  }\r\n\r\n  async loadAccumulateTransfer() {\r\n    let mongoResponse1 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeTransfer`);\r\n    return mongoResponse1.json()\r\n  }\r\n\r\n  async loadAccumulateBurn() {\r\n    let mongoResponse2 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeBurn`);\r\n    return mongoResponse2.json()\r\n  }\r\n\r\n  /*async loadStakedBalance() {\r\n    let stakedBalance = await this.state.pancakeContract.methods.balanceOf(\"0x439ec8159740a9B9a579F286963Ac1C050aF31C8\").call()\r\n    stakedBalance = window.web3Bsc.utils.fromWei(stakedBalance, 'Ether')\r\n    return stakedBalance\r\n  }\r\n\r\n  async loadPurseTokenTotalSupply() {\r\n    let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods.totalSupply().call()\r\n    return purseTokenTotalSupply\r\n  }\r\n\r\n  async loadPoolRewardToken() {\r\n    let poolRewardToken = await this.state.purseTokenUpgradable.methods.balanceOf(\"0x439ec8159740a9b9a579f286963ac1c050af31c8\").call()\r\n    return poolRewardToken\r\n  }\r\n\r\n\r\n\r\n  // ***************************User Info***********************************************************************\r\n\r\n  async loadPurseTokenBalance() {\r\n    let purseTokenBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n    return purseTokenBalance\r\n  }\r\n\r\n  async loadUserInfo(i) {\r\n    let userInfo = await this.state.restakingFarm.methods.userInfo(this.state.lpTokenAddresses[i], this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadLpTokenBalance(i) {\r\n    let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadLpTokenAllowance(i) {\r\n    let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadPendingReward(i) {\r\n    let pendingReward = await this.state.restakingFarm.methods.pendingReward(this.state.lpTokenAddresses[i], this.state.account).call()\r\n    return pendingReward\r\n  }\r\n\r\n  // *************************** Distribution Reward Info ***********************************************************************\r\n\r\n  async loadLastRewardStartTime() {\r\n    let lastRewardStartTime = await this.state.purseTokenUpgradable.methods._lastRewardStartTime().call()\r\n    return lastRewardStartTime\r\n  }\r\n\r\n  async loadNumOfDays() {\r\n    let numOfDays = await this.state.purseTokenUpgradable.methods._numOfDaysPerMth().call()\r\n    return numOfDays\r\n  }\r\n\r\n  async loadPercentageDis() {\r\n    let percentageDis = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n    return percentageDis\r\n  }\r\n\r\n  async loadAverageInterval() {\r\n    let averageInterval = await this.state.purseTokenUpgradable.methods._averageInterval().call()\r\n    return averageInterval\r\n  }\r\n\r\n  async loadUserRewardInfo(address) {\r\n    let userRewardInfo = await this.state.purseTokenUpgradable.methods.accAmount(address).call()\r\n    return userRewardInfo\r\n  }\r\n\r\n  async loadUserBalance(address) {\r\n    let userBalance = await this.state.purseTokenUpgradable.methods.balanceOf(address).call()\r\n    // userBalance = window.web3Bsc.utils.fromWei(userBalance, 'Ether')\r\n    return userBalance\r\n  }*/\r\n\r\n    // ***********************************Purse Staking***************************************************************\r\n    async loadPurseStakingUserInfo() {\r\n      let purseStakingUserInfo = await this.state.purseStaking.methods.userInfo(this.state.account).call()\r\n      return purseStakingUserInfo\r\n    }\r\n    async loadPurseStakingUserStake() {\r\n      let purseStakingUserPurse = await this.state.purseStaking.methods.getTotalPurse(this.state.account).call()\r\n      return purseStakingUserPurse\r\n    }\r\n    async loadPurseStakingUserAllowance() {\r\n      let purseStakingUserAllowance = await this.state.purseToken.methods.allowance(this.state.account, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\").call()\r\n      return purseStakingUserAllowance\r\n    }\r\n    async loadPurseStakingUserPurse() {\r\n      let purseStakingUserPurse = await this.state.purseToken.methods.balanceOf(this.state.account).call()\r\n      return purseStakingUserPurse\r\n    }\r\n    async loadPurseStakingTotalReceipt() {\r\n      let purseStakingTotalReceipt = await this.state.purseStaking.methods.totalReceiptSupply().call()\r\n      return purseStakingTotalReceipt\r\n    }\r\n    async loadPurseStakingTotalStake() {\r\n      let purseStakingTotalReceipt = await this.state.purseToken.methods.balanceOf(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\").call()\r\n      return purseStakingTotalReceipt\r\n    }\r\n\r\n  // ***************************TVL & APR***********************************************************************\r\n  async loadTVLAPR() {\r\n    // Load bavaMasterFarmer\r\n\r\n    let tvl = [[], []]\r\n    let apr = [[], []]\r\n    let apyDaily = [[], []]\r\n    let apyWeekly = [[], []]\r\n    let apyMonthly = [[], []]\r\n    let n = 0\r\n\r\n    let response = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/TVLAPR`);\r\n    const myJson = await response.json();\r\n    let tvlArray = myJson[\"TVL\"]\r\n    let aprArray = myJson[\"APR\"]\r\n    let apyArray = myJson[\"APYDaily\"]\r\n\r\n    for (let i = 0; i < this.state.poolLength; i++) {\r\n\r\n      if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n        tvl[0][n] = tvlArray\r\n        apr[0][n] = aprArray\r\n        apyDaily[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 36500), 365) - 1) * 100\r\n        apyWeekly[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 5200), 52) - 1) * 100\r\n        apyMonthly[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 1200), 12) - 1) * 100\r\n        n += 1\r\n      } else {\r\n        tvl[1][n] = tvlArray\r\n        apr[1][n] = aprArray\r\n        apyDaily[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 36500), 365) - 1) * 100\r\n        apyWeekly[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 5200), 52) - 1) * 100\r\n        apyMonthly[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 1200), 12) - 1) * 100\r\n        n += 1\r\n      }\r\n    }\r\n    this.setState({ tvl })\r\n    this.setState({ apr })\r\n    this.setState({ apyDaily })\r\n    this.setState({ apyWeekly })\r\n    this.setState({ apyMonthly })\r\n    this.setState({ aprloading: true })\r\n  }\r\n\r\n\r\n  // ***********************************************************************************************************\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      // await window.ethereum.enable()\r\n      this.setState({ metamask: true })\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      this.setState({ metamask: true })\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      this.setState({ metamask: false })\r\n      this.setState({ wallet: false })\r\n    }\r\n    window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s2.binance.org:8545/`);  // testnet\r\n    //window.web3Bsc = new Web3(`https://bsc-dataseed.binance.org/`);\r\n  }\r\n\r\n  connectWallet = () => {\r\n    if (this.state.metamask == true) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(async () => {\r\n          await this.switchNetwork()\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == \"0x61\") {      // mainnet: 0x38, testnet: 0x61\r\n            this.setWalletTrigger(true)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n          } else {\r\n            console.error(\"error\");\r\n            console.error(err);\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"No Metamask provider was found\")\r\n    }\r\n  }\r\n\r\n  WalletConnect = async () => {\r\n    const provider = new WalletConnectProvider({\r\n      rpc: {\r\n        97: `https://data-seed-prebsc-1-s3.binance.org:8545/`\r\n        //56: `https://bsc-dataseed.binance.org/`\r\n      },\r\n      chainId: 97,\r\n      //chainId: 56,\r\n    });\r\n    window.provider = provider\r\n    await window.provider.enable();\r\n    window.web3Con = await new Web3(window.provider);\r\n    const networkId = await window.web3Con.eth.net.getId();\r\n    if (networkId != 97) {\r\n      alert(\"You're connected to an unsupported network.\")\r\n      this.WalletDisconnect()\r\n    } else {\r\n      const accounts = await window.web3Con.eth.getAccounts();\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ walletConnect: true })\r\n      this.setState({ networkName: \"BSC\" })\r\n      this.componentWillMount()\r\n    }\r\n\r\n    // Subscribe to accounts change\r\n    window.provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n    // Subscribe to session disconnection\r\n    window.provider.on(\"disconnect\", async () => {\r\n      await this.WalletDisconnect()\r\n    });\r\n    window.provider.on(\"chainChanged\", async () => {\r\n      await this.WalletDisconnect()\r\n      alert(\"You're connected to an unsupported network.\")\r\n    });\r\n  }\r\n\r\n  WalletDisconnect = async () => {\r\n    if (window.provider.connected == true) {\r\n      await window.provider.disconnect()\r\n    }\r\n    await this.setState({ walletConnect: false })\r\n    this.componentWillMount()\r\n  }\r\n\r\n  switchNetwork = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: '0x61' }],    // mainnet 0x38, testnet: 0x61\r\n      });\r\n    } catch (switchError) {\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0x38', rpcUrls: ['https://bsc-dataseed1.binance.org/'], chainName: 'BSC Mainnet',\r\n              nativeCurrency: {\r\n                name: 'BNB',\r\n                symbol: 'BNB', // 2-6 characters long\r\n                decimals: 18\r\n              }, blockExplorerUrls: ['https://bscscan.com/']\r\n            }],\r\n          });\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          this.setState({ chainId })\r\n          if (this.state.chainId == \"0x61\") {\r\n            this.setState({ networkName: \"BSC Testnet\" })\r\n          } else if (this.state.chainId == \"0x38\") {\r\n            this.setState({ networkName: \"BSC\" })\r\n          } else if (this.state.chainId == \"0x1\") {\r\n            this.setState({ networkName: \"Ethereum\" })\r\n          } else if (this.state.chainId == \"0x3\") {\r\n            this.setState({ networkName: \"Ropsten\" })\r\n          } else if (this.state.chainId == \"0x4\") {\r\n            this.setState({ networkName: \"Rinkeby\" })\r\n          } else if (this.state.chainId == \"0x2a\") {\r\n            this.setState({ networkName: \"Kovan\" })\r\n          } else if (this.state.chainId == \"0x89\") {\r\n            this.setState({ networkName: \"Polygon\" })\r\n          } else if (this.state.chainId == \"0x13881\") {\r\n            this.setState({ networkName: \"Mumbai\" })\r\n          } else if (this.state.chainId == \"0xa869\") {\r\n            this.setState({ networkName: \"Fuji\" })\r\n          } else if (this.state.chainId == \"0xa86a\") {\r\n            this.setState({ networkName: \"Avalanche\" })\r\n          }\r\n        } catch (addError) {\r\n          // handle \"add\" error\r\n        }\r\n      }\r\n      // handle other \"switch\" errors\r\n    }\r\n  }\r\n\r\n\r\n  handleAccountsChanged = async (accounts) => {\r\n    if (this.state.wallet == true) {\r\n      if (accounts.length === 0) {\r\n        // MetaMask is locked or the user has not connected any accounts\r\n        this.setWalletTrigger(false)\r\n      } else if (accounts[0] !== this.state.account) {\r\n        this.state.account = accounts[0];\r\n        const first4Account = this.state.account.substring(0, 4)\r\n        const last4Account = this.state.account.slice(-4)\r\n        this.setState({ first4Account: first4Account })\r\n        this.setState({ last4Account: last4Account })\r\n        this.componentWillMount()\r\n        // Do any other work!\r\n      }\r\n    } else if (this.state.walletConnect == true) {\r\n      const accounts = await window.web3Con.eth.getAccounts();\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ walletConnect: true })\r\n      this.componentWillMount()\r\n    }\r\n  }\r\n\r\n  handleChainChanged = async () => {\r\n    // We recommend reloading the page, unless you must do otherwise\r\n    // window.location.reload();\r\n    if (this.state.wallet == true) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n      if (chainId != \"0x61\") {\r\n        this.setWalletTrigger(false)\r\n      }\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      this.switchNetwork()\r\n      // Run any other necessary logic...\r\n    }\r\n  }\r\n\r\n  timeConverter = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var min = a.getMinutes().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var sec = a.getSeconds().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n  }\r\n\r\n  delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  deposit = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  approve = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      let lpToken = new window.web3Con.eth.Contract(LpToken.abi, this.state.lpTokenAddresses[i])\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    } else if (this.state.wallet == true) {\r\n      let lpToken = new window.web3.eth.Contract(LpToken.abi, this.state.lpTokenAddresses[i])\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n  withdraw = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  harvest = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit LP to earn PURSE\")\r\n      } else {\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        restakingFarm.methods.claimReward(this.state.lpTokenAddresses[i]).send({ from: this.state.account }).then(async (result) => {\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    } else if (this.state.wallet == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit LP to earn PURSE\")\r\n      } else {\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n\r\n        restakingFarm.methods.claimReward(this.state.lpTokenAddresses[i]).send({ from: this.state.account }).then(async (result) => {\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      alert(\"Wallet is not connected\")\r\n    }\r\n  }\r\n\r\n  checkClaimAmount = async (address) => {\r\n\r\n    let response0 = this.loadLastRewardStartTime()\r\n    let response1 = this.loadNumOfDays()\r\n    let response2 = this.loadPercentageDis()\r\n    let response3 = this.loadAverageInterval()\r\n    let response4 = this.loadUserRewardInfo(address)\r\n    let response5 = this.loadUserBalance(address)\r\n    let response6 = this.loadPurseTotalSupply()\r\n\r\n    let lastRewardStartTime = await response0\r\n    let numOfDays = await response1\r\n    let percentageDis = await response2\r\n    let averageInterval = await response3\r\n    let userRewardInfo = await response4\r\n    let userBalance = await response5\r\n    let purseTokenTotalSupply = await response6\r\n    let reward = 0\r\n\r\n    if (userRewardInfo.lastUpdateTime == 0) {\r\n      reward = 0\r\n    } else if (userRewardInfo.lastUpdateTime >= this.state.rewardStartTime) {\r\n      reward = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.accReward, 'Ether'))\r\n    } else if (userRewardInfo.lastUpdateTime < lastRewardStartTime) {       // 1st distribution wont happen, all users lastUpdateTime either 0 or > lastRewardStartTime\r\n      let interval = parseInt((this.state.rewardStartTime - lastRewardStartTime) / averageInterval);\r\n      let accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval);\r\n      reward = accumulateAmount * this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\r\n    } else {\r\n      let interval = parseInt((this.state.rewardStartTime - userRewardInfo.lastUpdateTime) / averageInterval);\r\n      let accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval)\r\n      let lastmonthAccAmount = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.amount, 'Ether')) + accumulateAmount\r\n      reward = lastmonthAccAmount * this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100\r\n    }\r\n    return reward\r\n  }\r\n\r\n  claimDistributePurse = async () => {\r\n    if ((Date.now() / 1000).toFixed(0) < this.state.rewardStartTime) {\r\n      alert(\"Distribution not started yet\")\r\n    } else if ((Date.now() / 1000).toFixed(0) > this.state.rewardEndTime) {\r\n      alert(\"Distribution already end\")\r\n    } else {\r\n      if (this.state.claimAmount == 0) {\r\n        alert(\"No reward available\")\r\n      } else {\r\n        if (this.state.walletConnect == true) {\r\n          let purseTokenUpgradable = new window.web3Con.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\")\r\n          await purseTokenUpgradable.methods.claimDistributionPurse().send({ from: this.state.account })\r\n        } else if (this.state.wallet == true) {\r\n          let purseTokenUpgradable = new window.web3.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\")\r\n          await purseTokenUpgradable.methods.claimDistributionPurse().send({ from: this.state.account })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setI = (type, pair) => {\r\n    this.setState({ n: type })\r\n    this.setState({ i: pair })\r\n  }\r\n\r\n  setTrigger = (state) => {\r\n    this.setState({ buttonPopup: state })\r\n  }\r\n\r\n  setWalletTrigger = async (state) => {\r\n    if (state == false) {\r\n      await this.setState({ wallet: state })\r\n      this.componentWillMount()\r\n    } else {\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ wallet: state })\r\n      this.componentWillMount()\r\n    }\r\n  }\r\n\r\n  stake = async (amount) => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\") \r\n      await purseStaking.methods.enter(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\") \r\n      await purseStaking.methods.enter(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    }\r\n  }\r\n\r\n  unstake = async (receipt) => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\") \r\n      await purseStaking.methods.leave(receipt).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    } else if (this.state.wallet == true) {\r\n      let purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\") \r\n      await purseStaking.methods.leave(receipt).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });  \r\n    }\r\n  }\r\n\r\n  checkPurseAmount = async (receipt) => {\r\n    let purseStakingTotalStake = await this.loadPurseStakingTotalStake()\r\n    let purseStakingTotalReceipt = await this.loadPurseStakingTotalReceipt()\r\n\r\n    let purseWei = (receipt * purseStakingTotalStake / purseStakingTotalReceipt).toString()\r\n    let purse = parseFloat(window.web3Bsc.utils.fromWei(purseWei, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 10 })\r\n    return purse\r\n  }\r\n\r\n  approvePurse = async () => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseToken = new window.web3Con.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n      await purseToken.methods.approve(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      let purseToken = new window.web3.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n      await purseToken.methods.approve(\"0x7Afe4C3Cee2036341C6D1a5Fefb8178F8b556711\", \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      lpToken: {},\r\n      purseTokenUpgradable: {},\r\n      restakingFarm: {},\r\n      purseTokenUpgradableBalance: '0',\r\n      purseTokenTotalSupply: '0',\r\n      totalBurnAmount: '0',\r\n      sum30BurnAmount: '0',\r\n      totalTransferAmount: '0',\r\n      sum30TransferAmount: '0',\r\n      cumulateTransfer: [],\r\n      cumulateBurn: [],\r\n      stakedBalance: '0',\r\n      i: '0',\r\n      n: '0',\r\n      wallet: false,\r\n      metamask: false,\r\n      farmLoading: false,\r\n      walletConnect: false,\r\n      aprloading: false,\r\n      poolLength: '0',\r\n      userSegmentInfo: [[], []],\r\n      poolSegmentInfo: [[], []],\r\n      lpTokenSegmentBalance: [[], []],\r\n      pendingSegmentReward: [[], []],\r\n      lpTokenSegmentAllowance: [[], []],\r\n      tvl: [[], []],\r\n      apr: [[], []],\r\n      apyDaily: [[], []],\r\n      apyWeekly: [[], []],\r\n      apyMonthly: [[], []],\r\n      totalrewardperblock: '0',\r\n      totalpendingReward: '0',\r\n      buttonPopup: false,\r\n      poolCapRewardToken: '0',\r\n      poolMintedRewardToken: '0',\r\n      poolRewardToken: '0',\r\n      networkName: \"Loading\",\r\n      rewardEndTime: '0',\r\n      rewardStartTime: '0',\r\n      distributedAmount: '0',\r\n      distributedPercentage: '0',\r\n      rewardEndTimeDate: '0',\r\n      rewardStartTimeDate: '0',\r\n      claimAmount: '0',\r\n      purseStakingUserReceipt: '0',\r\n      purseStakingUserPurse: '0',\r\n      purseStakingUserStake: '0',\r\n      purseStakingUserAllowance: '0',\r\n      purseStakingTotalStake: '0',\r\n      purseStakingTotalReceipt: '0',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let maincontent\r\n    let menucontent\r\n    let depositcontent\r\n    let oneinchContent\r\n    let distributionContent\r\n    let farmInfoContent\r\n    let stakeContent\r\n    maincontent = <Main\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      poolLength={this.state.poolLength}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      PURSEPrice={this.state.PURSEPrice}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      lpTokenInContract={this.state.lpTokenInContract}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      poolCapRewardToken={this.state.poolCapRewardToken}\r\n      poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n      poolRewardToken={this.state.poolRewardToken}\r\n      totalBurnAmount={this.state.totalBurnAmount}\r\n      sum30BurnAmount={this.state.sum30BurnAmount}\r\n      totalTransferAmount={this.state.totalTransferAmount}\r\n      sum30TransferAmount={this.state.sum30TransferAmount}\r\n      cumulateTransfer={this.state.cumulateTransfer}\r\n      cumulateBurn={this.state.cumulateBurn}\r\n    />\r\n    /*menucontent = <Menu\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      farmNetwork={this.state.farmNetwork}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      apyWeekly={this.state.apyWeekly}\r\n      apyMonthly={this.state.apyMonthly}\r\n      farmLoading={this.state.farmLoading}\r\n      aprloading={this.state.aprloading}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      setI={this.setI}\r\n      setTrigger={this.setTrigger}\r\n      harvest={this.harvest}\r\n      stakedBalance={this.state.stakedBalance}\r\n    />\r\n    depositcontent = <Deposit\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      i={this.state.i}\r\n      n={this.state.n}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      c={this.state.lpTokenSegmentAsymbol}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      lpTokenSegmentAllowance={this.state.lpTokenSegmentAllowance}\r\n      wallet={this.state.wallet}\r\n      farmNetwork={this.state.farmNetwork}\r\n      harvest={this.harvest}\r\n      approve={this.approve}\r\n      connectWallet={this.connectWallet}\r\n      walletConnect={this.state.walletConnect}\r\n    />\r\n    oneinchContent = <Oneinch\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      farmNetwork={this.state.farmNetwork}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      apyWeekly={this.state.apyWeekly}\r\n      apyMonthly={this.state.apyMonthly}\r\n      farmLoading={this.state.farmLoading}\r\n      aprloading={this.state.aprloading}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      setI={this.setI}\r\n      setTrigger={this.setTrigger}\r\n      harvest={this.harvest}\r\n    />\r\n    farmInfoContent = <Farm\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      poolLength={this.state.poolLength}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      lpTokenInContract={this.state.lpTokenInContract}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      poolCapRewardToken={this.state.poolCapRewardToken}\r\n      poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n      poolRewardToken={this.state.poolRewardToken}\r\n    />\r\n    distributionContent = <Distribution\r\n      wallet={this.state.wallet}\r\n      walletConnect={this.state.walletConnect}\r\n      connectWallet={this.connectWallet}\r\n      checkClaimAmount={this.checkClaimAmount}\r\n      claimDistributePurse={this.claimDistributePurse}\r\n      account={this.state.account}\r\n      rewardEndTime={this.state.rewardEndTime}\r\n      rewardStartTime={this.state.rewardStartTime}\r\n      distributedAmount={this.state.distributedAmount}\r\n      distributedPercentage={this.state.distributedPercentage}\r\n      rewardStartTimeDate={this.state.rewardStartTimeDate}\r\n      rewardEndTimeDate={this.state.rewardEndTimeDate}\r\n      claimAmount={this.state.claimAmount}\r\n      totalTransferAmount={this.state.totalTransferAmount}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n    />*/\r\n    stakeContent = <Stake\r\n      wallet={this.state.wallet}\r\n      walletConnect={this.state.walletConnect}\r\n      connectWallet={this.connectWallet}\r\n      account={this.state.account}\r\n      PURSEPrice={this.state.PURSEPrice}\r\n      purseStaking={this.state.purseStaking}\r\n      purseStakingUserReceipt={this.state.purseStakingUserReceipt}\r\n      purseStakingUserPurse={this.state.purseStakingUserPurse}\r\n      purseStakingUserStake={this.state.purseStakingUserStake}\r\n      purseStakingUserAllowance={this.state.purseStakingUserAllowance}\r\n      purseStakingTotalStake={this.state.purseStakingTotalStake}\r\n      purseStakingTotalReceipt={this.state.purseStakingTotalReceipt}\r\n      stake={this.stake}\r\n      unstake={this.unstake}\r\n      checkPurseAmount={this.checkPurseAmount}\r\n      approvePurse = {this.approvePurse}\r\n    />\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navb\r\n            account={this.state.account}\r\n            first4Account={this.state.first4Account}\r\n            last4Account={this.state.last4Account}\r\n            wallet={this.state.wallet}\r\n            setWalletTrigger={this.setWalletTrigger}\r\n            loadWeb3={this.loadWeb3}\r\n            connectWallet={this.connectWallet}\r\n            WalletConnect={this.WalletConnect}\r\n            walletConnect={this.state.walletConnect}\r\n            WalletDisconnect={this.WalletDisconnect}\r\n            networkName={this.state.networkName}\r\n            PURSEPrice={this.state.PURSEPrice}\r\n          />\r\n          <div className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '1000px' }}>\r\n                <div className=\"content mr-auto ml-auto\">\r\n                  <Switch>\r\n                    <Route path=\"/\" exact > {maincontent} </Route>\r\n                    <Route path=\"/home\" exact > {maincontent} </Route>\r\n                    {/*<Route path=\"/lpfarm/menu\" exact > {menucontent} </Route>\r\n                    <Route path=\"/lpfarm/farmInfo\" exact > {farmInfoContent} </Route>\r\n                    <Route path=\"/lpfarm/oneinch\" exact > {oneinchContent} </Route>\r\n                    <Route path=\"/distribution\" exact > {distributionContent} </Route>\r\n                    <Route path=\"/deposit\" exact > {depositcontent} </Route>*/}\r\n                    <Route path=\"/stake\" exact > {stakeContent} </Route>\r\n                  </Switch>\r\n                  <Popup trigger={this.state.buttonPopup} setTrigger={this.setTrigger}>\r\n                    <div className=\"container-fluid\">{depositcontent}</div>\r\n                  </Popup>\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}