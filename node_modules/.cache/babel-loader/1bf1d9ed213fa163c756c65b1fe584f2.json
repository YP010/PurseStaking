{"ast":null,"code":"import _classCallCheck from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanping/Documents/LPRestakingFarm/src/components/1inch.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport purse from '../purse.png';\nimport purse2 from '../purse2.png';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Buttons from 'react-bootstrap/Button';\nimport './App.css';\nimport Popup from 'reactjs-popup';\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"content\",\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/lpfarm/menu/\",\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Buttons, {\n        className: \"textWhiteMedium center hover\",\n        variant: \"link\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }\n      }, \"PANCAKESWAP\")), /*#__PURE__*/React.createElement(Link, {\n        to: \"/lpfarm/oneinch/\",\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Buttons, {\n        className: \"textPurpleMedium center hover\",\n        variant: \"outline\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, \"1INCH\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: purse2,\n        height: \"180\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"textWhite center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 50\n        }\n      }, \"LP Restaking Farm\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        style: {\n          color: 'silver'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"\\xA0Stake \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 81\n        }\n      }, \"\\xA01INCH LP Tokens\\xA0\"), \" to earn PURSE!!!\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rowC center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-4 cardbody\",\n        style: {\n          minWidth: '350px',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, \"Your PURSE Balance\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 61\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, \"Total Pending harvest\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      }), \"\\xA0PURSE\")))))), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-4 cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body \",\n        style: {\n          minWidth: '350px',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, \"Total PURSE Supply\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 61\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }\n      }, \"Total Reward/block\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }\n      }, window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether'), \"\\xA0PURSE\")))))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center textWhite comingSoon\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(\"big\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 92\n        }\n      }, \"Coming Soon!\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 35\n        }\n      }));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/yanping/Documents/LPRestakingFarm/src/components/1inch.js"],"names":["React","Component","Link","purse","purse2","ButtonGroup","Buttons","Popup","BsFillQuestionCircleFill","Menu","textDecoration","color","minWidth","parseFloat","window","web3Bsc","utils","fromWei","props","purseTokenUpgradableBalance","toLocaleString","maximumFractionDigits","totalpendingReward","purseTokenTotalSupply","totalrewardperblock"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse2.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Link to=\"/lpfarm/menu/\" style={{ textDecoration: \"none\" }}>\r\n                            <Buttons className=\"textWhiteMedium center hover\" variant=\"link\" size=\"lg\">PANCAKESWAP</Buttons>\r\n                        </Link>\r\n                        <Link to=\"/lpfarm/oneinch/\" style={{ textDecoration: \"none\" }}>\r\n                            <Buttons className=\"textPurpleMedium center hover\" variant=\"outline\" size=\"lg\">1INCH</Buttons>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='180' alt=\"\" />\r\n                </div>\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;1INCH LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'white' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {parseFloat(window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'white' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"center textWhite comingSoon\" style={{ color: 'white' }}><b><big>Coming Soon!</big></b></div>\r\n                {/* <div className=\"center\" style={{ color: 'grey' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div> */}\r\n                <br /><br /><br /><br />\r\n\r\n\r\n\r\n\r\n                {/* {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[1].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[1].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'silver' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]}</b>\r\n                                                <div>\r\n                                                    <div className=\"\"><small>Deposit<small className=\"textSmall\">{this.props.lpTokenSegmentAsymbol[1][i]}-{this.props.lpTokenSegmentBsymbol[1][i]} PANCAKE LP</small> to Earn PURSE</small></div>\r\n\r\n                                                    <div className=\"\" style={{ color: 'silver' }}> {this.props.aprloading ?\r\n                                                        <div className=\"borderTop\" style={{ marginTop: '8px' }}>\r\n                                                            <span className=\"\"><small>APR: {parseFloat(this.props.apr[1][i]).toLocaleString('en-US', {maximumFractionDigits:2})} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={-50}\r\n                                                                    offsetX={10}\r\n                                                                    contentStyle={{ padding: '3px' }}\r\n                                                                ><span className=\"textInfo\"><small>APR are affected by the price of PURSE which has not yet stabilized. </small></span>\r\n                                                                    <span className=\"textInfo\"><small>If it shows 'NaN' or 'Infinity', it means currently the pool has no LP token staked. </small></span>\r\n                                                                </Popup></span><br />\r\n                                                            <span><small>APY: {parseFloat(this.props.apyDaily[1][i]).toLocaleString('en-US', {maximumFractionDigits:0})} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={-50}\r\n                                                                    offsetX={10}\r\n                                                                    contentStyle={{ padding: '3px' }}\r\n                                                                ><span className=\"textInfo\"><small>APY are calculated based on the compound APR number. </small></span>\r\n                                                                    <span className=\"textInfo\"><small>The value shown on Farm Menu is based on daily compounding frequency. </small></span>\r\n                                                                    <span className=\"textInfo\"><small>For weekly and monthly compounding frequency, APY : {parseFloat(this.props.apyWeekly[1][i]).toFixed(0)} / {parseFloat(this.props.apyMonthly[1][i]).toFixed(0)} %</small></span>\r\n                                                                </Popup></span></div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span><br />\r\n                                                            <span><small>APY:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </div>\r\n\r\n                                                    <span className=\"\"><small>Bonus Multiplier: {this.props.bonusMultiplier[1][i]}x &nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span style={{ position: \"relative\", top: '-0.8px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={-50}\r\n                                                            offsetX={5}\r\n                                                            contentStyle={{ padding: '3px' }}\r\n                                                        >\r\n                                                            <span className=\"textInfo\"><small>The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.</small><br /></span>\r\n                                                            <span className=\"textInfo\"><small>This amount is already included in all APR calculations for the farm. </small></span></Popup>&nbsp;</small></span><br />\r\n\r\n                                                    <span className=\" \"><small>LP Staked: {parseFloat(this.props.userSegmentInfo[1][i]).toLocaleString('en-US', {maximumFractionDigits:2})}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {parseFloat(this.props.pendingSegmentReward[1][i]).toLocaleString('en-US', {maximumFractionDigits:0})}</small></span><br />\r\n                                                    <span className=\" \"><small>{this.props.aprloading ? <div className=\"\">TVL: $ {parseFloat(this.props.tvl[1][i]).toLocaleString('en-US', {maximumFractionDigits:0})} </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>TVL:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </small></span>\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(1, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"1\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                } */}\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}