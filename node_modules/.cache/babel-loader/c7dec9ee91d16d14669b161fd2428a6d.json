{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanping/Documents/LPRestakingFarm/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LpToken from '../abis/LpToken.json';\nimport IPancakePair from '../abis/IPancakePair.json';\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json';\nimport RestakingFarm from '../abis/RestakingFarm.json';\nimport PurseFarm from '../farm/farmPurse.json';\nimport Navb from './Navbar';\nimport Main from './Main';\nimport Menu from './Menu';\nimport Oneinch from './1inch';\nimport Deposit from './Deposit';\nimport Popup from './Popup';\nimport Farm from './Farm';\nimport Distribution from './Distribution';\nimport Stake from './Stake';\nimport './Popup.css';\nimport './App.css';\nimport PurseStaking from '../abis/PurseStaking.json';\nimport PurseToken from '../abis/PurseTokenTest.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadFarmData();\n\n              case 4:\n                _context.next = 6;\n                return this.loadBlockchainData();\n\n              case 6:\n                this.loadTVLAPR();\n\n              case 7:\n                if (!((this.state.wallet || this.state.walletConnect) == true)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 10;\n                return this.loadBlockchainUserData();\n\n              case 10:\n                _context.next = 12;\n                return this.delay(10000);\n\n              case 12:\n                _context.next = 7;\n                break;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadFarmData\",\n    value: function () {\n      var _loadFarmData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var farm;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                farm = PurseFarm.farm;\n                this.setState({\n                  farm: farm\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadFarmData() {\n        return _loadFarmData.apply(this, arguments);\n      }\n\n      return loadFarmData;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3Bsc, networkId, farmNetwork, chainId, mongoResponse0, mongoResponse1, mongoResponse2, coingeckoResponse, myJson, myJson1, myJson2, myJson3, PURSEPrice, USDTPrice, USDCPrice, BNBPrice, WETHPrice, BUSDPrice, BTCPrice, totalTransferAmount, sum30TransferAmount, totalBurnAmount, sum30BurnAmount, cumulateTransfer, cumulateBurn, pancakeContract, purseTokenUpgradable, restakingFarm, purseStaking, purseToken, farmResponse0, farmResponse1, farmResponse2, response0, response1, response2, response3, response4, response5, response6, purseResponse0, purseResponse1, purseResponse2, purseResponse3, stakedBalance, purseTokenTotalSupply, poolRewardToken, rewardEndTime, rewardStartTime, distributedAmount, distributedPercentage, poolCapRewardToken, poolMintedRewardToken, poolLength, rewardStartTimeDate, rewardEndTimeDate, purseStakingUserReceipt, purseStakingUserReward, purseStakingUserAllowance, purseStakingUserPurse, totalrewardperblock, purseTokenUpgradableBalance, poolSegmentInfo, lpTokenSegmentBalance, userSegmentInfo, pendingSegmentReward, lpTokenAddresses, lpTokenPairsymbols, n, i, poolInfo, lpTokenBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3Bsc = window.web3Bsc;\n                networkId = \"56\";\n                this.setState({\n                  networkId: networkId\n                });\n                farmNetwork = \"MAINNET\";\n                this.setState({\n                  farmNetwork: farmNetwork\n                });\n\n                if (!(this.state.metamask == true && this.state.walletConnect == false)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 8;\n                return window.ethereum.request({\n                  method: 'eth_chainId'\n                });\n\n              case 8:\n                chainId = _context3.sent;\n                this.setState({\n                  chainId: chainId\n                });\n\n                if (this.state.chainId == \"0x61\") {\n                  this.setState({\n                    networkName: \"BSC Testnet\"\n                  });\n                } else if (this.state.chainId == \"0x38\") {\n                  this.setState({\n                    networkName: \"BSC\"\n                  });\n                } else if (this.state.chainId == \"0x1\") {\n                  this.setState({\n                    networkName: \"Ethereum\"\n                  });\n                } else if (this.state.chainId == \"0x3\") {\n                  this.setState({\n                    networkName: \"Ropsten\"\n                  });\n                } else if (this.state.chainId == \"0x4\") {\n                  this.setState({\n                    networkName: \"Rinkeby\"\n                  });\n                } else if (this.state.chainId == \"0x2a\") {\n                  this.setState({\n                    networkName: \"Kovan\"\n                  });\n                } else if (this.state.chainId == \"0x89\") {\n                  this.setState({\n                    networkName: \"Polygon\"\n                  });\n                } else if (this.state.chainId == \"0x13881\") {\n                  this.setState({\n                    networkName: \"Mumbai\"\n                  });\n                } else if (this.state.chainId == \"0xa869\") {\n                  this.setState({\n                    networkName: \"Fuji\"\n                  });\n                } else if (this.state.chainId == \"0xa86a\") {\n                  this.setState({\n                    networkName: \"Avalanche\"\n                  });\n                }\n\n                window.ethereum.on('chainChanged', this.handleChainChanged);\n                window.ethereum.on('accountsChanged', this.handleAccountsChanged);\n                _context3.next = 16;\n                break;\n\n              case 15:\n                if (this.state.metamask == false && this.state.walletConnect == false) {\n                  this.setState({\n                    chainID: \"0x\"\n                  });\n                  this.setState({\n                    networkName: \"Unavailable\"\n                  });\n                }\n\n              case 16:\n                mongoResponse0 = this.loadBDL();\n                mongoResponse1 = this.loadAccumulateTransfer();\n                mongoResponse2 = this.loadAccumulateBurn();\n                coingeckoResponse = this.loadApiPrice();\n                _context3.next = 22;\n                return mongoResponse0;\n\n              case 22:\n                myJson = _context3.sent;\n                _context3.next = 25;\n                return mongoResponse1;\n\n              case 25:\n                myJson1 = _context3.sent;\n                _context3.next = 28;\n                return mongoResponse2;\n\n              case 28:\n                myJson2 = _context3.sent;\n                _context3.next = 31;\n                return coingeckoResponse;\n\n              case 31:\n                myJson3 = _context3.sent;\n                PURSEPrice = myJson3[\"pundi-x-purse\"][\"usd\"];\n                this.setState({\n                  PURSEPrice: PURSEPrice.toFixed(7)\n                });\n                USDTPrice = myJson3[\"tether\"][\"usd\"];\n                this.setState({\n                  USDTPrice: USDTPrice.toFixed(7)\n                });\n                USDCPrice = myJson3[\"usd-coin\"][\"usd\"];\n                this.setState({\n                  USDCPrice: USDCPrice.toFixed(7)\n                });\n                BNBPrice = myJson3[\"binancecoin\"][\"usd\"];\n                this.setState({\n                  BNBPrice: BNBPrice.toFixed(7)\n                });\n                WETHPrice = myJson3[\"weth\"][\"usd\"];\n                this.setState({\n                  WETHPrice: WETHPrice.toFixed(7)\n                });\n                BUSDPrice = myJson3[\"binance-usd\"][\"usd\"];\n                this.setState({\n                  BUSDPrice: BUSDPrice.toFixed(7)\n                });\n                BTCPrice = myJson3[\"bitcoin\"][\"usd\"];\n                this.setState({\n                  BTCPrice: BTCPrice.toFixed(7)\n                });\n                totalTransferAmount = myJson[\"TransferTotal\"];\n                sum30TransferAmount = myJson[\"Transfer30Days\"];\n                totalBurnAmount = myJson[\"BurnTotal\"];\n                sum30BurnAmount = myJson[\"Burn30Days\"];\n                cumulateTransfer = myJson1;\n                cumulateBurn = myJson2;\n                this.setState({\n                  totalBurnAmount: totalBurnAmount\n                });\n                this.setState({\n                  sum30BurnAmount: sum30BurnAmount\n                });\n                this.setState({\n                  totalTransferAmount: totalTransferAmount\n                });\n                this.setState({\n                  sum30TransferAmount: sum30TransferAmount\n                });\n                this.setState({\n                  cumulateTransfer: cumulateTransfer\n                });\n                this.setState({\n                  cumulateBurn: cumulateBurn\n                }); // Load contract\n\n                pancakeContract = new window.web3Bsc.eth.Contract(IPancakePair.abi, \"0x081F4B87F223621B4B31cB7A727BB583586eAD98\");\n                purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\"); //mainnet\n\n                restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, \"0x439ec8159740a9b9a579f286963ac1c050af31c8\");\n                purseStaking = new window.web3Bsc.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\");\n                purseToken = new window.web3Bsc.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n                this.setState({\n                  purseTokenUpgradable: purseTokenUpgradable\n                });\n                this.setState({\n                  restakingFarm: restakingFarm\n                });\n                this.setState({\n                  pancakeContract: pancakeContract\n                });\n                this.setState({\n                  purseStaking: purseStaking\n                });\n                this.setState({\n                  purseToken: purseToken\n                });\n\n                if (!(this.state.wallet == false && this.state.walletConnect == false)) {\n                  _context3.next = 164;\n                  break;\n                }\n\n                farmResponse0 = this.loadStakedBalance();\n                farmResponse1 = this.loadPurseTokenTotalSupply();\n                farmResponse2 = this.loadPoolRewardToken();\n                response0 = this.loadRewardEndTime();\n                response1 = this.loadRewardStartTime();\n                response2 = this.loadDistributedAmount();\n                response3 = this.loadDistributedPercentage();\n                response4 = this.loadPoolCapRewardToken();\n                response5 = this.loadPoolMintedRewardToken();\n                response6 = this.loadPoolLength();\n                purseResponse0 = this.loadPurseStakingUserReceipt();\n                purseResponse1 = this.loadPurseStakingUserReward();\n                purseResponse2 = this.loadPurseStakingUserAllowance();\n                purseResponse3 = this.loadPurseStakingUserPurse();\n                _context3.next = 85;\n                return farmResponse0;\n\n              case 85:\n                stakedBalance = _context3.sent;\n                _context3.next = 88;\n                return farmResponse1;\n\n              case 88:\n                purseTokenTotalSupply = _context3.sent;\n                _context3.next = 91;\n                return farmResponse2;\n\n              case 91:\n                poolRewardToken = _context3.sent;\n                _context3.next = 94;\n                return response0;\n\n              case 94:\n                rewardEndTime = _context3.sent;\n                _context3.next = 97;\n                return response1;\n\n              case 97:\n                rewardStartTime = _context3.sent;\n                _context3.next = 100;\n                return response2;\n\n              case 100:\n                distributedAmount = _context3.sent;\n                _context3.next = 103;\n                return response3;\n\n              case 103:\n                distributedPercentage = _context3.sent;\n                _context3.next = 106;\n                return response4;\n\n              case 106:\n                poolCapRewardToken = _context3.sent;\n                _context3.next = 109;\n                return response5;\n\n              case 109:\n                poolMintedRewardToken = _context3.sent;\n                _context3.next = 112;\n                return response6;\n\n              case 112:\n                poolLength = _context3.sent;\n                rewardStartTimeDate = this.timeConverter(rewardStartTime);\n                rewardEndTimeDate = this.timeConverter(rewardEndTime);\n                _context3.next = 117;\n                return purseResponse0;\n\n              case 117:\n                purseStakingUserReceipt = _context3.sent;\n                _context3.next = 120;\n                return purseResponse1;\n\n              case 120:\n                purseStakingUserReward = _context3.sent;\n                _context3.next = 123;\n                return purseResponse2;\n\n              case 123:\n                purseStakingUserAllowance = _context3.sent;\n                _context3.next = 126;\n                return purseResponse3;\n\n              case 126:\n                purseStakingUserPurse = _context3.sent;\n                this.setState({\n                  stakedBalance: stakedBalance.toString()\n                });\n                this.setState({\n                  purseTokenTotalSupply: purseTokenTotalSupply.toString()\n                });\n                this.setState({\n                  poolRewardToken: poolRewardToken.toString()\n                });\n                this.setState({\n                  poolCapRewardToken: poolCapRewardToken\n                });\n                this.setState({\n                  poolMintedRewardToken: poolMintedRewardToken\n                });\n                this.setState({\n                  poolLength: poolLength\n                });\n                this.setState({\n                  purseStakingUserReceipt: purseStakingUserReceipt.toString()\n                });\n                this.setState({\n                  purseStakingUserReward: purseStakingUserReward.toString()\n                });\n                this.setState({\n                  purseStakingUserAllowance: purseStakingUserAllowance.toString()\n                });\n                this.setState({\n                  purseStakingUserPurse: purseStakingUserPurse.toString()\n                });\n                totalrewardperblock = 0;\n                purseTokenUpgradableBalance = 0;\n                poolSegmentInfo = [[], []];\n                lpTokenSegmentBalance = [[], []];\n                userSegmentInfo = [[], []];\n                pendingSegmentReward = [[], []];\n                lpTokenAddresses = [];\n                lpTokenPairsymbols = [];\n                n = 0;\n                i = 0;\n\n                for (i = 0; i < poolLength; i++) {\n                  poolInfo = this.state.farm[i];\n                  lpTokenBalance = 0;\n                  totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolInfo.bonusMultiplier);\n                  lpTokenAddresses[i] = poolInfo.lpAddresses[this.state.networkId];\n                  lpTokenPairsymbols[i] = poolInfo.lpTokenPairsymbol;\n\n                  if (poolInfo.lpTokenPairsymbol == \"Cake-LP\") {\n                    userSegmentInfo[0][n] = \"\";\n                    pendingSegmentReward[0][n] = \"\";\n                    poolSegmentInfo[0][n] = poolInfo;\n                    lpTokenSegmentBalance[0][n] = lpTokenBalance;\n                    n += 1;\n                  } else {\n                    userSegmentInfo[1][n] = \"\";\n                    pendingSegmentReward[1][n] = \"\";\n                    poolSegmentInfo[1][n] = poolInfo;\n                    lpTokenSegmentBalance[1][n] = lpTokenBalance;\n                    n += 1;\n                  }\n                }\n\n                this.setState({\n                  purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString()\n                });\n                this.setState({\n                  poolSegmentInfo: poolSegmentInfo\n                });\n                this.setState({\n                  lpTokenSegmentBalance: lpTokenSegmentBalance\n                });\n                this.setState({\n                  totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', {\n                    useGrouping: false\n                  })\n                });\n                this.setState({\n                  pendingSegmentReward: [[], []]\n                });\n                this.setState({\n                  userSegmentInfo: [[], []]\n                });\n                this.setState({\n                  totalpendingReward: \"0\"\n                });\n                this.setState({\n                  lpTokenAddresses: lpTokenAddresses\n                });\n                this.setState({\n                  lpTokenPairsymbols: lpTokenPairsymbols\n                });\n                this.setState({\n                  rewardStartTime: rewardStartTime\n                });\n                this.setState({\n                  rewardEndTime: rewardEndTime\n                });\n                this.setState({\n                  rewardStartTimeDate: rewardStartTimeDate\n                });\n                this.setState({\n                  rewardEndTimeDate: rewardEndTimeDate\n                });\n                this.setState({\n                  distributedAmount: distributedAmount\n                });\n                this.setState({\n                  distributedPercentage: distributedPercentage\n                });\n                this.setState({\n                  farmLoading: true\n                });\n\n              case 164:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() // ##############################################################################################################################\n\n  }, {\n    key: \"loadBlockchainUserData\",\n    value: function () {\n      var _loadBlockchainUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var userResponse0, userResponse1, purseTokenUpgradableBalance, claimAmount, totalpendingReward, userSegmentInfo, lpTokenSegmentBalance, lpTokenSegmentAllowance, pendingSegmentReward, n, i, response0, response1, response2, response3, userInfo, lpTokenBalance, lpTokenAllowance, pendingReward;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // Load PurseTokenUpgradable\n                userResponse0 = this.loadPurseTokenBalance();\n                userResponse1 = this.checkClaimAmount(this.state.account);\n                _context4.next = 4;\n                return userResponse0;\n\n              case 4:\n                purseTokenUpgradableBalance = _context4.sent;\n                _context4.next = 7;\n                return userResponse1;\n\n              case 7:\n                claimAmount = _context4.sent;\n                this.setState({\n                  purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString()\n                });\n                this.setState({\n                  claimAmount: claimAmount\n                });\n                totalpendingReward = 0;\n                userSegmentInfo = [[], []];\n                lpTokenSegmentBalance = [[], []];\n                lpTokenSegmentAllowance = [[], []];\n                pendingSegmentReward = [[], []];\n                n = 0;\n                i = 0;\n                response0 = [];\n                response1 = [];\n                response2 = [];\n                response3 = [];\n\n                for (i = 0; i < this.state.poolLength; i++) {\n                  response0[i] = this.loadUserInfo(i);\n                  response1[i] = this.loadLpTokenBalance(i);\n                  response2[i] = this.loadLpTokenAllowance(i);\n                  response3[i] = this.loadPendingReward(i);\n                }\n\n                i = 0;\n\n              case 23:\n                if (!(i < this.state.poolLength)) {\n                  _context4.next = 41;\n                  break;\n                }\n\n                _context4.next = 26;\n                return response0[i];\n\n              case 26:\n                userInfo = _context4.sent;\n                _context4.next = 29;\n                return response1[i];\n\n              case 29:\n                lpTokenBalance = _context4.sent;\n                _context4.next = 32;\n                return response2[i];\n\n              case 32:\n                lpTokenAllowance = _context4.sent;\n                _context4.next = 35;\n                return response3[i];\n\n              case 35:\n                pendingReward = _context4.sent;\n                totalpendingReward += parseInt(pendingReward);\n\n                if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\n                  userSegmentInfo[0][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether');\n                  lpTokenSegmentBalance[0][n] = lpTokenBalance;\n                  lpTokenSegmentAllowance[0][n] = lpTokenAllowance;\n                  pendingSegmentReward[0][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether');\n                  n += 1;\n                } else {\n                  userSegmentInfo[1][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether');\n                  lpTokenSegmentBalance[1][n] = lpTokenBalance;\n                  lpTokenSegmentAllowance[1][n] = lpTokenAllowance;\n                  pendingSegmentReward[1][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether');\n                  n += 1;\n                }\n\n              case 38:\n                i++;\n                _context4.next = 23;\n                break;\n\n              case 41:\n                this.setState({\n                  lpTokenSegmentBalance: lpTokenSegmentBalance\n                });\n                this.setState({\n                  pendingSegmentReward: pendingSegmentReward\n                });\n                this.setState({\n                  lpTokenSegmentAllowance: lpTokenSegmentAllowance\n                });\n                this.setState({\n                  userSegmentInfo: userSegmentInfo\n                });\n                this.setState({\n                  totalpendingReward: totalpendingReward.toLocaleString('fullwide', {\n                    useGrouping: false\n                  })\n                });\n                this.setState({\n                  farmLoading: true\n                });\n\n              case 47:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockchainUserData() {\n        return _loadBlockchainUserData.apply(this, arguments);\n      }\n\n      return loadBlockchainUserData;\n    }() // ***************************Farm Info***********************************************************************\n\n  }, {\n    key: \"loadRewardEndTime\",\n    value: function () {\n      var _loadRewardEndTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var rewardEndTime;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.state.purseTokenUpgradable.methods._getRewardEndTime().call();\n\n              case 2:\n                rewardEndTime = _context5.sent;\n                return _context5.abrupt(\"return\", rewardEndTime);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadRewardEndTime() {\n        return _loadRewardEndTime.apply(this, arguments);\n      }\n\n      return loadRewardEndTime;\n    }()\n  }, {\n    key: \"loadRewardStartTime\",\n    value: function () {\n      var _loadRewardStartTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var rewardStartTime;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.state.purseTokenUpgradable.methods._getRewardStartTime().call();\n\n              case 2:\n                rewardStartTime = _context6.sent;\n                return _context6.abrupt(\"return\", rewardStartTime);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadRewardStartTime() {\n        return _loadRewardStartTime.apply(this, arguments);\n      }\n\n      return loadRewardStartTime;\n    }()\n  }, {\n    key: \"loadDistributedAmount\",\n    value: function () {\n      var _loadDistributedAmount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var distributedAmount;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.state.purseTokenUpgradable.methods._monthlyDistributePr().call();\n\n              case 2:\n                distributedAmount = _context7.sent;\n                return _context7.abrupt(\"return\", distributedAmount);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function loadDistributedAmount() {\n        return _loadDistributedAmount.apply(this, arguments);\n      }\n\n      return loadDistributedAmount;\n    }()\n  }, {\n    key: \"loadDistributedPercentage\",\n    value: function () {\n      var _loadDistributedPercentage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var distributedPercentage;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.state.purseTokenUpgradable.methods._percentageDistribute().call();\n\n              case 2:\n                distributedPercentage = _context8.sent;\n                return _context8.abrupt(\"return\", distributedPercentage);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function loadDistributedPercentage() {\n        return _loadDistributedPercentage.apply(this, arguments);\n      }\n\n      return loadDistributedPercentage;\n    }()\n  }, {\n    key: \"loadPurseTotalSupply\",\n    value: function () {\n      var _loadPurseTotalSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var purseTokenTotalSupply;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.state.purseTokenUpgradable.methods._totalSupply().call();\n\n              case 2:\n                purseTokenTotalSupply = _context9.sent;\n                return _context9.abrupt(\"return\", purseTokenTotalSupply);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function loadPurseTotalSupply() {\n        return _loadPurseTotalSupply.apply(this, arguments);\n      }\n\n      return loadPurseTotalSupply;\n    }()\n  }, {\n    key: \"loadPoolCapRewardToken\",\n    value: function () {\n      var _loadPoolCapRewardToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var poolCapRewardToken;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.state.restakingFarm.methods.capMintToken().call();\n\n              case 2:\n                poolCapRewardToken = _context10.sent;\n                return _context10.abrupt(\"return\", poolCapRewardToken);\n\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function loadPoolCapRewardToken() {\n        return _loadPoolCapRewardToken.apply(this, arguments);\n      }\n\n      return loadPoolCapRewardToken;\n    }()\n  }, {\n    key: \"loadPoolMintedRewardToken\",\n    value: function () {\n      var _loadPoolMintedRewardToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var poolMintedRewardToken;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.state.restakingFarm.methods.totalMintToken().call();\n\n              case 2:\n                poolMintedRewardToken = _context11.sent;\n                return _context11.abrupt(\"return\", poolMintedRewardToken);\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function loadPoolMintedRewardToken() {\n        return _loadPoolMintedRewardToken.apply(this, arguments);\n      }\n\n      return loadPoolMintedRewardToken;\n    }()\n  }, {\n    key: \"loadPoolLength\",\n    value: function () {\n      var _loadPoolLength = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var poolLength;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.state.restakingFarm.methods.poolLength().call();\n\n              case 2:\n                poolLength = _context12.sent;\n                return _context12.abrupt(\"return\", poolLength);\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function loadPoolLength() {\n        return _loadPoolLength.apply(this, arguments);\n      }\n\n      return loadPoolLength;\n    }()\n  }, {\n    key: \"loadApiPrice\",\n    value: function () {\n      var _loadApiPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var coingeckoResponse;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd\");\n\n              case 2:\n                coingeckoResponse = _context13.sent;\n                return _context13.abrupt(\"return\", coingeckoResponse.json());\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function loadApiPrice() {\n        return _loadApiPrice.apply(this, arguments);\n      }\n\n      return loadApiPrice;\n    }()\n  }, {\n    key: \"loadBDL\",\n    value: function () {\n      var _loadBDL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var mongoResponse0;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/PundiX\");\n\n              case 2:\n                mongoResponse0 = _context14.sent;\n                return _context14.abrupt(\"return\", mongoResponse0.json());\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function loadBDL() {\n        return _loadBDL.apply(this, arguments);\n      }\n\n      return loadBDL;\n    }()\n  }, {\n    key: \"loadAccumulateTransfer\",\n    value: function () {\n      var _loadAccumulateTransfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var mongoResponse1;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeTransfer\");\n\n              case 2:\n                mongoResponse1 = _context15.sent;\n                return _context15.abrupt(\"return\", mongoResponse1.json());\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      function loadAccumulateTransfer() {\n        return _loadAccumulateTransfer.apply(this, arguments);\n      }\n\n      return loadAccumulateTransfer;\n    }()\n  }, {\n    key: \"loadAccumulateBurn\",\n    value: function () {\n      var _loadAccumulateBurn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var mongoResponse2;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeBurn\");\n\n              case 2:\n                mongoResponse2 = _context16.sent;\n                return _context16.abrupt(\"return\", mongoResponse2.json());\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      function loadAccumulateBurn() {\n        return _loadAccumulateBurn.apply(this, arguments);\n      }\n\n      return loadAccumulateBurn;\n    }()\n  }, {\n    key: \"loadStakedBalance\",\n    value: function () {\n      var _loadStakedBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        var stakedBalance;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.next = 2;\n                return this.state.pancakeContract.methods.balanceOf(\"0x439ec8159740a9B9a579F286963Ac1C050aF31C8\").call();\n\n              case 2:\n                stakedBalance = _context17.sent;\n                stakedBalance = window.web3Bsc.utils.fromWei(stakedBalance, 'Ether');\n                return _context17.abrupt(\"return\", stakedBalance);\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function loadStakedBalance() {\n        return _loadStakedBalance.apply(this, arguments);\n      }\n\n      return loadStakedBalance;\n    }()\n  }, {\n    key: \"loadPurseTokenTotalSupply\",\n    value: function () {\n      var _loadPurseTokenTotalSupply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18() {\n        var purseTokenTotalSupply;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                _context18.next = 2;\n                return this.state.purseTokenUpgradable.methods.totalSupply().call();\n\n              case 2:\n                purseTokenTotalSupply = _context18.sent;\n                return _context18.abrupt(\"return\", purseTokenTotalSupply);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function loadPurseTokenTotalSupply() {\n        return _loadPurseTokenTotalSupply.apply(this, arguments);\n      }\n\n      return loadPurseTokenTotalSupply;\n    }()\n  }, {\n    key: \"loadPoolRewardToken\",\n    value: function () {\n      var _loadPoolRewardToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n        var poolRewardToken;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.state.purseTokenUpgradable.methods.balanceOf(\"0x439ec8159740a9b9a579f286963ac1c050af31c8\").call();\n\n              case 2:\n                poolRewardToken = _context19.sent;\n                return _context19.abrupt(\"return\", poolRewardToken);\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function loadPoolRewardToken() {\n        return _loadPoolRewardToken.apply(this, arguments);\n      }\n\n      return loadPoolRewardToken;\n    }() // ***************************User Info***********************************************************************\n\n  }, {\n    key: \"loadPurseTokenBalance\",\n    value: function () {\n      var _loadPurseTokenBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        var purseTokenBalance;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call();\n\n              case 2:\n                purseTokenBalance = _context20.sent;\n                return _context20.abrupt(\"return\", purseTokenBalance);\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function loadPurseTokenBalance() {\n        return _loadPurseTokenBalance.apply(this, arguments);\n      }\n\n      return loadPurseTokenBalance;\n    }()\n  }, {\n    key: \"loadUserInfo\",\n    value: function () {\n      var _loadUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(i) {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return this.state.restakingFarm.methods.userInfo(this.state.lpTokenAddresses[i], this.state.account).call();\n\n              case 2:\n                userInfo = _context21.sent;\n                return _context21.abrupt(\"return\", userInfo);\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function loadUserInfo(_x) {\n        return _loadUserInfo.apply(this, arguments);\n      }\n\n      return loadUserInfo;\n    }()\n  }, {\n    key: \"loadLpTokenBalance\",\n    value: function () {\n      var _loadLpTokenBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(i) {\n        var lpTokenPair, lpTokenBalance;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i]);\n                _context22.next = 3;\n                return lpTokenPair.methods.balanceOf(this.state.account).call();\n\n              case 3:\n                lpTokenBalance = _context22.sent;\n                return _context22.abrupt(\"return\", lpTokenBalance);\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function loadLpTokenBalance(_x2) {\n        return _loadLpTokenBalance.apply(this, arguments);\n      }\n\n      return loadLpTokenBalance;\n    }()\n  }, {\n    key: \"loadLpTokenAllowance\",\n    value: function () {\n      var _loadLpTokenAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(i) {\n        var lpTokenPair, lpTokenAllowance;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i]);\n                _context23.next = 3;\n                return lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call();\n\n              case 3:\n                lpTokenAllowance = _context23.sent;\n                return _context23.abrupt(\"return\", lpTokenAllowance);\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function loadLpTokenAllowance(_x3) {\n        return _loadLpTokenAllowance.apply(this, arguments);\n      }\n\n      return loadLpTokenAllowance;\n    }()\n  }, {\n    key: \"loadPendingReward\",\n    value: function () {\n      var _loadPendingReward = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(i) {\n        var pendingReward;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return this.state.restakingFarm.methods.pendingReward(this.state.lpTokenAddresses[i], this.state.account).call();\n\n              case 2:\n                pendingReward = _context24.sent;\n                return _context24.abrupt(\"return\", pendingReward);\n\n              case 4:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function loadPendingReward(_x4) {\n        return _loadPendingReward.apply(this, arguments);\n      }\n\n      return loadPendingReward;\n    }() // *************************** Distribution Reward Info ***********************************************************************\n\n  }, {\n    key: \"loadLastRewardStartTime\",\n    value: function () {\n      var _loadLastRewardStartTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n        var lastRewardStartTime;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return this.state.purseTokenUpgradable.methods._lastRewardStartTime().call();\n\n              case 2:\n                lastRewardStartTime = _context25.sent;\n                return _context25.abrupt(\"return\", lastRewardStartTime);\n\n              case 4:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function loadLastRewardStartTime() {\n        return _loadLastRewardStartTime.apply(this, arguments);\n      }\n\n      return loadLastRewardStartTime;\n    }()\n  }, {\n    key: \"loadNumOfDays\",\n    value: function () {\n      var _loadNumOfDays = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n        var numOfDays;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return this.state.purseTokenUpgradable.methods._numOfDaysPerMth().call();\n\n              case 2:\n                numOfDays = _context26.sent;\n                return _context26.abrupt(\"return\", numOfDays);\n\n              case 4:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function loadNumOfDays() {\n        return _loadNumOfDays.apply(this, arguments);\n      }\n\n      return loadNumOfDays;\n    }()\n  }, {\n    key: \"loadPercentageDis\",\n    value: function () {\n      var _loadPercentageDis = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27() {\n        var percentageDis;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return this.state.purseTokenUpgradable.methods._percentageDistribute().call();\n\n              case 2:\n                percentageDis = _context27.sent;\n                return _context27.abrupt(\"return\", percentageDis);\n\n              case 4:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function loadPercentageDis() {\n        return _loadPercentageDis.apply(this, arguments);\n      }\n\n      return loadPercentageDis;\n    }()\n  }, {\n    key: \"loadAverageInterval\",\n    value: function () {\n      var _loadAverageInterval = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28() {\n        var averageInterval;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.next = 2;\n                return this.state.purseTokenUpgradable.methods._averageInterval().call();\n\n              case 2:\n                averageInterval = _context28.sent;\n                return _context28.abrupt(\"return\", averageInterval);\n\n              case 4:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function loadAverageInterval() {\n        return _loadAverageInterval.apply(this, arguments);\n      }\n\n      return loadAverageInterval;\n    }()\n  }, {\n    key: \"loadUserRewardInfo\",\n    value: function () {\n      var _loadUserRewardInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(address) {\n        var userRewardInfo;\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.next = 2;\n                return this.state.purseTokenUpgradable.methods.accAmount(address).call();\n\n              case 2:\n                userRewardInfo = _context29.sent;\n                return _context29.abrupt(\"return\", userRewardInfo);\n\n              case 4:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function loadUserRewardInfo(_x5) {\n        return _loadUserRewardInfo.apply(this, arguments);\n      }\n\n      return loadUserRewardInfo;\n    }()\n  }, {\n    key: \"loadUserBalance\",\n    value: function () {\n      var _loadUserBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(address) {\n        var userBalance;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                _context30.next = 2;\n                return this.state.purseTokenUpgradable.methods.balanceOf(address).call();\n\n              case 2:\n                userBalance = _context30.sent;\n                return _context30.abrupt(\"return\", userBalance);\n\n              case 4:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function loadUserBalance(_x6) {\n        return _loadUserBalance.apply(this, arguments);\n      }\n\n      return loadUserBalance;\n    }() // ***********************************Purse Staking***************************************************************\n\n  }, {\n    key: \"loadPurseStakingUserReceipt\",\n    value: function () {\n      var _loadPurseStakingUserReceipt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31() {\n        var purseStakingUserInfo, purseStakingUserReceipt;\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                _context31.next = 2;\n                return this.state.purseStaking.methods.userInfo(this.state.account).call();\n\n              case 2:\n                purseStakingUserInfo = _context31.sent;\n                purseStakingUserReceipt = purseStakingUserInfo.receiptToken;\n                return _context31.abrupt(\"return\", purseStakingUserReceipt);\n\n              case 5:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function loadPurseStakingUserReceipt() {\n        return _loadPurseStakingUserReceipt.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserReceipt;\n    }()\n  }, {\n    key: \"loadPurseStakingUserReward\",\n    value: function () {\n      var _loadPurseStakingUserReward = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32() {\n        var purseStakingUserPurse;\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                _context32.next = 2;\n                return this.state.purseStaking.methods.getTotalPurse(this.state.account).call();\n\n              case 2:\n                purseStakingUserPurse = _context32.sent;\n                return _context32.abrupt(\"return\", purseStakingUserPurse);\n\n              case 4:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function loadPurseStakingUserReward() {\n        return _loadPurseStakingUserReward.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserReward;\n    }()\n  }, {\n    key: \"loadPurseStakingUserAllowance\",\n    value: function () {\n      var _loadPurseStakingUserAllowance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {\n        var purseStakingUserAllowance;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                _context33.next = 2;\n                return this.state.purseToken.methods.allowance(this.state.account, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\").call();\n\n              case 2:\n                purseStakingUserAllowance = _context33.sent;\n                return _context33.abrupt(\"return\", purseStakingUserAllowance);\n\n              case 4:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function loadPurseStakingUserAllowance() {\n        return _loadPurseStakingUserAllowance.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserAllowance;\n    }()\n  }, {\n    key: \"loadPurseStakingUserPurse\",\n    value: function () {\n      var _loadPurseStakingUserPurse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n        var purseStakingUserPurse;\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                _context34.next = 2;\n                return this.state.purseToken.methods.balanceOf(this.state.account).call();\n\n              case 2:\n                purseStakingUserPurse = _context34.sent;\n                return _context34.abrupt(\"return\", purseStakingUserPurse);\n\n              case 4:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function loadPurseStakingUserPurse() {\n        return _loadPurseStakingUserPurse.apply(this, arguments);\n      }\n\n      return loadPurseStakingUserPurse;\n    }()\n  }, {\n    key: \"loadPurseStakingTotalReceipt\",\n    value: function () {\n      var _loadPurseStakingTotalReceipt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35() {\n        var purseStakingTotalReceipt;\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                _context35.next = 2;\n                return this.state.purseStaking.methods.totalReceiptSupply().call();\n\n              case 2:\n                purseStakingTotalReceipt = _context35.sent;\n                return _context35.abrupt(\"return\", purseStakingTotalReceipt);\n\n              case 4:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function loadPurseStakingTotalReceipt() {\n        return _loadPurseStakingTotalReceipt.apply(this, arguments);\n      }\n\n      return loadPurseStakingTotalReceipt;\n    }()\n  }, {\n    key: \"loadPurseStakingTotalPurse\",\n    value: function () {\n      var _loadPurseStakingTotalPurse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36() {\n        var purseStakingTotalReceipt;\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                _context36.next = 2;\n                return this.state.purseToken.methods.balanceOf(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\").call();\n\n              case 2:\n                purseStakingTotalReceipt = _context36.sent;\n                return _context36.abrupt(\"return\", purseStakingTotalReceipt);\n\n              case 4:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function loadPurseStakingTotalPurse() {\n        return _loadPurseStakingTotalPurse.apply(this, arguments);\n      }\n\n      return loadPurseStakingTotalPurse;\n    }() // ***************************TVL & APR***********************************************************************\n\n  }, {\n    key: \"loadTVLAPR\",\n    value: function () {\n      var _loadTVLAPR = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37() {\n        var tvl, apr, apyDaily, apyWeekly, apyMonthly, n, response, myJson, tvlArray, aprArray, apyArray, i;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                // Load bavaMasterFarmer\n                tvl = [[], []];\n                apr = [[], []];\n                apyDaily = [[], []];\n                apyWeekly = [[], []];\n                apyMonthly = [[], []];\n                n = 0;\n                _context37.next = 8;\n                return fetch(\"https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/TVLAPR\");\n\n              case 8:\n                response = _context37.sent;\n                _context37.next = 11;\n                return response.json();\n\n              case 11:\n                myJson = _context37.sent;\n                tvlArray = myJson[\"TVL\"];\n                aprArray = myJson[\"APR\"];\n                apyArray = myJson[\"APYDaily\"];\n\n                for (i = 0; i < this.state.poolLength; i++) {\n                  if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\n                    tvl[0][n] = tvlArray;\n                    apr[0][n] = aprArray;\n                    apyDaily[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 36500, 365) - 1) * 100;\n                    apyWeekly[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 5200, 52) - 1) * 100;\n                    apyMonthly[0][n] = (Math.pow(1 + 0.8 * apr[0][n] / 1200, 12) - 1) * 100;\n                    n += 1;\n                  } else {\n                    tvl[1][n] = tvlArray;\n                    apr[1][n] = aprArray;\n                    apyDaily[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 36500, 365) - 1) * 100;\n                    apyWeekly[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 5200, 52) - 1) * 100;\n                    apyMonthly[1][n] = (Math.pow(1 + 0.8 * apr[1][n] / 1200, 12) - 1) * 100;\n                    n += 1;\n                  }\n                }\n\n                this.setState({\n                  tvl: tvl\n                });\n                this.setState({\n                  apr: apr\n                });\n                this.setState({\n                  apyDaily: apyDaily\n                });\n                this.setState({\n                  apyWeekly: apyWeekly\n                });\n                this.setState({\n                  apyMonthly: apyMonthly\n                });\n                this.setState({\n                  aprloading: true\n                });\n\n              case 22:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function loadTVLAPR() {\n        return _loadTVLAPR.apply(this, arguments);\n      }\n\n      return loadTVLAPR;\n    }() // ***********************************************************************************************************\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                if (window.ethereum) {\n                  window.web3 = new Web3(window.ethereum); // await window.ethereum.enable()\n\n                  this.setState({\n                    metamask: true\n                  });\n                } else if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                  this.setState({\n                    metamask: true\n                  });\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                  this.setState({\n                    metamask: false\n                  });\n                  this.setState({\n                    wallet: false\n                  });\n                } // window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s2.binance.org:8545/`);  // testnet\n\n\n                window.web3Bsc = new Web3(\"https://bsc-dataseed.binance.org/\");\n\n              case 2:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.connectWallet = function () {\n      if (_this.state.metamask == true) {\n        window.ethereum.request({\n          method: 'eth_requestAccounts'\n        }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39() {\n          var chainId;\n          return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n            while (1) {\n              switch (_context39.prev = _context39.next) {\n                case 0:\n                  _context39.next = 2;\n                  return _this.switchNetwork();\n\n                case 2:\n                  _context39.next = 4;\n                  return window.ethereum.request({\n                    method: 'eth_chainId'\n                  });\n\n                case 4:\n                  chainId = _context39.sent;\n\n                  if (chainId == \"0x38\") {\n                    // mainnet: 0x38, testnet: 0x61\n                    _this.setWalletTrigger(true);\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context39.stop();\n              }\n            }\n          }, _callee39);\n        }))).catch(function (err) {\n          if (err.code === 4001) {// EIP-1193 userRejectedRequest error\n            // If this happens, the user rejected the connection request.\n          } else {\n            console.error(\"error\");\n            console.error(err);\n          }\n        });\n      } else {\n        alert(\"No Metamask provider was found\");\n      }\n    };\n\n    _this.WalletConnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42() {\n      var provider, networkId, accounts, first4Account, last4Account;\n      return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n        while (1) {\n          switch (_context42.prev = _context42.next) {\n            case 0:\n              provider = new WalletConnectProvider({\n                rpc: {\n                  // 97: `https://data-seed-prebsc-1-s3.binance.org:8545/`\n                  56: \"https://bsc-dataseed.binance.org/\"\n                },\n                // chainId: 97,\n                chainId: 56\n              });\n              window.provider = provider;\n              _context42.next = 4;\n              return window.provider.enable();\n\n            case 4:\n              _context42.next = 6;\n              return new Web3(window.provider);\n\n            case 6:\n              window.web3Con = _context42.sent;\n              _context42.next = 9;\n              return window.web3Con.eth.net.getId();\n\n            case 9:\n              networkId = _context42.sent;\n\n              if (!(networkId != 56)) {\n                _context42.next = 15;\n                break;\n              }\n\n              alert(\"You're connected to an unsupported network.\");\n\n              _this.WalletDisconnect();\n\n              _context42.next = 26;\n              break;\n\n            case 15:\n              _context42.next = 17;\n              return window.web3Con.eth.getAccounts();\n\n            case 17:\n              accounts = _context42.sent;\n\n              _this.setState({\n                account: accounts[0]\n              });\n\n              first4Account = _this.state.account.substring(0, 4);\n              last4Account = _this.state.account.slice(-4);\n\n              _this.setState({\n                first4Account: first4Account\n              });\n\n              _this.setState({\n                last4Account: last4Account\n              });\n\n              _this.setState({\n                walletConnect: true\n              });\n\n              _this.setState({\n                networkName: \"BSC\"\n              });\n\n              _this.componentWillMount();\n\n            case 26:\n              // Subscribe to accounts change\n              window.provider.on(\"accountsChanged\", _this.handleAccountsChanged); // Subscribe to session disconnection\n\n              window.provider.on(\"disconnect\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40() {\n                return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n                  while (1) {\n                    switch (_context40.prev = _context40.next) {\n                      case 0:\n                        _context40.next = 2;\n                        return _this.WalletDisconnect();\n\n                      case 2:\n                      case \"end\":\n                        return _context40.stop();\n                    }\n                  }\n                }, _callee40);\n              })));\n              window.provider.on(\"chainChanged\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41() {\n                return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n                  while (1) {\n                    switch (_context41.prev = _context41.next) {\n                      case 0:\n                        _context41.next = 2;\n                        return _this.WalletDisconnect();\n\n                      case 2:\n                        alert(\"You're connected to an unsupported network.\");\n\n                      case 3:\n                      case \"end\":\n                        return _context41.stop();\n                    }\n                  }\n                }, _callee41);\n              })));\n\n            case 29:\n            case \"end\":\n              return _context42.stop();\n          }\n        }\n      }, _callee42);\n    }));\n    _this.WalletDisconnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43() {\n      return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n        while (1) {\n          switch (_context43.prev = _context43.next) {\n            case 0:\n              if (!(window.provider.connected == true)) {\n                _context43.next = 3;\n                break;\n              }\n\n              _context43.next = 3;\n              return window.provider.disconnect();\n\n            case 3:\n              _context43.next = 5;\n              return _this.setState({\n                walletConnect: false\n              });\n\n            case 5:\n              _this.componentWillMount();\n\n            case 6:\n            case \"end\":\n              return _context43.stop();\n          }\n        }\n      }, _callee43);\n    }));\n    _this.switchNetwork = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44() {\n      var chainId;\n      return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n        while (1) {\n          switch (_context44.prev = _context44.next) {\n            case 0:\n              _context44.prev = 0;\n              _context44.next = 3;\n              return window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{\n                  chainId: '0x38'\n                }] // mainnet 0x38, testnet: 0x61\n\n              });\n\n            case 3:\n              _context44.next = 20;\n              break;\n\n            case 5:\n              _context44.prev = 5;\n              _context44.t0 = _context44[\"catch\"](0);\n\n              if (!(_context44.t0.code === 4902)) {\n                _context44.next = 20;\n                break;\n              }\n\n              _context44.prev = 8;\n              _context44.next = 11;\n              return window.ethereum.request({\n                method: 'wallet_addEthereumChain',\n                params: [{\n                  chainId: '0x38',\n                  rpcUrls: ['https://bsc-dataseed1.binance.org/'],\n                  chainName: 'BSC Mainnet',\n                  nativeCurrency: {\n                    name: 'BNB',\n                    symbol: 'BNB',\n                    // 2-6 characters long\n                    decimals: 18\n                  },\n                  blockExplorerUrls: ['https://bscscan.com/']\n                }]\n              });\n\n            case 11:\n              _context44.next = 13;\n              return window.ethereum.request({\n                method: 'eth_chainId'\n              });\n\n            case 13:\n              chainId = _context44.sent;\n\n              _this.setState({\n                chainId: chainId\n              });\n\n              if (_this.state.chainId == \"0x61\") {\n                _this.setState({\n                  networkName: \"BSC Testnet\"\n                });\n              } else if (_this.state.chainId == \"0x38\") {\n                _this.setState({\n                  networkName: \"BSC\"\n                });\n              } else if (_this.state.chainId == \"0x1\") {\n                _this.setState({\n                  networkName: \"Ethereum\"\n                });\n              } else if (_this.state.chainId == \"0x3\") {\n                _this.setState({\n                  networkName: \"Ropsten\"\n                });\n              } else if (_this.state.chainId == \"0x4\") {\n                _this.setState({\n                  networkName: \"Rinkeby\"\n                });\n              } else if (_this.state.chainId == \"0x2a\") {\n                _this.setState({\n                  networkName: \"Kovan\"\n                });\n              } else if (_this.state.chainId == \"0x89\") {\n                _this.setState({\n                  networkName: \"Polygon\"\n                });\n              } else if (_this.state.chainId == \"0x13881\") {\n                _this.setState({\n                  networkName: \"Mumbai\"\n                });\n              } else if (_this.state.chainId == \"0xa869\") {\n                _this.setState({\n                  networkName: \"Fuji\"\n                });\n              } else if (_this.state.chainId == \"0xa86a\") {\n                _this.setState({\n                  networkName: \"Avalanche\"\n                });\n              }\n\n              _context44.next = 20;\n              break;\n\n            case 18:\n              _context44.prev = 18;\n              _context44.t1 = _context44[\"catch\"](8);\n\n            case 20:\n            case \"end\":\n              return _context44.stop();\n          }\n        }\n      }, _callee44, null, [[0, 5], [8, 18]]);\n    }));\n\n    _this.handleAccountsChanged = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45(accounts) {\n        var first4Account, last4Account, _accounts, _first4Account, _last4Account;\n\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                if (!(_this.state.wallet == true)) {\n                  _context45.next = 4;\n                  break;\n                }\n\n                if (accounts.length === 0) {\n                  // MetaMask is locked or the user has not connected any accounts\n                  _this.setWalletTrigger(false);\n                } else if (accounts[0] !== _this.state.account) {\n                  _this.state.account = accounts[0];\n                  first4Account = _this.state.account.substring(0, 4);\n                  last4Account = _this.state.account.slice(-4);\n\n                  _this.setState({\n                    first4Account: first4Account\n                  });\n\n                  _this.setState({\n                    last4Account: last4Account\n                  });\n\n                  _this.componentWillMount(); // Do any other work!\n\n                }\n\n                _context45.next = 15;\n                break;\n\n              case 4:\n                if (!(_this.state.walletConnect == true)) {\n                  _context45.next = 15;\n                  break;\n                }\n\n                _context45.next = 7;\n                return window.web3Con.eth.getAccounts();\n\n              case 7:\n                _accounts = _context45.sent;\n\n                _this.setState({\n                  account: _accounts[0]\n                });\n\n                _first4Account = _this.state.account.substring(0, 4);\n                _last4Account = _this.state.account.slice(-4);\n\n                _this.setState({\n                  first4Account: _first4Account\n                });\n\n                _this.setState({\n                  last4Account: _last4Account\n                });\n\n                _this.setState({\n                  walletConnect: true\n                });\n\n                _this.componentWillMount();\n\n              case 15:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChainChanged = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46() {\n      var chainId;\n      return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n        while (1) {\n          switch (_context46.prev = _context46.next) {\n            case 0:\n              if (!(_this.state.wallet == true)) {\n                _context46.next = 8;\n                break;\n              }\n\n              _context46.next = 3;\n              return window.ethereum.request({\n                method: 'eth_chainId'\n              });\n\n            case 3:\n              chainId = _context46.sent;\n\n              _this.setState({\n                chainId: chainId\n              });\n\n              if (chainId != \"0x38\") {\n                _this.setWalletTrigger(false);\n              }\n\n              if (_this.state.chainId == \"0x61\") {\n                _this.setState({\n                  networkName: \"BSC Testnet\"\n                });\n              } else if (_this.state.chainId == \"0x38\") {\n                _this.setState({\n                  networkName: \"BSC\"\n                });\n              } else if (_this.state.chainId == \"0x1\") {\n                _this.setState({\n                  networkName: \"Ethereum\"\n                });\n              } else if (_this.state.chainId == \"0x3\") {\n                _this.setState({\n                  networkName: \"Ropsten\"\n                });\n              } else if (_this.state.chainId == \"0x4\") {\n                _this.setState({\n                  networkName: \"Rinkeby\"\n                });\n              } else if (_this.state.chainId == \"0x2a\") {\n                _this.setState({\n                  networkName: \"Kovan\"\n                });\n              } else if (_this.state.chainId == \"0x89\") {\n                _this.setState({\n                  networkName: \"Polygon\"\n                });\n              } else if (_this.state.chainId == \"0x13881\") {\n                _this.setState({\n                  networkName: \"Mumbai\"\n                });\n              } else if (_this.state.chainId == \"0xa869\") {\n                _this.setState({\n                  networkName: \"Fuji\"\n                });\n              } else if (_this.state.chainId == \"0xa86a\") {\n                _this.setState({\n                  networkName: \"Avalanche\"\n                });\n              }\n\n              _this.switchNetwork(); // Run any other necessary logic...\n\n\n            case 8:\n            case \"end\":\n              return _context46.stop();\n          }\n        }\n      }, _callee46);\n    }));\n\n    _this.timeConverter = function (UNIX_timestamp) {\n      var a = new Date(UNIX_timestamp * 1000);\n      var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      var year = a.getFullYear();\n      var month = months[a.getMonth()];\n      var date = a.getDate();\n      var hour = a.getHours().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var min = a.getMinutes().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var sec = a.getSeconds().toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n      return time;\n    };\n\n    _this.delay = function (ms) {\n      return new Promise(function (res) {\n        return setTimeout(res, ms);\n      });\n    };\n\n    _this.deposit = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49(i, amount, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData, _restakingFarm;\n\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context49.next = 7;\n                  break;\n                }\n\n                restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                _context49.next = 5;\n                return restakingFarm.methods.deposit(_this.state.lpTokenAddresses[i], amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(result) {\n                    return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n                      while (1) {\n                        switch (_context47.prev = _context47.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context47.stop();\n                        }\n                      }\n                    }, _callee47);\n                  }));\n\n                  return function (_x11) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 5:\n                _context49.next = 12;\n                break;\n\n              case 7:\n                if (!(_this.state.wallet == true)) {\n                  _context49.next = 12;\n                  break;\n                }\n\n                _restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                _restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData.address);\n                _context49.next = 12;\n                return _restakingFarm.methods.deposit(_this.state.lpTokenAddresses[i], amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(result) {\n                    return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n                      while (1) {\n                        switch (_context48.prev = _context48.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context48.stop();\n                        }\n                      }\n                    }, _callee48);\n                  }));\n\n                  return function (_x12) {\n                    return _ref11.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 12:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49);\n      }));\n\n      return function (_x8, _x9, _x10) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.approve = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52(i, n) {\n        var lpToken, _lpToken;\n\n        return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context52.next = 6;\n                  break;\n                }\n\n                lpToken = new window.web3Con.eth.Contract(LpToken.abi, _this.state.lpTokenAddresses[i]);\n                _context52.next = 4;\n                return lpToken.methods.approve(_this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(result) {\n                    return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n                      while (1) {\n                        switch (_context50.prev = _context50.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context50.stop();\n                        }\n                      }\n                    }, _callee50);\n                  }));\n\n                  return function (_x15) {\n                    return _ref13.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                _context52.next = 10;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context52.next = 10;\n                  break;\n                }\n\n                _lpToken = new window.web3.eth.Contract(LpToken.abi, _this.state.lpTokenAddresses[i]);\n                _context52.next = 10;\n                return _lpToken.methods.approve(_this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51(result) {\n                    return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n                      while (1) {\n                        switch (_context51.prev = _context51.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context51.stop();\n                        }\n                      }\n                    }, _callee51);\n                  }));\n\n                  return function (_x16) {\n                    return _ref14.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52);\n      }));\n\n      return function (_x13, _x14) {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    _this.withdraw = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55(i, amount, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData2, _restakingFarm2;\n\n        return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                if (_this.state.walletConnect == true) {\n                  restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                  restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                  restakingFarm.methods.withdraw(_this.state.lpTokenAddresses[i], amount).send({\n                    from: _this.state.account\n                  }).then( /*#__PURE__*/function () {\n                    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53(result) {\n                      return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n                        while (1) {\n                          switch (_context53.prev = _context53.next) {\n                            case 0:\n                              _this.componentWillMount();\n\n                            case 1:\n                            case \"end\":\n                              return _context53.stop();\n                          }\n                        }\n                      }, _callee53);\n                    }));\n\n                    return function (_x20) {\n                      return _ref16.apply(this, arguments);\n                    };\n                  }()).catch(function (err) {\n                    if (err.code === 4001) {\n                      // EIP-1193 userRejectedRequest error\n                      // If this happens, the user rejected the connection request.\n                      alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                    } else {\n                      console.error(err);\n                    }\n                  });\n                } else if (_this.state.wallet == true) {\n                  _restakingFarmData2 = RestakingFarm.networks[_this.state.networkId];\n                  _restakingFarm2 = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData2.address);\n\n                  _restakingFarm2.methods.withdraw(_this.state.lpTokenAddresses[i], amount).send({\n                    from: _this.state.account\n                  }).then( /*#__PURE__*/function () {\n                    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54(result) {\n                      return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n                        while (1) {\n                          switch (_context54.prev = _context54.next) {\n                            case 0:\n                              _this.componentWillMount();\n\n                            case 1:\n                            case \"end\":\n                              return _context54.stop();\n                          }\n                        }\n                      }, _callee54);\n                    }));\n\n                    return function (_x21) {\n                      return _ref17.apply(this, arguments);\n                    };\n                  }()).catch(function (err) {\n                    if (err.code === 4001) {\n                      // EIP-1193 userRejectedRequest error\n                      // If this happens, the user rejected the connection request.\n                      alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                    } else {\n                      console.error(err);\n                    }\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55);\n      }));\n\n      return function (_x17, _x18, _x19) {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    _this.harvest = /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee58(i, n) {\n        var restakingFarmData, restakingFarm, _restakingFarmData3, _restakingFarm3;\n\n        return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                if (_this.state.walletConnect == true) {\n                  if (_this.state.pendingSegmentReward[n][i] <= 0) {\n                    alert(\"No token to harvest! Please deposit LP to earn PURSE\");\n                  } else {\n                    restakingFarmData = RestakingFarm.networks[_this.state.networkId];\n                    restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address);\n                    restakingFarm.methods.claimReward(_this.state.lpTokenAddresses[i]).send({\n                      from: _this.state.account\n                    }).then( /*#__PURE__*/function () {\n                      var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56(result) {\n                        return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n                          while (1) {\n                            switch (_context56.prev = _context56.next) {\n                              case 0:\n                                _this.componentWillMount();\n\n                              case 1:\n                              case \"end\":\n                                return _context56.stop();\n                            }\n                          }\n                        }, _callee56);\n                      }));\n\n                      return function (_x24) {\n                        return _ref19.apply(this, arguments);\n                      };\n                    }()).catch(function (err) {\n                      if (err.code === 4001) {\n                        // EIP-1193 userRejectedRequest error\n                        // If this happens, the user rejected the connection request.\n                        alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                      } else {\n                        console.error(err);\n                      }\n                    });\n                  }\n                } else if (_this.state.wallet == true) {\n                  if (_this.state.pendingSegmentReward[n][i] <= 0) {\n                    alert(\"No token to harvest! Please deposit LP to earn PURSE\");\n                  } else {\n                    _restakingFarmData3 = RestakingFarm.networks[_this.state.networkId];\n                    _restakingFarm3 = new window.web3.eth.Contract(RestakingFarm.abi, _restakingFarmData3.address);\n\n                    _restakingFarm3.methods.claimReward(_this.state.lpTokenAddresses[i]).send({\n                      from: _this.state.account\n                    }).then( /*#__PURE__*/function () {\n                      var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57(result) {\n                        return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n                          while (1) {\n                            switch (_context57.prev = _context57.next) {\n                              case 0:\n                                _this.componentWillMount();\n\n                              case 1:\n                              case \"end\":\n                                return _context57.stop();\n                            }\n                          }\n                        }, _callee57);\n                      }));\n\n                      return function (_x25) {\n                        return _ref20.apply(this, arguments);\n                      };\n                    }()).catch(function (err) {\n                      if (err.code === 4001) {\n                        // EIP-1193 userRejectedRequest error\n                        // If this happens, the user rejected the connection request.\n                        alert(\"Something went wrong...Code: 4001 User rejected the request.\");\n                      } else {\n                        console.error(err);\n                      }\n                    });\n                  }\n                } else {\n                  alert(\"Wallet is not connected\");\n                }\n\n              case 1:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58);\n      }));\n\n      return function (_x22, _x23) {\n        return _ref18.apply(this, arguments);\n      };\n    }();\n\n    _this.checkClaimAmount = /*#__PURE__*/function () {\n      var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee59(address) {\n        var response0, response1, response2, response3, response4, response5, response6, lastRewardStartTime, numOfDays, percentageDis, averageInterval, userRewardInfo, userBalance, purseTokenTotalSupply, reward, interval, accumulateAmount, _interval, _accumulateAmount, lastmonthAccAmount;\n\n        return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                response0 = _this.loadLastRewardStartTime();\n                response1 = _this.loadNumOfDays();\n                response2 = _this.loadPercentageDis();\n                response3 = _this.loadAverageInterval();\n                response4 = _this.loadUserRewardInfo(address);\n                response5 = _this.loadUserBalance(address);\n                response6 = _this.loadPurseTotalSupply();\n                _context59.next = 9;\n                return response0;\n\n              case 9:\n                lastRewardStartTime = _context59.sent;\n                _context59.next = 12;\n                return response1;\n\n              case 12:\n                numOfDays = _context59.sent;\n                _context59.next = 15;\n                return response2;\n\n              case 15:\n                percentageDis = _context59.sent;\n                _context59.next = 18;\n                return response3;\n\n              case 18:\n                averageInterval = _context59.sent;\n                _context59.next = 21;\n                return response4;\n\n              case 21:\n                userRewardInfo = _context59.sent;\n                _context59.next = 24;\n                return response5;\n\n              case 24:\n                userBalance = _context59.sent;\n                _context59.next = 27;\n                return response6;\n\n              case 27:\n                purseTokenTotalSupply = _context59.sent;\n                reward = 0;\n\n                if (userRewardInfo.lastUpdateTime == 0) {\n                  reward = 0;\n                } else if (userRewardInfo.lastUpdateTime >= _this.state.rewardStartTime) {\n                  reward = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.accReward, 'Ether'));\n                } else if (userRewardInfo.lastUpdateTime < lastRewardStartTime) {\n                  // 1st distribution wont happen, all users lastUpdateTime either 0 or > lastRewardStartTime\n                  interval = parseInt((_this.state.rewardStartTime - lastRewardStartTime) / averageInterval);\n                  accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval);\n                  reward = accumulateAmount * _this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\n                } else {\n                  _interval = parseInt((_this.state.rewardStartTime - userRewardInfo.lastUpdateTime) / averageInterval);\n                  _accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * _interval);\n                  lastmonthAccAmount = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.amount, 'Ether')) + _accumulateAmount;\n                  reward = lastmonthAccAmount * _this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\n                }\n\n                return _context59.abrupt(\"return\", reward);\n\n              case 31:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59);\n      }));\n\n      return function (_x26) {\n        return _ref21.apply(this, arguments);\n      };\n    }();\n\n    _this.claimDistributePurse = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee60() {\n      var purseTokenUpgradable, _purseTokenUpgradable;\n\n      return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n        while (1) {\n          switch (_context60.prev = _context60.next) {\n            case 0:\n              if (!((Date.now() / 1000).toFixed(0) < _this.state.rewardStartTime)) {\n                _context60.next = 4;\n                break;\n              }\n\n              alert(\"Distribution not started yet\");\n              _context60.next = 22;\n              break;\n\n            case 4:\n              if (!((Date.now() / 1000).toFixed(0) > _this.state.rewardEndTime)) {\n                _context60.next = 8;\n                break;\n              }\n\n              alert(\"Distribution already end\");\n              _context60.next = 22;\n              break;\n\n            case 8:\n              if (!(_this.state.claimAmount == 0)) {\n                _context60.next = 12;\n                break;\n              }\n\n              alert(\"No reward available\");\n              _context60.next = 22;\n              break;\n\n            case 12:\n              if (!(_this.state.walletConnect == true)) {\n                _context60.next = 18;\n                break;\n              }\n\n              purseTokenUpgradable = new window.web3Con.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\");\n              _context60.next = 16;\n              return purseTokenUpgradable.methods.claimDistributionPurse().send({\n                from: _this.state.account\n              });\n\n            case 16:\n              _context60.next = 22;\n              break;\n\n            case 18:\n              if (!(_this.state.wallet == true)) {\n                _context60.next = 22;\n                break;\n              }\n\n              _purseTokenUpgradable = new window.web3.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\");\n              _context60.next = 22;\n              return _purseTokenUpgradable.methods.claimDistributionPurse().send({\n                from: _this.state.account\n              });\n\n            case 22:\n            case \"end\":\n              return _context60.stop();\n          }\n        }\n      }, _callee60);\n    }));\n\n    _this.setI = function (type, pair) {\n      _this.setState({\n        n: type\n      });\n\n      _this.setState({\n        i: pair\n      });\n    };\n\n    _this.setTrigger = function (state) {\n      _this.setState({\n        buttonPopup: state\n      });\n    };\n\n    _this.setWalletTrigger = /*#__PURE__*/function () {\n      var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee61(state) {\n        var accounts, first4Account, last4Account;\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                if (!(state == false)) {\n                  _context61.next = 6;\n                  break;\n                }\n\n                _context61.next = 3;\n                return _this.setState({\n                  wallet: state\n                });\n\n              case 3:\n                _this.componentWillMount();\n\n                _context61.next = 16;\n                break;\n\n              case 6:\n                _context61.next = 8;\n                return window.web3.eth.getAccounts();\n\n              case 8:\n                accounts = _context61.sent;\n\n                _this.setState({\n                  account: accounts[0]\n                });\n\n                first4Account = _this.state.account.substring(0, 4);\n                last4Account = _this.state.account.slice(-4);\n\n                _this.setState({\n                  first4Account: first4Account\n                });\n\n                _this.setState({\n                  last4Account: last4Account\n                });\n\n                _this.setState({\n                  wallet: state\n                });\n\n                _this.componentWillMount();\n\n              case 16:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61);\n      }));\n\n      return function (_x27) {\n        return _ref23.apply(this, arguments);\n      };\n    }();\n\n    _this.stake = /*#__PURE__*/function () {\n      var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee64(amount) {\n        var purseStaking, _purseStaking;\n\n        return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n          while (1) {\n            switch (_context64.prev = _context64.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context64.next = 6;\n                  break;\n                }\n\n                purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\");\n                _context64.next = 4;\n                return purseStaking.methods.enter(amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee62(result) {\n                    return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n                      while (1) {\n                        switch (_context62.prev = _context62.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context62.stop();\n                        }\n                      }\n                    }, _callee62);\n                  }));\n\n                  return function (_x29) {\n                    return _ref25.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 4:\n                _context64.next = 11;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context64.next = 11;\n                  break;\n                }\n\n                _this.setState({\n                  loading: false\n                });\n\n                _purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\");\n                _context64.next = 11;\n                return _purseStaking.methods.enter(amount).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee63(result) {\n                    return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n                      while (1) {\n                        switch (_context63.prev = _context63.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context63.stop();\n                        }\n                      }\n                    }, _callee63);\n                  }));\n\n                  return function (_x30) {\n                    return _ref26.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 11:\n              case \"end\":\n                return _context64.stop();\n            }\n          }\n        }, _callee64);\n      }));\n\n      return function (_x28) {\n        return _ref24.apply(this, arguments);\n      };\n    }();\n\n    _this.unstake = /*#__PURE__*/function () {\n      var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee67(receipt) {\n        var purseStaking, _purseStaking2;\n\n        return _regeneratorRuntime.wrap(function _callee67$(_context67) {\n          while (1) {\n            switch (_context67.prev = _context67.next) {\n              case 0:\n                if (!(_this.state.walletConnect == true)) {\n                  _context67.next = 6;\n                  break;\n                }\n\n                purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\");\n                _context67.next = 4;\n                return purseStaking.methods.leave(receipt).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee65(result) {\n                    return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n                      while (1) {\n                        switch (_context65.prev = _context65.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context65.stop();\n                        }\n                      }\n                    }, _callee65);\n                  }));\n\n                  return function (_x32) {\n                    return _ref28.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 4:\n                _context67.next = 10;\n                break;\n\n              case 6:\n                if (!(_this.state.wallet == true)) {\n                  _context67.next = 10;\n                  break;\n                }\n\n                _purseStaking2 = new window.web3.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\");\n                _context67.next = 10;\n                return _purseStaking2.methods.leave(receipt).send({\n                  from: _this.state.account\n                }).then( /*#__PURE__*/function () {\n                  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee66(result) {\n                    return _regeneratorRuntime.wrap(function _callee66$(_context66) {\n                      while (1) {\n                        switch (_context66.prev = _context66.next) {\n                          case 0:\n                            _this.componentWillMount();\n\n                          case 1:\n                          case \"end\":\n                            return _context66.stop();\n                        }\n                      }\n                    }, _callee66);\n                  }));\n\n                  return function (_x33) {\n                    return _ref29.apply(this, arguments);\n                  };\n                }()).catch(function (err) {\n                  if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    alert(\"Something went wrong. Code: 4001 User rejected the request.\");\n                  } else {\n                    console.error(err);\n                  }\n                });\n\n              case 10:\n              case \"end\":\n                return _context67.stop();\n            }\n          }\n        }, _callee67);\n      }));\n\n      return function (_x31) {\n        return _ref27.apply(this, arguments);\n      };\n    }();\n\n    _this.checkPurseAmount = /*#__PURE__*/function () {\n      var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee68(receipt) {\n        var response0, response1, purseStakingTotalPurse, purseStakingTotalReceipt, purseWei, purse;\n        return _regeneratorRuntime.wrap(function _callee68$(_context68) {\n          while (1) {\n            switch (_context68.prev = _context68.next) {\n              case 0:\n                response0 = _this.loadPurseStakingTotalPurse();\n                response1 = _this.loadPurseStakingTotalReceipt();\n                _context68.next = 4;\n                return response0;\n\n              case 4:\n                purseStakingTotalPurse = _context68.sent;\n                _context68.next = 7;\n                return response1;\n\n              case 7:\n                purseStakingTotalReceipt = _context68.sent;\n                purseWei = (receipt * purseStakingTotalPurse / purseStakingTotalReceipt).toString();\n                purse = parseFloat(window.web3Bsc.utils.fromWei(purseWei, 'Ether')).toLocaleString('en-US', {\n                  maximumFractionDigits: 10\n                });\n                return _context68.abrupt(\"return\", purse);\n\n              case 11:\n              case \"end\":\n                return _context68.stop();\n            }\n          }\n        }, _callee68);\n      }));\n\n      return function (_x34) {\n        return _ref30.apply(this, arguments);\n      };\n    }();\n\n    _this.approvePurse = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee71() {\n      var purseToken, _purseToken;\n\n      return _regeneratorRuntime.wrap(function _callee71$(_context71) {\n        while (1) {\n          switch (_context71.prev = _context71.next) {\n            case 0:\n              if (!(_this.state.walletConnect == true)) {\n                _context71.next = 8;\n                break;\n              }\n\n              purseToken = new window.web3Con.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n              _context71.next = 4;\n              return purseToken.methods.approve(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\", \"10000000000\").send({\n                from: _this.state.account\n              }).then( /*#__PURE__*/function () {\n                var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee69(result) {\n                  return _regeneratorRuntime.wrap(function _callee69$(_context69) {\n                    while (1) {\n                      switch (_context69.prev = _context69.next) {\n                        case 0:\n                          _this.componentWillMount();\n\n                        case 1:\n                        case \"end\":\n                          return _context69.stop();\n                      }\n                    }\n                  }, _callee69);\n                }));\n\n                return function (_x35) {\n                  return _ref32.apply(this, arguments);\n                };\n              }());\n\n            case 4:\n              _this.componentWillMount();\n\n              _this.setState({\n                loading: true\n              });\n\n              _context71.next = 12;\n              break;\n\n            case 8:\n              if (!(_this.state.wallet == true)) {\n                _context71.next = 12;\n                break;\n              }\n\n              _purseToken = new window.web3.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\");\n              _context71.next = 12;\n              return _purseToken.methods.approve(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\", \"10000000000\").send({\n                from: _this.state.account\n              }).then( /*#__PURE__*/function () {\n                var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee70(result) {\n                  return _regeneratorRuntime.wrap(function _callee70$(_context70) {\n                    while (1) {\n                      switch (_context70.prev = _context70.next) {\n                        case 0:\n                          _this.componentWillMount();\n\n                        case 1:\n                        case \"end\":\n                          return _context70.stop();\n                      }\n                    }\n                  }, _callee70);\n                }));\n\n                return function (_x36) {\n                  return _ref33.apply(this, arguments);\n                };\n              }());\n\n            case 12:\n            case \"end\":\n              return _context71.stop();\n          }\n        }\n      }, _callee71);\n    }));\n    _this.state = {\n      account: '',\n      lpToken: {},\n      purseTokenUpgradable: {},\n      restakingFarm: {},\n      purseTokenUpgradableBalance: '0',\n      purseTokenTotalSupply: '0',\n      totalBurnAmount: '0',\n      sum30BurnAmount: '0',\n      totalTransferAmount: '0',\n      sum30TransferAmount: '0',\n      cumulateTransfer: [],\n      cumulateBurn: [],\n      stakedBalance: '0',\n      i: '0',\n      n: '0',\n      wallet: false,\n      metamask: false,\n      farmLoading: false,\n      walletConnect: false,\n      aprloading: false,\n      poolLength: '0',\n      userSegmentInfo: [[], []],\n      poolSegmentInfo: [[], []],\n      lpTokenSegmentBalance: [[], []],\n      pendingSegmentReward: [[], []],\n      lpTokenSegmentAllowance: [[], []],\n      tvl: [[], []],\n      apr: [[], []],\n      apyDaily: [[], []],\n      apyWeekly: [[], []],\n      apyMonthly: [[], []],\n      totalrewardperblock: '0',\n      totalpendingReward: '0',\n      buttonPopup: false,\n      poolCapRewardToken: '0',\n      poolMintedRewardToken: '0',\n      poolRewardToken: '0',\n      networkName: \"Loading\",\n      rewardEndTime: '0',\n      rewardStartTime: '0',\n      distributedAmount: '0',\n      distributedPercentage: '0',\n      rewardEndTimeDate: '0',\n      rewardStartTimeDate: '0',\n      claimAmount: '0',\n      purseStakingUserReceipt: '0',\n      purseStakingUserPurse: '0',\n      purseStakingUserReward: '0',\n      purseStakingUserAllowance: '0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var maincontent;\n      var menucontent;\n      var depositcontent;\n      var oneinchContent;\n      var distributionContent;\n      var farmInfoContent;\n      var stakeContent;\n      maincontent = /*#__PURE__*/React.createElement(Main, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        poolLength: this.state.poolLength,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        PURSEPrice: this.state.PURSEPrice,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        lpTokenInContract: this.state.lpTokenInContract,\n        totalrewardperblock: this.state.totalrewardperblock,\n        poolCapRewardToken: this.state.poolCapRewardToken,\n        poolMintedRewardToken: this.state.poolMintedRewardToken,\n        poolRewardToken: this.state.poolRewardToken,\n        totalBurnAmount: this.state.totalBurnAmount,\n        sum30BurnAmount: this.state.sum30BurnAmount,\n        totalTransferAmount: this.state.totalTransferAmount,\n        sum30TransferAmount: this.state.sum30TransferAmount,\n        cumulateTransfer: this.state.cumulateTransfer,\n        cumulateBurn: this.state.cumulateBurn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 19\n        }\n      });\n      menucontent = /*#__PURE__*/React.createElement(Menu, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        totalpendingReward: this.state.totalpendingReward,\n        totalrewardperblock: this.state.totalrewardperblock,\n        userSegmentInfo: this.state.userSegmentInfo,\n        poolSegmentInfo: this.state.poolSegmentInfo,\n        lpTokenSegmentBalance: this.state.lpTokenSegmentBalance,\n        pendingSegmentReward: this.state.pendingSegmentReward,\n        buttonPopup: this.state.buttonPopup,\n        farmNetwork: this.state.farmNetwork,\n        tvl: this.state.tvl,\n        apr: this.state.apr,\n        apyDaily: this.state.apyDaily,\n        apyWeekly: this.state.apyWeekly,\n        apyMonthly: this.state.apyMonthly,\n        farmLoading: this.state.farmLoading,\n        aprloading: this.state.aprloading,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        setI: this.setI,\n        setTrigger: this.setTrigger,\n        harvest: this.harvest,\n        stakedBalance: this.state.stakedBalance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 19\n        }\n      });\n      depositcontent = /*#__PURE__*/React.createElement(Deposit, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        i: this.state.i,\n        n: this.state.n,\n        userSegmentInfo: this.state.userSegmentInfo,\n        poolSegmentInfo: this.state.poolSegmentInfo,\n        lpTokenSegmentBalance: this.state.lpTokenSegmentBalance,\n        c: this.state.lpTokenSegmentAsymbol,\n        pendingSegmentReward: this.state.pendingSegmentReward,\n        lpTokenSegmentAllowance: this.state.lpTokenSegmentAllowance,\n        wallet: this.state.wallet,\n        farmNetwork: this.state.farmNetwork,\n        harvest: this.harvest,\n        approve: this.approve,\n        connectWallet: this.connectWallet,\n        walletConnect: this.state.walletConnect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 22\n        }\n      });\n      oneinchContent = /*#__PURE__*/React.createElement(Oneinch, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        totalpendingReward: this.state.totalpendingReward,\n        totalrewardperblock: this.state.totalrewardperblock,\n        userSegmentInfo: this.state.userSegmentInfo,\n        poolSegmentInfo: this.state.poolSegmentInfo,\n        lpTokenSegmentBalance: this.state.lpTokenSegmentBalance,\n        pendingSegmentReward: this.state.pendingSegmentReward,\n        buttonPopup: this.state.buttonPopup,\n        farmNetwork: this.state.farmNetwork,\n        tvl: this.state.tvl,\n        apr: this.state.apr,\n        apyDaily: this.state.apyDaily,\n        apyWeekly: this.state.apyWeekly,\n        apyMonthly: this.state.apyMonthly,\n        farmLoading: this.state.farmLoading,\n        aprloading: this.state.aprloading,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        setI: this.setI,\n        setTrigger: this.setTrigger,\n        harvest: this.harvest,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 22\n        }\n      });\n      farmInfoContent = /*#__PURE__*/React.createElement(Farm, {\n        lpTokenBalance: this.state.lpTokenBalance,\n        purseTokenUpgradableBalance: this.state.purseTokenUpgradableBalance,\n        poolLength: this.state.poolLength,\n        deposit: this.deposit,\n        withdraw: this.withdraw,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        lpTokenInContract: this.state.lpTokenInContract,\n        totalrewardperblock: this.state.totalrewardperblock,\n        poolCapRewardToken: this.state.poolCapRewardToken,\n        poolMintedRewardToken: this.state.poolMintedRewardToken,\n        poolRewardToken: this.state.poolRewardToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 23\n        }\n      });\n      distributionContent = /*#__PURE__*/React.createElement(Distribution, {\n        wallet: this.state.wallet,\n        walletConnect: this.state.walletConnect,\n        connectWallet: this.connectWallet,\n        checkClaimAmount: this.checkClaimAmount,\n        claimDistributePurse: this.claimDistributePurse,\n        account: this.state.account,\n        rewardEndTime: this.state.rewardEndTime,\n        rewardStartTime: this.state.rewardStartTime,\n        distributedAmount: this.state.distributedAmount,\n        distributedPercentage: this.state.distributedPercentage,\n        rewardStartTimeDate: this.state.rewardStartTimeDate,\n        rewardEndTimeDate: this.state.rewardEndTimeDate,\n        claimAmount: this.state.claimAmount,\n        totalTransferAmount: this.state.totalTransferAmount,\n        purseTokenTotalSupply: this.state.purseTokenTotalSupply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 27\n        }\n      });\n      stakeContent = /*#__PURE__*/React.createElement(Stake, {\n        wallet: this.state.wallet,\n        walletConnect: this.state.walletConnect,\n        connectWallet: this.connectWallet,\n        account: this.state.account,\n        purseStaking: this.state.purseStaking,\n        purseStakingUserReceipt: this.state.purseStakingUserReceipt,\n        purseStakingUserPurse: this.state.purseStakingUserPurse,\n        purseStakingUserReward: this.state.purseStakingUserReward,\n        purseStakingUserAllowance: this.state.purseStakingUserAllowance,\n        stake: this.stake,\n        unstake: this.unstake,\n        checkPurseAmount: this.checkPurseAmount,\n        approvePurse: this.approvePurse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 20\n        }\n      });\n      return /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Navb, {\n        account: this.state.account,\n        first4Account: this.state.first4Account,\n        last4Account: this.state.last4Account,\n        wallet: this.state.wallet,\n        setWalletTrigger: this.setWalletTrigger,\n        loadWeb3: this.loadWeb3,\n        connectWallet: this.connectWallet,\n        WalletConnect: this.WalletConnect,\n        walletConnect: this.state.walletConnect,\n        WalletDisconnect: this.WalletDisconnect,\n        networkName: this.state.networkName,\n        PURSEPrice: this.state.PURSEPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1250,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '1000px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 21\n        }\n      }, \" \", maincontent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 21\n        }\n      }, \" \", maincontent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/lpfarm/menu\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257,\n          columnNumber: 21\n        }\n      }, \" \", menucontent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/lpfarm/farmInfo\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 21\n        }\n      }, \" \", farmInfoContent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/lpfarm/oneinch\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 21\n        }\n      }, \" \", oneinchContent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/distribution\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 21\n        }\n      }, \" \", distributionContent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/stake\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 21\n        }\n      }, \" \", stakeContent, \" \"), /*#__PURE__*/React.createElement(Route, {\n        path: \"/deposit\",\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 21\n        }\n      }, \" \", depositcontent, \" \")), /*#__PURE__*/React.createElement(Popup, {\n        trigger: this.state.buttonPopup,\n        setTrigger: this.setTrigger,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 21\n        }\n      }, depositcontent))))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yanping/Documents/LPRestakingFarm/src/components/App.js"],"names":["React","Component","Web3","WalletConnectProvider","BrowserRouter","Router","Switch","Route","LpToken","IPancakePair","PurseTokenUpgradable","RestakingFarm","PurseFarm","Navb","Main","Menu","Oneinch","Deposit","Popup","Farm","Distribution","Stake","PurseStaking","PurseToken","App","loadWeb3","loadFarmData","loadBlockchainData","loadTVLAPR","state","wallet","walletConnect","loadBlockchainUserData","delay","farm","setState","web3Bsc","window","networkId","farmNetwork","metamask","ethereum","request","method","chainId","networkName","on","handleChainChanged","handleAccountsChanged","chainID","mongoResponse0","loadBDL","mongoResponse1","loadAccumulateTransfer","mongoResponse2","loadAccumulateBurn","coingeckoResponse","loadApiPrice","myJson","myJson1","myJson2","myJson3","PURSEPrice","toFixed","USDTPrice","USDCPrice","BNBPrice","WETHPrice","BUSDPrice","BTCPrice","totalTransferAmount","sum30TransferAmount","totalBurnAmount","sum30BurnAmount","cumulateTransfer","cumulateBurn","pancakeContract","eth","Contract","abi","purseTokenUpgradable","restakingFarm","purseStaking","purseToken","farmResponse0","loadStakedBalance","farmResponse1","loadPurseTokenTotalSupply","farmResponse2","loadPoolRewardToken","response0","loadRewardEndTime","response1","loadRewardStartTime","response2","loadDistributedAmount","response3","loadDistributedPercentage","response4","loadPoolCapRewardToken","response5","loadPoolMintedRewardToken","response6","loadPoolLength","purseResponse0","loadPurseStakingUserReceipt","purseResponse1","loadPurseStakingUserReward","purseResponse2","loadPurseStakingUserAllowance","purseResponse3","loadPurseStakingUserPurse","stakedBalance","purseTokenTotalSupply","poolRewardToken","rewardEndTime","rewardStartTime","distributedAmount","distributedPercentage","poolCapRewardToken","poolMintedRewardToken","poolLength","rewardStartTimeDate","timeConverter","rewardEndTimeDate","purseStakingUserReceipt","purseStakingUserReward","purseStakingUserAllowance","purseStakingUserPurse","toString","totalrewardperblock","purseTokenUpgradableBalance","poolSegmentInfo","lpTokenSegmentBalance","userSegmentInfo","pendingSegmentReward","lpTokenAddresses","lpTokenPairsymbols","n","i","poolInfo","lpTokenBalance","parseInt","pursePerBlock","bonusMultiplier","lpAddresses","lpTokenPairsymbol","toLocaleString","useGrouping","totalpendingReward","farmLoading","userResponse0","loadPurseTokenBalance","userResponse1","checkClaimAmount","account","claimAmount","lpTokenSegmentAllowance","loadUserInfo","loadLpTokenBalance","loadLpTokenAllowance","loadPendingReward","userInfo","lpTokenAllowance","pendingReward","utils","fromWei","amount","methods","_getRewardEndTime","call","_getRewardStartTime","_monthlyDistributePr","_percentageDistribute","_totalSupply","capMintToken","totalMintToken","fetch","json","balanceOf","totalSupply","purseTokenBalance","lpTokenPair","allowance","_address","_lastRewardStartTime","lastRewardStartTime","_numOfDaysPerMth","numOfDays","percentageDis","_averageInterval","averageInterval","address","accAmount","userRewardInfo","userBalance","purseStakingUserInfo","receiptToken","getTotalPurse","totalReceiptSupply","purseStakingTotalReceipt","tvl","apr","apyDaily","apyWeekly","apyMonthly","response","tvlArray","aprArray","apyArray","Math","pow","aprloading","web3","currentProvider","alert","props","connectWallet","then","switchNetwork","setWalletTrigger","catch","err","code","console","error","WalletConnect","provider","rpc","enable","web3Con","net","getId","WalletDisconnect","getAccounts","accounts","first4Account","substring","last4Account","slice","componentWillMount","connected","disconnect","params","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","length","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minimumIntegerDigits","min","getMinutes","sec","getSeconds","time","ms","Promise","res","setTimeout","deposit","restakingFarmData","networks","send","from","result","approve","lpToken","withdraw","harvest","claimReward","loadLastRewardStartTime","loadNumOfDays","loadPercentageDis","loadAverageInterval","loadUserRewardInfo","loadUserBalance","loadPurseTotalSupply","reward","lastUpdateTime","parseFloat","accReward","interval","accumulateAmount","lastmonthAccAmount","claimDistributePurse","now","claimDistributionPurse","setI","type","pair","setTrigger","buttonPopup","stake","enter","loading","unstake","receipt","leave","checkPurseAmount","loadPurseStakingTotalPurse","loadPurseStakingTotalReceipt","purseStakingTotalPurse","purseWei","purse","maximumFractionDigits","approvePurse","maincontent","menucontent","depositcontent","oneinchContent","distributionContent","farmInfoContent","stakeContent","lpTokenInContract","lpTokenSegmentAsymbol","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LpToken from '../abis/LpToken.json'\r\nimport IPancakePair from '../abis/IPancakePair.json'\r\nimport PurseTokenUpgradable from '../abis/PurseTokenUpgradable.json'\r\nimport RestakingFarm from '../abis/RestakingFarm.json'\r\n\r\nimport PurseFarm from '../farm/farmPurse.json'\r\nimport Navb from './Navbar'\r\nimport Main from './Main'\r\nimport Menu from './Menu'\r\nimport Oneinch from './1inch'\r\nimport Deposit from './Deposit'\r\nimport Popup from './Popup'\r\nimport Farm from './Farm'\r\nimport Distribution from './Distribution'\r\nimport Stake from './Stake'\r\n\r\nimport './Popup.css'\r\nimport './App.css'\r\n\r\nimport PurseStaking from '../abis/PurseStaking.json'\r\nimport PurseToken from '../abis/PurseTokenTest.json'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadFarmData()\r\n    await this.loadBlockchainData()\r\n    this.loadTVLAPR()\r\n    while ((this.state.wallet || this.state.walletConnect) == true) {\r\n      await this.loadBlockchainUserData()\r\n      await this.delay(10000);\r\n    }\r\n  }\r\n\r\n  async loadFarmData() {\r\n    const farm = PurseFarm.farm\r\n    this.setState({ farm })\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3Bsc = window.web3Bsc\r\n\r\n    const networkId = \"56\"\r\n    this.setState({ networkId })\r\n    const farmNetwork = \"MAINNET\"\r\n    this.setState({ farmNetwork })\r\n\r\n    if (this.state.metamask == true && this.state.walletConnect == false) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      window.ethereum.on('chainChanged', this.handleChainChanged);\r\n      window.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n    } else if (this.state.metamask == false && this.state.walletConnect == false) {\r\n      this.setState({ chainID: \"0x\" })\r\n      this.setState({ networkName: \"Unavailable\" })\r\n    }\r\n\r\n    let mongoResponse0 = this.loadBDL()\r\n    let mongoResponse1 = this.loadAccumulateTransfer()\r\n    let mongoResponse2 = this.loadAccumulateBurn()\r\n    let coingeckoResponse = this.loadApiPrice()\r\n    let myJson = await mongoResponse0;\r\n    let myJson1 = await mongoResponse1;\r\n    let myJson2 = await mongoResponse2;\r\n    let myJson3 = await coingeckoResponse;\r\n\r\n    let PURSEPrice = myJson3[\"pundi-x-purse\"][\"usd\"]\r\n    this.setState({ PURSEPrice: PURSEPrice.toFixed(7) })\r\n    let USDTPrice = myJson3[\"tether\"][\"usd\"]\r\n    this.setState({ USDTPrice: USDTPrice.toFixed(7) })\r\n    let USDCPrice = myJson3[\"usd-coin\"][\"usd\"]\r\n    this.setState({ USDCPrice: USDCPrice.toFixed(7) })\r\n    let BNBPrice = myJson3[\"binancecoin\"][\"usd\"]\r\n    this.setState({ BNBPrice: BNBPrice.toFixed(7) })\r\n    let WETHPrice = myJson3[\"weth\"][\"usd\"]\r\n    this.setState({ WETHPrice: WETHPrice.toFixed(7) })\r\n    let BUSDPrice = myJson3[\"binance-usd\"][\"usd\"]\r\n    this.setState({ BUSDPrice: BUSDPrice.toFixed(7) })\r\n    let BTCPrice = myJson3[\"bitcoin\"][\"usd\"]\r\n    this.setState({ BTCPrice: BTCPrice.toFixed(7) })\r\n\r\n    let totalTransferAmount = myJson[\"TransferTotal\"]\r\n    let sum30TransferAmount = myJson[\"Transfer30Days\"]\r\n    let totalBurnAmount = myJson[\"BurnTotal\"]\r\n    let sum30BurnAmount = myJson[\"Burn30Days\"]\r\n    let cumulateTransfer = myJson1\r\n    let cumulateBurn = myJson2\r\n\r\n    this.setState({ totalBurnAmount })\r\n    this.setState({ sum30BurnAmount })\r\n    this.setState({ totalTransferAmount })\r\n    this.setState({ sum30TransferAmount })\r\n    this.setState({ cumulateTransfer })\r\n    this.setState({ cumulateBurn })\r\n\r\n    // Load contract\r\n    const pancakeContract = new window.web3Bsc.eth.Contract(IPancakePair.abi, \"0x081F4B87F223621B4B31cB7A727BB583586eAD98\")\r\n    const purseTokenUpgradable = new web3Bsc.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\") //mainnet\r\n    const restakingFarm = new web3Bsc.eth.Contract(RestakingFarm.abi, \"0x439ec8159740a9b9a579f286963ac1c050af31c8\")\r\n\r\n    const purseStaking = new window.web3Bsc.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\") \r\n    const purseToken = new window.web3Bsc.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n\r\n    this.setState({ purseTokenUpgradable })\r\n    this.setState({ restakingFarm })\r\n    this.setState({ pancakeContract })\r\n\r\n    this.setState({ purseStaking })\r\n    this.setState({ purseToken })\r\n\r\n    if (this.state.wallet == false && this.state.walletConnect == false) {\r\n\r\n      let farmResponse0 = this.loadStakedBalance()\r\n      let farmResponse1 = this.loadPurseTokenTotalSupply()\r\n      let farmResponse2 = this.loadPoolRewardToken()\r\n\r\n      let response0 = this.loadRewardEndTime()\r\n      let response1 = this.loadRewardStartTime()\r\n      let response2 = this.loadDistributedAmount()\r\n      let response3 = this.loadDistributedPercentage()\r\n      let response4 = this.loadPoolCapRewardToken()\r\n      let response5 = this.loadPoolMintedRewardToken()\r\n      let response6 = this.loadPoolLength()\r\n\r\n      let purseResponse0 = this.loadPurseStakingUserReceipt()\r\n      let purseResponse1 = this.loadPurseStakingUserReward()\r\n      let purseResponse2 = this.loadPurseStakingUserAllowance()\r\n      let purseResponse3 = this.loadPurseStakingUserPurse()\r\n\r\n      let stakedBalance = await farmResponse0\r\n      let purseTokenTotalSupply = await farmResponse1\r\n      let poolRewardToken = await farmResponse2\r\n\r\n      let rewardEndTime = await response0\r\n      let rewardStartTime = await response1\r\n      let distributedAmount = await response2\r\n      let distributedPercentage = await response3\r\n      let poolCapRewardToken = await response4\r\n      let poolMintedRewardToken = await response5\r\n      let poolLength = await response6\r\n      let rewardStartTimeDate = this.timeConverter(rewardStartTime)\r\n      let rewardEndTimeDate = this.timeConverter(rewardEndTime)\r\n\r\n      let purseStakingUserReceipt = await purseResponse0\r\n      let purseStakingUserReward = await purseResponse1\r\n      let purseStakingUserAllowance = await purseResponse2\r\n      let purseStakingUserPurse = await purseResponse3\r\n\r\n      this.setState({ stakedBalance: stakedBalance.toString() })\r\n      this.setState({ purseTokenTotalSupply: purseTokenTotalSupply.toString() })\r\n      this.setState({ poolRewardToken: poolRewardToken.toString() })\r\n      this.setState({ poolCapRewardToken })\r\n      this.setState({ poolMintedRewardToken })\r\n      this.setState({ poolLength })\r\n\r\n      this.setState({ purseStakingUserReceipt: purseStakingUserReceipt.toString() })\r\n      this.setState({ purseStakingUserReward: purseStakingUserReward.toString() })\r\n      this.setState({ purseStakingUserAllowance: purseStakingUserAllowance.toString() })\r\n      this.setState({ purseStakingUserPurse: purseStakingUserPurse.toString() })\r\n\r\n      let totalrewardperblock = 0\r\n      let purseTokenUpgradableBalance = 0\r\n      let poolSegmentInfo = [[], []]\r\n      let lpTokenSegmentBalance = [[], []]\r\n      let userSegmentInfo = [[], []]\r\n      let pendingSegmentReward = [[], []]\r\n\r\n      let lpTokenAddresses = []\r\n      let lpTokenPairsymbols = []\r\n\r\n      let n = 0\r\n      let i = 0\r\n\r\n      for (i = 0; i < poolLength; i++) {\r\n        let poolInfo = this.state.farm[i]\r\n        let lpTokenBalance = 0\r\n        totalrewardperblock += parseInt(poolInfo.pursePerBlock * poolInfo.bonusMultiplier)\r\n        lpTokenAddresses[i] = poolInfo.lpAddresses[this.state.networkId]\r\n        lpTokenPairsymbols[i] = poolInfo.lpTokenPairsymbol\r\n\r\n        if (poolInfo.lpTokenPairsymbol == \"Cake-LP\") {\r\n          userSegmentInfo[0][n] = \"\"\r\n          pendingSegmentReward[0][n] = \"\"\r\n          poolSegmentInfo[0][n] = poolInfo\r\n          lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n          n += 1\r\n        } else {\r\n          userSegmentInfo[1][n] = \"\"\r\n          pendingSegmentReward[1][n] = \"\"\r\n          poolSegmentInfo[1][n] = poolInfo\r\n          lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n          n += 1\r\n        }\r\n      }\r\n\r\n      this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n      this.setState({ poolSegmentInfo })\r\n      this.setState({ lpTokenSegmentBalance })\r\n      this.setState({ totalrewardperblock: totalrewardperblock.toLocaleString('fullwide', { useGrouping: false }) })\r\n      this.setState({ pendingSegmentReward: [[], []] })\r\n      this.setState({ userSegmentInfo: [[], []] })\r\n      this.setState({ totalpendingReward: \"0\" })\r\n\r\n      this.setState({ lpTokenAddresses })\r\n      this.setState({ lpTokenPairsymbols })\r\n\r\n      this.setState({ rewardStartTime })\r\n      this.setState({ rewardEndTime })\r\n      this.setState({ rewardStartTimeDate })\r\n      this.setState({ rewardEndTimeDate })\r\n      this.setState({ distributedAmount })\r\n      this.setState({ distributedPercentage })\r\n      this.setState({ farmLoading: true })\r\n    }\r\n  }\r\n\r\n  // ##############################################################################################################################\r\n  async loadBlockchainUserData() {\r\n    // Load PurseTokenUpgradable\r\n    let userResponse0 = this.loadPurseTokenBalance()\r\n    let userResponse1 = this.checkClaimAmount(this.state.account)\r\n    let purseTokenUpgradableBalance = await userResponse0\r\n    let claimAmount = await userResponse1\r\n\r\n    this.setState({ purseTokenUpgradableBalance: purseTokenUpgradableBalance.toString() })\r\n    this.setState({ claimAmount })\r\n\r\n    let totalpendingReward = 0\r\n    let userSegmentInfo = [[], []]\r\n    let lpTokenSegmentBalance = [[], []]\r\n    let lpTokenSegmentAllowance = [[], []]\r\n    let pendingSegmentReward = [[], []]\r\n    let n = 0\r\n    let i = 0\r\n\r\n    let response0 = []\r\n    let response1 = []\r\n    let response2 = []\r\n    let response3 = []\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n      response0[i] = this.loadUserInfo(i)\r\n      response1[i] = this.loadLpTokenBalance(i)\r\n      response2[i] = this.loadLpTokenAllowance(i)\r\n      response3[i] = this.loadPendingReward(i)\r\n    }\r\n\r\n    for (i = 0; i < this.state.poolLength; i++) {\r\n\r\n      let userInfo = await response0[i]\r\n      let lpTokenBalance = await response1[i]\r\n      let lpTokenAllowance = await response2[i]\r\n      let pendingReward = await response3[i]\r\n      totalpendingReward += parseInt(pendingReward)\r\n\r\n      if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n        userSegmentInfo[0][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        lpTokenSegmentBalance[0][n] = lpTokenBalance\r\n        lpTokenSegmentAllowance[0][n] = lpTokenAllowance\r\n        pendingSegmentReward[0][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n        n += 1\r\n      } else {\r\n        userSegmentInfo[1][n] = window.web3Bsc.utils.fromWei(userInfo.amount, 'Ether')\r\n        lpTokenSegmentBalance[1][n] = lpTokenBalance\r\n        lpTokenSegmentAllowance[1][n] = lpTokenAllowance\r\n        pendingSegmentReward[1][n] = window.web3Bsc.utils.fromWei(pendingReward, 'Ether')\r\n        n += 1\r\n      }\r\n    }\r\n\r\n    this.setState({ lpTokenSegmentBalance })\r\n    this.setState({ pendingSegmentReward })\r\n    this.setState({ lpTokenSegmentAllowance })\r\n    this.setState({ userSegmentInfo })\r\n    this.setState({ totalpendingReward: totalpendingReward.toLocaleString('fullwide', { useGrouping: false }) })\r\n    this.setState({ farmLoading: true })\r\n  }\r\n  // ***************************Farm Info***********************************************************************\r\n  async loadRewardEndTime() {\r\n    let rewardEndTime = await this.state.purseTokenUpgradable.methods._getRewardEndTime().call()\r\n    return rewardEndTime\r\n  }\r\n\r\n  async loadRewardStartTime() {\r\n    let rewardStartTime = await this.state.purseTokenUpgradable.methods._getRewardStartTime().call()\r\n    return rewardStartTime\r\n  }\r\n\r\n  async loadDistributedAmount() {\r\n    let distributedAmount = await this.state.purseTokenUpgradable.methods._monthlyDistributePr().call()\r\n    return distributedAmount\r\n  }\r\n\r\n  async loadDistributedPercentage() {\r\n    let distributedPercentage = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n    return distributedPercentage\r\n  }\r\n\r\n  async loadPurseTotalSupply() {\r\n    let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods._totalSupply().call()\r\n    return purseTokenTotalSupply\r\n  }\r\n\r\n  async loadPoolCapRewardToken() {\r\n    let poolCapRewardToken = await this.state.restakingFarm.methods.capMintToken().call()\r\n    return poolCapRewardToken\r\n  }\r\n\r\n  async loadPoolMintedRewardToken() {\r\n    let poolMintedRewardToken = await this.state.restakingFarm.methods.totalMintToken().call()\r\n    return poolMintedRewardToken\r\n  }\r\n\r\n  async loadPoolLength() {\r\n    let poolLength = await this.state.restakingFarm.methods.poolLength().call()\r\n    return poolLength\r\n  }\r\n\r\n  async loadApiPrice() {\r\n    let coingeckoResponse = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=binancecoin%2Cweth%2Cbinance-usd%2Cusd-coin%2Ctether%2Cbitcoin%2Cpundi-x-purse&vs_currencies=usd`);\r\n    return coingeckoResponse.json();\r\n  }\r\n\r\n  async loadBDL() {\r\n    let mongoResponse0 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/PundiX`);\r\n    return mongoResponse0.json()\r\n  }\r\n\r\n  async loadAccumulateTransfer() {\r\n    let mongoResponse1 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeTransfer`);\r\n    return mongoResponse1.json()\r\n  }\r\n\r\n  async loadAccumulateBurn() {\r\n    let mongoResponse2 = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/CumulativeBurn`);\r\n    return mongoResponse2.json()\r\n  }\r\n\r\n  async loadStakedBalance() {\r\n    let stakedBalance = await this.state.pancakeContract.methods.balanceOf(\"0x439ec8159740a9B9a579F286963Ac1C050aF31C8\").call()\r\n    stakedBalance = window.web3Bsc.utils.fromWei(stakedBalance, 'Ether')\r\n    return stakedBalance\r\n  }\r\n\r\n  async loadPurseTokenTotalSupply() {\r\n    let purseTokenTotalSupply = await this.state.purseTokenUpgradable.methods.totalSupply().call()\r\n    return purseTokenTotalSupply\r\n  }\r\n\r\n  async loadPoolRewardToken() {\r\n    let poolRewardToken = await this.state.purseTokenUpgradable.methods.balanceOf(\"0x439ec8159740a9b9a579f286963ac1c050af31c8\").call()\r\n    return poolRewardToken\r\n  }\r\n\r\n\r\n\r\n  // ***************************User Info***********************************************************************\r\n\r\n  async loadPurseTokenBalance() {\r\n    let purseTokenBalance = await this.state.purseTokenUpgradable.methods.balanceOf(this.state.account).call()\r\n    return purseTokenBalance\r\n  }\r\n\r\n  async loadUserInfo(i) {\r\n    let userInfo = await this.state.restakingFarm.methods.userInfo(this.state.lpTokenAddresses[i], this.state.account).call()\r\n    return userInfo\r\n  }\r\n\r\n  async loadLpTokenBalance(i) {\r\n    let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenBalance = await lpTokenPair.methods.balanceOf(this.state.account).call()\r\n    return lpTokenBalance\r\n  }\r\n\r\n  async loadLpTokenAllowance(i) {\r\n    let lpTokenPair = new window.web3Bsc.eth.Contract(IPancakePair.abi, this.state.lpTokenAddresses[i])\r\n    let lpTokenAllowance = await lpTokenPair.methods.allowance(this.state.account, this.state.restakingFarm._address).call()\r\n    return lpTokenAllowance\r\n  }\r\n\r\n  async loadPendingReward(i) {\r\n    let pendingReward = await this.state.restakingFarm.methods.pendingReward(this.state.lpTokenAddresses[i], this.state.account).call()\r\n    return pendingReward\r\n  }\r\n\r\n  // *************************** Distribution Reward Info ***********************************************************************\r\n\r\n  async loadLastRewardStartTime() {\r\n    let lastRewardStartTime = await this.state.purseTokenUpgradable.methods._lastRewardStartTime().call()\r\n    return lastRewardStartTime\r\n  }\r\n\r\n  async loadNumOfDays() {\r\n    let numOfDays = await this.state.purseTokenUpgradable.methods._numOfDaysPerMth().call()\r\n    return numOfDays\r\n  }\r\n\r\n  async loadPercentageDis() {\r\n    let percentageDis = await this.state.purseTokenUpgradable.methods._percentageDistribute().call()\r\n    return percentageDis\r\n  }\r\n\r\n  async loadAverageInterval() {\r\n    let averageInterval = await this.state.purseTokenUpgradable.methods._averageInterval().call()\r\n    return averageInterval\r\n  }\r\n\r\n  async loadUserRewardInfo(address) {\r\n    let userRewardInfo = await this.state.purseTokenUpgradable.methods.accAmount(address).call()\r\n    return userRewardInfo\r\n  }\r\n\r\n  async loadUserBalance(address) {\r\n    let userBalance = await this.state.purseTokenUpgradable.methods.balanceOf(address).call()\r\n    // userBalance = window.web3Bsc.utils.fromWei(userBalance, 'Ether')\r\n    return userBalance\r\n  }\r\n\r\n    // ***********************************Purse Staking***************************************************************\r\n    async loadPurseStakingUserReceipt() {\r\n      let purseStakingUserInfo = await this.state.purseStaking.methods.userInfo(this.state.account).call()\r\n      let purseStakingUserReceipt = purseStakingUserInfo.receiptToken\r\n      return purseStakingUserReceipt\r\n    }\r\n    async loadPurseStakingUserReward() {\r\n      let purseStakingUserPurse = await this.state.purseStaking.methods.getTotalPurse(this.state.account).call()\r\n      return purseStakingUserPurse\r\n    }\r\n    async loadPurseStakingUserAllowance() {\r\n      let purseStakingUserAllowance = await this.state.purseToken.methods.allowance(this.state.account, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\").call()\r\n      return purseStakingUserAllowance\r\n    }\r\n    async loadPurseStakingUserPurse() {\r\n      let purseStakingUserPurse = await this.state.purseToken.methods.balanceOf(this.state.account).call()\r\n      return purseStakingUserPurse\r\n    }\r\n    async loadPurseStakingTotalReceipt() {\r\n      let purseStakingTotalReceipt = await this.state.purseStaking.methods.totalReceiptSupply().call()\r\n      return purseStakingTotalReceipt\r\n    }\r\n    async loadPurseStakingTotalPurse() {\r\n      let purseStakingTotalReceipt = await this.state.purseToken.methods.balanceOf(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\").call()\r\n      return purseStakingTotalReceipt\r\n    }\r\n\r\n  // ***************************TVL & APR***********************************************************************\r\n  async loadTVLAPR() {\r\n    // Load bavaMasterFarmer\r\n\r\n    let tvl = [[], []]\r\n    let apr = [[], []]\r\n    let apyDaily = [[], []]\r\n    let apyWeekly = [[], []]\r\n    let apyMonthly = [[], []]\r\n    let n = 0\r\n\r\n    let response = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/application-0-iqgbt/endpoint/TVLAPR`);\r\n    const myJson = await response.json();\r\n    let tvlArray = myJson[\"TVL\"]\r\n    let aprArray = myJson[\"APR\"]\r\n    let apyArray = myJson[\"APYDaily\"]\r\n\r\n    for (let i = 0; i < this.state.poolLength; i++) {\r\n\r\n      if (this.state.lpTokenPairsymbols[i] == \"Cake-LP\") {\r\n        tvl[0][n] = tvlArray\r\n        apr[0][n] = aprArray\r\n        apyDaily[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 36500), 365) - 1) * 100\r\n        apyWeekly[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 5200), 52) - 1) * 100\r\n        apyMonthly[0][n] = (Math.pow((1 + 0.8 * apr[0][n] / 1200), 12) - 1) * 100\r\n        n += 1\r\n      } else {\r\n        tvl[1][n] = tvlArray\r\n        apr[1][n] = aprArray\r\n        apyDaily[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 36500), 365) - 1) * 100\r\n        apyWeekly[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 5200), 52) - 1) * 100\r\n        apyMonthly[1][n] = (Math.pow((1 + 0.8 * apr[1][n] / 1200), 12) - 1) * 100\r\n        n += 1\r\n      }\r\n    }\r\n    this.setState({ tvl })\r\n    this.setState({ apr })\r\n    this.setState({ apyDaily })\r\n    this.setState({ apyWeekly })\r\n    this.setState({ apyMonthly })\r\n    this.setState({ aprloading: true })\r\n  }\r\n\r\n\r\n  // ***********************************************************************************************************\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      // await window.ethereum.enable()\r\n      this.setState({ metamask: true })\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n      this.setState({ metamask: true })\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n      this.setState({ metamask: false })\r\n      this.setState({ wallet: false })\r\n    }\r\n    // window.web3Bsc = new Web3(`https://data-seed-prebsc-1-s2.binance.org:8545/`);  // testnet\r\n    window.web3Bsc = new Web3(`https://bsc-dataseed.binance.org/`);\r\n  }\r\n\r\n  connectWallet = () => {\r\n    if (this.state.metamask == true) {\r\n      window.ethereum\r\n        .request({ method: 'eth_requestAccounts' })\r\n        .then(async () => {\r\n          await this.switchNetwork()\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          if (chainId == \"0x38\") {      // mainnet: 0x38, testnet: 0x61\r\n            this.setWalletTrigger(true)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n          } else {\r\n            console.error(\"error\");\r\n            console.error(err);\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"No Metamask provider was found\")\r\n    }\r\n  }\r\n\r\n  WalletConnect = async () => {\r\n    const provider = new WalletConnectProvider({\r\n      rpc: {\r\n        // 97: `https://data-seed-prebsc-1-s3.binance.org:8545/`\r\n        56: `https://bsc-dataseed.binance.org/`\r\n      },\r\n      // chainId: 97,\r\n      chainId: 56,\r\n    });\r\n    window.provider = provider\r\n    await window.provider.enable();\r\n    window.web3Con = await new Web3(window.provider);\r\n    const networkId = await window.web3Con.eth.net.getId();\r\n    if (networkId != 56) {\r\n      alert(\"You're connected to an unsupported network.\")\r\n      this.WalletDisconnect()\r\n    } else {\r\n      const accounts = await window.web3Con.eth.getAccounts();\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ walletConnect: true })\r\n      this.setState({ networkName: \"BSC\" })\r\n      this.componentWillMount()\r\n    }\r\n\r\n    // Subscribe to accounts change\r\n    window.provider.on(\"accountsChanged\", this.handleAccountsChanged);\r\n    // Subscribe to session disconnection\r\n    window.provider.on(\"disconnect\", async () => {\r\n      await this.WalletDisconnect()\r\n    });\r\n    window.provider.on(\"chainChanged\", async () => {\r\n      await this.WalletDisconnect()\r\n      alert(\"You're connected to an unsupported network.\")\r\n    });\r\n  }\r\n\r\n  WalletDisconnect = async () => {\r\n    if (window.provider.connected == true) {\r\n      await window.provider.disconnect()\r\n    }\r\n    await this.setState({ walletConnect: false })\r\n    this.componentWillMount()\r\n  }\r\n\r\n  switchNetwork = async () => {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: '0x38' }],    // mainnet 0x38, testnet: 0x61\r\n      });\r\n    } catch (switchError) {\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [{\r\n              chainId: '0x38', rpcUrls: ['https://bsc-dataseed1.binance.org/'], chainName: 'BSC Mainnet',\r\n              nativeCurrency: {\r\n                name: 'BNB',\r\n                symbol: 'BNB', // 2-6 characters long\r\n                decimals: 18\r\n              }, blockExplorerUrls: ['https://bscscan.com/']\r\n            }],\r\n          });\r\n          const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n          this.setState({ chainId })\r\n          if (this.state.chainId == \"0x61\") {\r\n            this.setState({ networkName: \"BSC Testnet\" })\r\n          } else if (this.state.chainId == \"0x38\") {\r\n            this.setState({ networkName: \"BSC\" })\r\n          } else if (this.state.chainId == \"0x1\") {\r\n            this.setState({ networkName: \"Ethereum\" })\r\n          } else if (this.state.chainId == \"0x3\") {\r\n            this.setState({ networkName: \"Ropsten\" })\r\n          } else if (this.state.chainId == \"0x4\") {\r\n            this.setState({ networkName: \"Rinkeby\" })\r\n          } else if (this.state.chainId == \"0x2a\") {\r\n            this.setState({ networkName: \"Kovan\" })\r\n          } else if (this.state.chainId == \"0x89\") {\r\n            this.setState({ networkName: \"Polygon\" })\r\n          } else if (this.state.chainId == \"0x13881\") {\r\n            this.setState({ networkName: \"Mumbai\" })\r\n          } else if (this.state.chainId == \"0xa869\") {\r\n            this.setState({ networkName: \"Fuji\" })\r\n          } else if (this.state.chainId == \"0xa86a\") {\r\n            this.setState({ networkName: \"Avalanche\" })\r\n          }\r\n        } catch (addError) {\r\n          // handle \"add\" error\r\n        }\r\n      }\r\n      // handle other \"switch\" errors\r\n    }\r\n  }\r\n\r\n\r\n  handleAccountsChanged = async (accounts) => {\r\n    if (this.state.wallet == true) {\r\n      if (accounts.length === 0) {\r\n        // MetaMask is locked or the user has not connected any accounts\r\n        this.setWalletTrigger(false)\r\n      } else if (accounts[0] !== this.state.account) {\r\n        this.state.account = accounts[0];\r\n        const first4Account = this.state.account.substring(0, 4)\r\n        const last4Account = this.state.account.slice(-4)\r\n        this.setState({ first4Account: first4Account })\r\n        this.setState({ last4Account: last4Account })\r\n        this.componentWillMount()\r\n        // Do any other work!\r\n      }\r\n    } else if (this.state.walletConnect == true) {\r\n      const accounts = await window.web3Con.eth.getAccounts();\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ walletConnect: true })\r\n      this.componentWillMount()\r\n    }\r\n  }\r\n\r\n  handleChainChanged = async () => {\r\n    // We recommend reloading the page, unless you must do otherwise\r\n    // window.location.reload();\r\n    if (this.state.wallet == true) {\r\n      const chainId = await window.ethereum.request({ method: 'eth_chainId' });\r\n      this.setState({ chainId })\r\n      if (chainId != \"0x38\") {\r\n        this.setWalletTrigger(false)\r\n      }\r\n      if (this.state.chainId == \"0x61\") {\r\n        this.setState({ networkName: \"BSC Testnet\" })\r\n      } else if (this.state.chainId == \"0x38\") {\r\n        this.setState({ networkName: \"BSC\" })\r\n      } else if (this.state.chainId == \"0x1\") {\r\n        this.setState({ networkName: \"Ethereum\" })\r\n      } else if (this.state.chainId == \"0x3\") {\r\n        this.setState({ networkName: \"Ropsten\" })\r\n      } else if (this.state.chainId == \"0x4\") {\r\n        this.setState({ networkName: \"Rinkeby\" })\r\n      } else if (this.state.chainId == \"0x2a\") {\r\n        this.setState({ networkName: \"Kovan\" })\r\n      } else if (this.state.chainId == \"0x89\") {\r\n        this.setState({ networkName: \"Polygon\" })\r\n      } else if (this.state.chainId == \"0x13881\") {\r\n        this.setState({ networkName: \"Mumbai\" })\r\n      } else if (this.state.chainId == \"0xa869\") {\r\n        this.setState({ networkName: \"Fuji\" })\r\n      } else if (this.state.chainId == \"0xa86a\") {\r\n        this.setState({ networkName: \"Avalanche\" })\r\n      }\r\n      this.switchNetwork()\r\n      // Run any other necessary logic...\r\n    }\r\n  }\r\n\r\n  timeConverter = (UNIX_timestamp) => {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = a.getDate();\r\n    var hour = a.getHours().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var min = a.getMinutes().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var sec = a.getSeconds().toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false });\r\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\r\n    return time;\r\n  }\r\n\r\n  delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\n  deposit = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      await restakingFarm.methods.deposit(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  approve = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      let lpToken = new window.web3Con.eth.Contract(LpToken.abi, this.state.lpTokenAddresses[i])\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    } else if (this.state.wallet == true) {\r\n      let lpToken = new window.web3.eth.Contract(LpToken.abi, this.state.lpTokenAddresses[i])\r\n      await lpToken.methods.approve(this.state.restakingFarm._address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n  withdraw = async (i, amount, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else if (this.state.wallet == true) {\r\n      const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n      let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n      restakingFarm.methods.withdraw(this.state.lpTokenAddresses[i], amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  harvest = async (i, n) => {\r\n    if (this.state.walletConnect == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit LP to earn PURSE\")\r\n      } else {\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3Con.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n        restakingFarm.methods.claimReward(this.state.lpTokenAddresses[i]).send({ from: this.state.account }).then(async (result) => {\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    } else if (this.state.wallet == true) {\r\n      if (this.state.pendingSegmentReward[n][i] <= 0) {\r\n        alert(\"No token to harvest! Please deposit LP to earn PURSE\")\r\n      } else {\r\n        const restakingFarmData = RestakingFarm.networks[this.state.networkId]\r\n        let restakingFarm = new window.web3.eth.Contract(RestakingFarm.abi, restakingFarmData.address)\r\n\r\n        restakingFarm.methods.claimReward(this.state.lpTokenAddresses[i]).send({ from: this.state.account }).then(async (result) => {\r\n          this.componentWillMount()\r\n        }).catch((err) => {\r\n          if (err.code === 4001) {\r\n            // EIP-1193 userRejectedRequest error\r\n            // If this happens, the user rejected the connection request.\r\n            alert(\"Something went wrong...Code: 4001 User rejected the request.\")\r\n          } else {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      alert(\"Wallet is not connected\")\r\n    }\r\n  }\r\n\r\n  checkClaimAmount = async (address) => {\r\n\r\n    let response0 = this.loadLastRewardStartTime()\r\n    let response1 = this.loadNumOfDays()\r\n    let response2 = this.loadPercentageDis()\r\n    let response3 = this.loadAverageInterval()\r\n    let response4 = this.loadUserRewardInfo(address)\r\n    let response5 = this.loadUserBalance(address)\r\n    let response6 = this.loadPurseTotalSupply()\r\n\r\n    let lastRewardStartTime = await response0\r\n    let numOfDays = await response1\r\n    let percentageDis = await response2\r\n    let averageInterval = await response3\r\n    let userRewardInfo = await response4\r\n    let userBalance = await response5\r\n    let purseTokenTotalSupply = await response6\r\n    let reward = 0\r\n\r\n    if (userRewardInfo.lastUpdateTime == 0) {\r\n      reward = 0\r\n    } else if (userRewardInfo.lastUpdateTime >= this.state.rewardStartTime) {\r\n      reward = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.accReward, 'Ether'))\r\n    } else if (userRewardInfo.lastUpdateTime < lastRewardStartTime) {       // 1st distribution wont happen, all users lastUpdateTime either 0 or > lastRewardStartTime\r\n      let interval = parseInt((this.state.rewardStartTime - lastRewardStartTime) / averageInterval);\r\n      let accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval);\r\n      reward = accumulateAmount * this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100;\r\n    } else {\r\n      let interval = parseInt((this.state.rewardStartTime - userRewardInfo.lastUpdateTime) / averageInterval);\r\n      let accumulateAmount = parseFloat(window.web3Bsc.utils.fromWei(userBalance, 'Ether') * interval)\r\n      let lastmonthAccAmount = parseFloat(window.web3Bsc.utils.fromWei(userRewardInfo.amount, 'Ether')) + accumulateAmount\r\n      reward = lastmonthAccAmount * this.state.distributedAmount * percentageDis / purseTokenTotalSupply / numOfDays / 100\r\n    }\r\n    return reward\r\n  }\r\n\r\n  claimDistributePurse = async () => {\r\n    if ((Date.now() / 1000).toFixed(0) < this.state.rewardStartTime) {\r\n      alert(\"Distribution not started yet\")\r\n    } else if ((Date.now() / 1000).toFixed(0) > this.state.rewardEndTime) {\r\n      alert(\"Distribution already end\")\r\n    } else {\r\n      if (this.state.claimAmount == 0) {\r\n        alert(\"No reward available\")\r\n      } else {\r\n        if (this.state.walletConnect == true) {\r\n          let purseTokenUpgradable = new window.web3Con.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\")\r\n          await purseTokenUpgradable.methods.claimDistributionPurse().send({ from: this.state.account })\r\n        } else if (this.state.wallet == true) {\r\n          let purseTokenUpgradable = new window.web3.eth.Contract(PurseTokenUpgradable.abi, \"0x29a63F4B209C29B4DC47f06FFA896F32667DAD2C\")\r\n          await purseTokenUpgradable.methods.claimDistributionPurse().send({ from: this.state.account })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setI = (type, pair) => {\r\n    this.setState({ n: type })\r\n    this.setState({ i: pair })\r\n  }\r\n\r\n  setTrigger = (state) => {\r\n    this.setState({ buttonPopup: state })\r\n  }\r\n\r\n  setWalletTrigger = async (state) => {\r\n    if (state == false) {\r\n      await this.setState({ wallet: state })\r\n      this.componentWillMount()\r\n    } else {\r\n      const accounts = await window.web3.eth.getAccounts()\r\n      this.setState({ account: accounts[0] })\r\n      const first4Account = this.state.account.substring(0, 4)\r\n      const last4Account = this.state.account.slice(-4)\r\n      this.setState({ first4Account: first4Account })\r\n      this.setState({ last4Account: last4Account })\r\n      this.setState({ wallet: state })\r\n      this.componentWillMount()\r\n    }\r\n  }\r\n\r\n  stake = async (amount) => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\") \r\n      await purseStaking.methods.enter(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    } else if (this.state.wallet == true) {\r\n      this.setState({ loading: false })\r\n      let purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\") \r\n      await purseStaking.methods.enter(amount).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    }\r\n  }\r\n\r\n  unstake = async (receipt) => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseStaking = new window.web3Con.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\") \r\n      await purseStaking.methods.leave(receipt).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });   \r\n    } else if (this.state.wallet == true) {\r\n      let purseStaking = new window.web3.eth.Contract(PurseStaking.abi, \"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\") \r\n      await purseStaking.methods.leave(receipt).send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      }).catch((err) => {\r\n        if (err.code === 4001) {\r\n          // EIP-1193 userRejectedRequest error\r\n          // If this happens, the user rejected the connection request.\r\n          alert(\"Something went wrong. Code: 4001 User rejected the request.\")\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });  \r\n    }\r\n  }\r\n\r\n  checkPurseAmount = async (receipt) => {\r\n    let response0 = this.loadPurseStakingTotalPurse()\r\n    let response1 = this.loadPurseStakingTotalReceipt()\r\n    let purseStakingTotalPurse = await response0\r\n    let purseStakingTotalReceipt = await response1\r\n\r\n    let purseWei = (receipt * purseStakingTotalPurse / purseStakingTotalReceipt).toString()\r\n    let purse = parseFloat(window.web3Bsc.utils.fromWei(purseWei, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 10 })\r\n    return purse\r\n  }\r\n\r\n  approvePurse = async () => {\r\n    if (this.state.walletConnect == true) {\r\n      let purseToken = new window.web3Con.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n      await purseToken.methods.approve(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\", \"10000000000\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n      this.componentWillMount()\r\n      this.setState({ loading: true })\r\n    } else if (this.state.wallet == true) {\r\n      let purseToken = new window.web3.eth.Contract(PurseToken.abi, \"0x20A31793e46CE77680e554cc5931938374C3D940\")\r\n      await purseToken.methods.approve(\"0x37450e63C03186370a0accBB7AEE8fdC0eF01965\", \"10000000000\").send({ from: this.state.account }).then(async (result) => {\r\n        this.componentWillMount()\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      lpToken: {},\r\n      purseTokenUpgradable: {},\r\n      restakingFarm: {},\r\n      purseTokenUpgradableBalance: '0',\r\n      purseTokenTotalSupply: '0',\r\n      totalBurnAmount: '0',\r\n      sum30BurnAmount: '0',\r\n      totalTransferAmount: '0',\r\n      sum30TransferAmount: '0',\r\n      cumulateTransfer: [],\r\n      cumulateBurn: [],\r\n      stakedBalance: '0',\r\n      i: '0',\r\n      n: '0',\r\n      wallet: false,\r\n      metamask: false,\r\n      farmLoading: false,\r\n      walletConnect: false,\r\n      aprloading: false,\r\n      poolLength: '0',\r\n      userSegmentInfo: [[], []],\r\n      poolSegmentInfo: [[], []],\r\n      lpTokenSegmentBalance: [[], []],\r\n      pendingSegmentReward: [[], []],\r\n      lpTokenSegmentAllowance: [[], []],\r\n      tvl: [[], []],\r\n      apr: [[], []],\r\n      apyDaily: [[], []],\r\n      apyWeekly: [[], []],\r\n      apyMonthly: [[], []],\r\n      totalrewardperblock: '0',\r\n      totalpendingReward: '0',\r\n      buttonPopup: false,\r\n      poolCapRewardToken: '0',\r\n      poolMintedRewardToken: '0',\r\n      poolRewardToken: '0',\r\n      networkName: \"Loading\",\r\n      rewardEndTime: '0',\r\n      rewardStartTime: '0',\r\n      distributedAmount: '0',\r\n      distributedPercentage: '0',\r\n      rewardEndTimeDate: '0',\r\n      rewardStartTimeDate: '0',\r\n      claimAmount: '0',\r\n      purseStakingUserReceipt: '0',\r\n      purseStakingUserPurse: '0',\r\n      purseStakingUserReward: '0',\r\n      purseStakingUserAllowance: '0',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let maincontent\r\n    let menucontent\r\n    let depositcontent\r\n    let oneinchContent\r\n    let distributionContent\r\n    let farmInfoContent\r\n    let stakeContent\r\n    maincontent = <Main\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      poolLength={this.state.poolLength}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      PURSEPrice={this.state.PURSEPrice}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      lpTokenInContract={this.state.lpTokenInContract}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      poolCapRewardToken={this.state.poolCapRewardToken}\r\n      poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n      poolRewardToken={this.state.poolRewardToken}\r\n      totalBurnAmount={this.state.totalBurnAmount}\r\n      sum30BurnAmount={this.state.sum30BurnAmount}\r\n      totalTransferAmount={this.state.totalTransferAmount}\r\n      sum30TransferAmount={this.state.sum30TransferAmount}\r\n      cumulateTransfer={this.state.cumulateTransfer}\r\n      cumulateBurn={this.state.cumulateBurn}\r\n    />\r\n    menucontent = <Menu\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      farmNetwork={this.state.farmNetwork}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      apyWeekly={this.state.apyWeekly}\r\n      apyMonthly={this.state.apyMonthly}\r\n      farmLoading={this.state.farmLoading}\r\n      aprloading={this.state.aprloading}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      setI={this.setI}\r\n      setTrigger={this.setTrigger}\r\n      harvest={this.harvest}\r\n      stakedBalance={this.state.stakedBalance}\r\n    />\r\n    depositcontent = <Deposit\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      i={this.state.i}\r\n      n={this.state.n}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      c={this.state.lpTokenSegmentAsymbol}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      lpTokenSegmentAllowance={this.state.lpTokenSegmentAllowance}\r\n      wallet={this.state.wallet}\r\n      farmNetwork={this.state.farmNetwork}\r\n      harvest={this.harvest}\r\n      approve={this.approve}\r\n      connectWallet={this.connectWallet}\r\n      walletConnect={this.state.walletConnect}\r\n    />\r\n    oneinchContent = <Oneinch\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      totalpendingReward={this.state.totalpendingReward}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      userSegmentInfo={this.state.userSegmentInfo}\r\n      poolSegmentInfo={this.state.poolSegmentInfo}\r\n      lpTokenSegmentBalance={this.state.lpTokenSegmentBalance}\r\n      pendingSegmentReward={this.state.pendingSegmentReward}\r\n      buttonPopup={this.state.buttonPopup}\r\n      farmNetwork={this.state.farmNetwork}\r\n      tvl={this.state.tvl}\r\n      apr={this.state.apr}\r\n      apyDaily={this.state.apyDaily}\r\n      apyWeekly={this.state.apyWeekly}\r\n      apyMonthly={this.state.apyMonthly}\r\n      farmLoading={this.state.farmLoading}\r\n      aprloading={this.state.aprloading}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      setI={this.setI}\r\n      setTrigger={this.setTrigger}\r\n      harvest={this.harvest}\r\n    />\r\n    farmInfoContent = <Farm\r\n      lpTokenBalance={this.state.lpTokenBalance}\r\n      purseTokenUpgradableBalance={this.state.purseTokenUpgradableBalance}\r\n      poolLength={this.state.poolLength}\r\n      deposit={this.deposit}\r\n      withdraw={this.withdraw}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n      lpTokenInContract={this.state.lpTokenInContract}\r\n      totalrewardperblock={this.state.totalrewardperblock}\r\n      poolCapRewardToken={this.state.poolCapRewardToken}\r\n      poolMintedRewardToken={this.state.poolMintedRewardToken}\r\n      poolRewardToken={this.state.poolRewardToken}\r\n    />\r\n    distributionContent = <Distribution\r\n      wallet={this.state.wallet}\r\n      walletConnect={this.state.walletConnect}\r\n      connectWallet={this.connectWallet}\r\n      checkClaimAmount={this.checkClaimAmount}\r\n      claimDistributePurse={this.claimDistributePurse}\r\n      account={this.state.account}\r\n      rewardEndTime={this.state.rewardEndTime}\r\n      rewardStartTime={this.state.rewardStartTime}\r\n      distributedAmount={this.state.distributedAmount}\r\n      distributedPercentage={this.state.distributedPercentage}\r\n      rewardStartTimeDate={this.state.rewardStartTimeDate}\r\n      rewardEndTimeDate={this.state.rewardEndTimeDate}\r\n      claimAmount={this.state.claimAmount}\r\n      totalTransferAmount={this.state.totalTransferAmount}\r\n      purseTokenTotalSupply={this.state.purseTokenTotalSupply}\r\n    />\r\n    stakeContent = <Stake\r\n      wallet={this.state.wallet}\r\n      walletConnect={this.state.walletConnect}\r\n      connectWallet={this.connectWallet}\r\n      account={this.state.account}\r\n      purseStaking={this.state.purseStaking}\r\n      purseStakingUserReceipt={this.state.purseStakingUserReceipt}\r\n      purseStakingUserPurse={this.state.purseStakingUserPurse}\r\n      purseStakingUserReward={this.state.purseStakingUserReward}\r\n      purseStakingUserAllowance={this.state.purseStakingUserAllowance}\r\n      stake={this.stake}\r\n      unstake={this.unstake}\r\n      checkPurseAmount={this.checkPurseAmount}\r\n      approvePurse = {this.approvePurse}\r\n    />\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navb\r\n            account={this.state.account}\r\n            first4Account={this.state.first4Account}\r\n            last4Account={this.state.last4Account}\r\n            wallet={this.state.wallet}\r\n            setWalletTrigger={this.setWalletTrigger}\r\n            loadWeb3={this.loadWeb3}\r\n            connectWallet={this.connectWallet}\r\n            WalletConnect={this.WalletConnect}\r\n            walletConnect={this.state.walletConnect}\r\n            WalletDisconnect={this.WalletDisconnect}\r\n            networkName={this.state.networkName}\r\n            PURSEPrice={this.state.PURSEPrice}\r\n          />\r\n          <div className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '1000px' }}>\r\n                <div className=\"content mr-auto ml-auto\">\r\n                  <Switch>\r\n                    <Route path=\"/\" exact > {maincontent} </Route>\r\n                    <Route path=\"/home\" exact > {maincontent} </Route>\r\n                    <Route path=\"/lpfarm/menu\" exact > {menucontent} </Route>\r\n                    <Route path=\"/lpfarm/farmInfo\" exact > {farmInfoContent} </Route>\r\n                    <Route path=\"/lpfarm/oneinch\" exact > {oneinchContent} </Route>\r\n                    <Route path=\"/distribution\" exact > {distributionContent} </Route>\r\n                    <Route path=\"/stake\" exact > {stakeContent} </Route>\r\n                    <Route path=\"/deposit\" exact > {depositcontent} </Route>\r\n                  </Switch>\r\n                  <Popup trigger={this.state.buttonPopup} setTrigger={this.setTrigger}>\r\n                    <div className=\"container-fluid\">{depositcontent}</div>\r\n                  </Popup>\r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}