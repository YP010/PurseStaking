{"ast":null,"code":"import _classCallCheck from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanping/Documents/LPRestakingFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanping/Documents/LPRestakingFarm/src/components/Menu.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport purse from '../purse.png';\nimport purse2 from '../purse2.png';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Buttons from 'react-bootstrap/Button';\nimport './App.css';\nimport Popup from 'reactjs-popup';\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"content\",\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/lpfarm/menu/\",\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Buttons, {\n        className: \"textPurpleMedium center hover\",\n        variant: \"outline\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }\n      }, \" PANCAKESWAP\")), /*#__PURE__*/React.createElement(Link, {\n        to: \"/lpfarm/oneinch/\",\n        style: {\n          textDecoration: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Buttons, {\n        className: \"textWhiteMedium center hover\",\n        variant: \"link\",\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, \" 1INCH\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: purse2,\n        height: \"180\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"textWhite center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 50\n        }\n      }, \"LP Restaking Farm\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        style: {\n          color: 'silver'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"\\xA0Stake \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 81\n        }\n      }, \"\\xA0Pancakeswap LP Tokens\\xA0\"), \" to earn PURSE!!!\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rowC center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-4 cardbody\",\n        style: {\n          minWidth: '350px',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, \"Your PURSE Balance\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 61\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 52\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }\n      }, \"Total Pending harvest\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      }), \"\\xA0PURSE\")))))), \" \\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-4 cardbody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body \",\n        style: {\n          minWidth: '350px',\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, \"Total PURSE Supply\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 61\n        }\n      }, parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')).toLocaleString('en-US', {\n        maximumFractionDigits: 0\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-left \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }\n      }, \"Total Reward/block\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"float-right \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }\n      }, window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether'), \"\\xA0PURSE\")))))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 68\n        }\n      }, /*#__PURE__*/React.createElement(\"big\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 71\n        }\n      }, \"Select Your Favourite pool entrees!\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        style: {\n          color: 'silver'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 69\n        }\n      }, \"\\xA0! Attention:\\xA0Be sure to familiar with protocol risks and fees before using the farms!\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), this.props.farmLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row floated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, this.props.poolSegmentInfo[0].map(function (poolSegmentInfo, key) {\n        var i = _this.props.poolSegmentInfo[0].indexOf(poolSegmentInfo);\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card mb-4 cardbody card-body text-center\",\n          style: {\n            maxWidth: '230px',\n            color: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: purse,\n          height: \"30\",\n          alt: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 49\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 87\n          }\n        }), /*#__PURE__*/React.createElement(\"b\", {\n          className: \"text\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }\n        }, _this.props.poolSegmentInfo[0][i].token[_this.props.farmNetwork][\"symbol\"], \"-\", _this.props.poolSegmentInfo[0][i].quoteToken[_this.props.farmNetwork][\"symbol\"]), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 71\n          }\n        }, \"Deposit\", /*#__PURE__*/React.createElement(\"small\", {\n          className: \"textSmall\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 85\n          }\n        }, _this.props.poolSegmentInfo[0][i].token[_this.props.farmNetwork][\"symbol\"], \"-\", _this.props.poolSegmentInfo[0][i].quoteToken[_this.props.farmNetwork][\"symbol\"], \" PANCAKE LP\"), \" to Earn PURSE\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          style: {\n            color: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 53\n          }\n        }, \" \", _this.props.aprloading ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"borderTop\",\n          style: {\n            marginTop: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 80\n          }\n        }, \"APR: \", parseFloat(_this.props.apr[0][i]).toLocaleString('en-US', {\n          maximumFractionDigits: 2\n        }), \" % \\xA0\")), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          trigger: function trigger(open) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                position: \"relative\",\n                top: '-1px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 69\n              }\n            }, /*#__PURE__*/React.createElement(BsFillQuestionCircleFill, {\n              size: 10,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 121\n              }\n            }));\n          },\n          on: \"hover\",\n          position: \"right center\",\n          offsetY: 0,\n          offsetX: 5,\n          contentStyle: {\n            padding: '5px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 66\n          }\n        }, \"APR are affected by the price of PURSE which has not yet stabilized. \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 69\n          }\n        }, \"If it shows 'NaN' or 'Infinity', it means currently the pool has no LP token staked. \"))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 80\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 67\n          }\n        }, \"APY: \", parseFloat(_this.props.apyDaily[0][i]).toLocaleString('en-US', {\n          maximumFractionDigits: 0\n        }), \" % \\xA0\")), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          trigger: function trigger(open) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                position: \"relative\",\n                top: '-1px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 69\n              }\n            }, /*#__PURE__*/React.createElement(BsFillQuestionCircleFill, {\n              size: 10,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 121\n              }\n            }));\n          },\n          on: \"hover\",\n          position: \"right center\",\n          offsetY: 0,\n          offsetX: 5,\n          contentStyle: {\n            padding: '5px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 66\n          }\n        }, \"APY are calculated based on the compound APR number. \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 69\n          }\n        }, \"The value shown on Farm Menu is based on daily compounding frequency. \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 69\n          }\n        }, \"For weekly and monthly compounding frequency, APY : \", parseFloat(_this.props.apyWeekly[0][i]).toFixed(0), \" / \", parseFloat(_this.props.apyMonthly[0][i]).toFixed(0), \" %\")))) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 67\n          }\n        }, \"APR:\")), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lds-dual-ring\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 93\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 104\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 115\n          }\n        })), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 133\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 67\n          }\n        }, \"APY:\")), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lds-dual-ring\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 93\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 104\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 115\n          }\n        }))), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 72\n          }\n        }, \"Bonus Multiplier: \", _this.props.poolSegmentInfo[0][i].bonusMultiplier, \"x \\xA0\", /*#__PURE__*/React.createElement(Popup, {\n          trigger: function trigger(open) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                position: \"relative\",\n                top: '-0.8px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 65\n              }\n            }, /*#__PURE__*/React.createElement(BsFillQuestionCircleFill, {\n              size: 10,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 119\n              }\n            }));\n          },\n          on: \"hover\",\n          position: \"right center\",\n          offsetY: 0,\n          offsetX: 5,\n          contentStyle: {\n            padding: '5px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 61\n          }\n        }, \"The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 215\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 61\n          }\n        }, \"For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 191\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textInfo mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 61\n          }\n        }, \"This amount is already included in all APR calculations for the farm.\")), \"\\xA0\")), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 198\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \" \",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 73\n          }\n        }, \"User LP Staked: \", parseFloat(_this.props.userSegmentInfo[0][i]).toLocaleString('en-US', {\n          maximumFractionDigits: 2\n        }))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 211\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \" \",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 73\n          }\n        }, \"Total LP Staked: \", parseFloat(_this.props.stakedBalance).toLocaleString('en-US', {\n          maximumFractionDigits: 0\n        }))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 204\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \" \",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 73\n          }\n        }, \"Purse Earned: \", parseFloat(_this.props.pendingSegmentReward[0][i]).toLocaleString('en-US', {\n          maximumFractionDigits: 0\n        }))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 214\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \" \",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 73\n          }\n        }, _this.props.aprloading ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 105\n          }\n        }, \"TVL: $ \", parseFloat(_this.props.tvl[0][i]).toLocaleString('en-US', {\n          maximumFractionDigits: 0\n        }), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 67\n          }\n        }, \"TVL:\")), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"lds-dual-ring\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 93\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 104\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 115\n          }\n        }))), \" \")), /*#__PURE__*/React.createElement(Buttons, {\n          variant: \"outline-info\",\n          size: \"sm\",\n          style: {\n            minWidth: '80px',\n            marginTop: '10px'\n          },\n          className: \"mb-2\",\n          onClick: function onClick() {\n            _this.props.setTrigger(true);\n\n            _this.props.setI(0, i);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 53\n          }\n        }, \"Select\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Buttons, {\n          variant: \"outline-success\",\n          type: \"submit\",\n          size: \"sm\",\n          style: {\n            minWidth: '80px'\n          },\n          onClick: function onClick(event) {\n            event.preventDefault();\n\n            _this.props.harvest(i, \"0\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 57\n          }\n        }, \"Harvest\")))))));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bounceball\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }), \" \\xA0\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"textLoadingSmall\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, \"NETWORK IS Loading...\")));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/yanping/Documents/LPRestakingFarm/src/components/Menu.js"],"names":["React","Component","Link","purse","purse2","ButtonGroup","Buttons","Popup","BsFillQuestionCircleFill","Menu","textDecoration","color","minWidth","parseFloat","window","web3Bsc","utils","fromWei","props","purseTokenUpgradableBalance","toLocaleString","maximumFractionDigits","totalpendingReward","purseTokenTotalSupply","totalrewardperblock","farmLoading","poolSegmentInfo","map","key","i","indexOf","maxWidth","token","farmNetwork","quoteToken","aprloading","marginTop","apr","open","position","top","padding","apyDaily","apyWeekly","toFixed","apyMonthly","bonusMultiplier","userSegmentInfo","stakedBalance","pendingSegmentReward","tvl","setTrigger","setI","event","preventDefault","harvest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport purse from '../purse.png'\r\nimport purse2 from '../purse2.png'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Buttons from 'react-bootstrap/Button'\r\nimport './App.css';\r\nimport Popup from 'reactjs-popup';\r\nimport { BsFillQuestionCircleFill } from 'react-icons/bs';\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"content\" className=\"mt-3\">\r\n                <div className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        <Link to=\"/lpfarm/menu/\" style={{ textDecoration: \"none\" }}>\r\n                            <Buttons className=\"textPurpleMedium center hover\" variant=\"outline\" size=\"lg\"> PANCAKESWAP</Buttons>\r\n                        </Link>\r\n                        <Link to=\"/lpfarm/oneinch/\" style={{ textDecoration: \"none\" }}>\r\n                            <Buttons className=\"textWhiteMedium center hover\" variant=\"link\" size=\"lg\"> 1INCH</Buttons>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div className=\"center img\">\r\n                    <img src={purse2} height='180' alt=\"\" />\r\n                </div>\r\n                <h1 className=\"textWhite center\"><b>LP Restaking Farm</b></h1>\r\n                <div className=\"center\" style={{ color: 'silver' }}>&nbsp;Stake <b>&nbsp;Pancakeswap LP Tokens&nbsp;</b> to earn PURSE!!!</div>\r\n                <br />\r\n\r\n                <div className=\"rowC center\">\r\n                    <div className=\"card mb-4 cardbody\" style={{ minWidth: '350px', color: 'white' }} >\r\n                        <div className=\"card-body\">\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Your PURSE Balance<br /><b>{parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenUpgradableBalance, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                            </span>\r\n                            <span>\r\n                                <small>\r\n                                    <span className=\"float-left\">Total Pending harvest</span>\r\n                                    <span className=\"float-right\">\r\n                                        <span>\r\n                                            {parseFloat(window.web3Bsc.utils.fromWei(this.props.totalpendingReward, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}&nbsp;PURSE\r\n                                        </span>\r\n                                    </span>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div> &nbsp;&nbsp;&nbsp;\r\n\r\n                    <div className=\"card mb-4 cardbody\" >\r\n                        <div className=\"card-body \" style={{ minWidth: '350px', color: 'white' }}>\r\n                            <span>\r\n                                <span className=\"float-left\">\r\n                                    Total PURSE Supply<br /><b>{parseFloat(window.web3Bsc.utils.fromWei(this.props.purseTokenTotalSupply, 'Ether')).toLocaleString('en-US', { maximumFractionDigits: 0 })}</b>\r\n                                    <div>\r\n                                    </div>\r\n                                </span><br /><br /><br />\r\n                                <span>\r\n                                    <small>\r\n                                        <span className=\"float-left \">Total Reward/block</span>\r\n                                        <span className=\"float-right \">\r\n                                            <span>\r\n                                                {window.web3Bsc.utils.fromWei(this.props.totalrewardperblock, 'Ether')}&nbsp;PURSE\r\n                                            </span>\r\n                                        </span>\r\n                                    </small>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"center\" style={{ color: 'white' }}><b><big>Select Your Favourite pool entrees!</big></b></div>\r\n                <div className=\"center\" style={{ color: 'silver' }}><small>&nbsp;! Attention:&nbsp;Be sure to familiar with protocol risks and fees before using the farms!</small></div>\r\n                <br />\r\n\r\n\r\n\r\n                {this.props.farmLoading ?\r\n                    <div className=\"row floated\" >\r\n                        {this.props.poolSegmentInfo[0].map((poolSegmentInfo, key) => {\r\n                            let i = this.props.poolSegmentInfo[0].indexOf(poolSegmentInfo)\r\n                            return (\r\n                                <div key={key}>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"card mb-4 cardbody card-body text-center\" style={{ maxWidth: '230px', color: 'white' }}>\r\n                                            <span>\r\n                                                <img src={purse} height='30' alt=\"\" /><br />\r\n                                                <b className=\"text\">{this.props.poolSegmentInfo[0][i].token[this.props.farmNetwork][\"symbol\"]}-{this.props.poolSegmentInfo[0][i].quoteToken[this.props.farmNetwork][\"symbol\"]}</b>\r\n                                                <div>\r\n                                                    <div className=\"\"><small>Deposit<small className=\"textSmall\">{this.props.poolSegmentInfo[0][i].token[this.props.farmNetwork][\"symbol\"]}-{this.props.poolSegmentInfo[0][i].quoteToken[this.props.farmNetwork][\"symbol\"]} PANCAKE LP</small> to Earn PURSE</small></div>\r\n\r\n                                                    <div className=\"\" style={{ color: 'white' }}> {this.props.aprloading ?\r\n                                                        <div className=\"borderTop\" style={{ marginTop: '8px' }}>\r\n                                                            <span className=\"\"><small>APR: {parseFloat(this.props.apr[0][i]).toLocaleString('en-US', { maximumFractionDigits: 2 })} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={0}\r\n                                                                    offsetX={5}\r\n                                                                    contentStyle={{ padding: '5px' }}\r\n                                                                ><span className=\"textInfo\">APR are affected by the price of PURSE which has not yet stabilized. </span>\r\n                                                                    <span className=\"textInfo mt-2\">If it shows 'NaN' or 'Infinity', it means currently the pool has no LP token staked. </span>\r\n                                                                </Popup></span><br />\r\n                                                            <span><small>APY: {parseFloat(this.props.apyDaily[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} % &nbsp;</small></span>\r\n                                                            <span className=\"\">\r\n                                                                <Popup trigger={open => (\r\n                                                                    <span style={{ position: \"relative\", top: '-1px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                                )}\r\n                                                                    on=\"hover\"\r\n                                                                    position=\"right center\"\r\n                                                                    offsetY={0}\r\n                                                                    offsetX={5}\r\n                                                                    contentStyle={{ padding: '5px' }}\r\n                                                                ><span className=\"textInfo\">APY are calculated based on the compound APR number. </span>\r\n                                                                    <span className=\"textInfo mt-2\">The value shown on Farm Menu is based on daily compounding frequency. </span>\r\n                                                                    <span className=\"textInfo mt-2\">For weekly and monthly compounding frequency, APY : {parseFloat(this.props.apyWeekly[0][i]).toFixed(0)} / {parseFloat(this.props.apyMonthly[0][i]).toFixed(0)} %</span>\r\n                                                                </Popup></span></div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>APR:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span><br />\r\n                                                            <span><small>APY:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </div>\r\n\r\n                                                    <span className=\"\"><small>Bonus Multiplier: {this.props.poolSegmentInfo[0][i].bonusMultiplier}x &nbsp;\r\n                                                        <Popup\r\n                                                            trigger={open => (\r\n                                                                <span style={{ position: \"relative\", top: '-0.8px' }}><BsFillQuestionCircleFill size={10} /></span>\r\n                                                            )}\r\n                                                            on=\"hover\"\r\n                                                            position=\"right center\"\r\n                                                            offsetY={0}\r\n                                                            offsetX={5}\r\n                                                            contentStyle={{ padding: '5px' }}\r\n                                                        >\r\n                                                            <span className=\"textInfo\">The Multiplier represents the proportion of PURSE rewards each farm receives, as a proportion of the PURSE produced each block.<br /></span>\r\n                                                            <span className=\"textInfo mt-2\">For example, if a 1x farm received 1 PURSE per block, a 40x farm would receive 40 PURSE per block.<br /></span>\r\n                                                            <span className=\"textInfo mt-2\">This amount is already included in all APR calculations for the farm.</span></Popup>&nbsp;</small></span><br />\r\n                                                    <span className=\" \"><small>User LP Staked: {parseFloat(this.props.userSegmentInfo[0][i]).toLocaleString('en-US', { maximumFractionDigits: 2 })}</small></span><br />\r\n                                                    <span className=\" \"><small>Total LP Staked: {parseFloat(this.props.stakedBalance).toLocaleString('en-US', { maximumFractionDigits: 0 })}</small></span><br />\r\n                                                    <span className=\" \"><small>Purse Earned: {parseFloat(this.props.pendingSegmentReward[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })}</small></span><br />\r\n                                                    <span className=\" \"><small>{this.props.aprloading ? <div className=\"\">TVL: $ {parseFloat(this.props.tvl[0][i]).toLocaleString('en-US', { maximumFractionDigits: 0 })} </div> :\r\n                                                        <div className=\"\">\r\n                                                            <span><small>TVL:</small></span>&nbsp;&nbsp;\r\n                                                            <span className=\"lds-dual-ring\"><div></div><div></div><div></div></span>\r\n                                                        </div>} </small></span>\r\n                                                    <Buttons variant=\"outline-info\" size=\"sm\" style={{ minWidth: '80px', marginTop: '10px' }} className=\"mb-2\" onClick={() => {\r\n                                                        this.props.setTrigger(true)\r\n                                                        this.props.setI(0, i)\r\n                                                    }}>Select</Buttons>\r\n                                                    <div >\r\n                                                        <Buttons\r\n                                                            variant=\"outline-success\"\r\n                                                            type=\"submit\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ minWidth: '80px' }}\r\n                                                            onClick={(event) => {\r\n                                                                event.preventDefault()\r\n                                                                this.props.harvest(i, \"0\")\r\n                                                            }}>\r\n                                                            Harvest\r\n                                                        </Buttons>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"center\">\r\n                        <div className=\"bounceball\"></div> &nbsp;\r\n                        <div className=\"textLoadingSmall\">NETWORK IS Loading...</div>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}